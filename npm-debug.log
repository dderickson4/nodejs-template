0 info it worked if it ends with ok
1 verbose cli [ '/usr/local/Cellar/node/0.10.2/bin/node',
1 verbose cli   '/usr/local/bin/npm',
1 verbose cli   'install',
1 verbose cli   'nodemailer' ]
2 info using npm@1.2.15
3 info using node@v0.10.2
4 verbose read json /Users/david/nodejs-template/package.json
5 verbose read json /Users/david/nodejs-template/node_modules/angular/package.json
6 verbose read json /Users/david/nodejs-template/node_modules/asEvented/package.json
7 verbose read json /Users/david/nodejs-template/node_modules/async/package.json
8 verbose read json /Users/david/nodejs-template/node_modules/bcrypt/package.json
9 verbose read json /Users/david/nodejs-template/node_modules/connect-redis/package.json
10 verbose read json /Users/david/nodejs-template/node_modules/ejs/package.json
11 verbose read json /Users/david/nodejs-template/node_modules/ejs-locals/package.json
12 verbose read json /Users/david/nodejs-template/node_modules/express/package.json
13 verbose read json /Users/david/nodejs-template/node_modules/hiredis/package.json
14 verbose read json /Users/david/nodejs-template/node_modules/hiredis alias/package.json
15 verbose read json /Users/david/nodejs-template/node_modules/mysql/package.json
16 verbose read json /Users/david/nodejs-template/node_modules/node-uuid/package.json
17 verbose read json /Users/david/nodejs-template/node_modules/nodemailer/package.json
18 verbose read json /Users/david/nodejs-template/node_modules/nvm/package.json
19 verbose read json /Users/david/nodejs-template/node_modules/redis/package.json
20 verbose read json /Users/david/nodejs-template/node_modules/redis-node/package.json
21 verbose read json /Users/david/nodejs-template/node_modules/socket.io/package.json
22 verbose read json /Users/david/nodejs-template/node_modules/socket.io-client/package.json
23 verbose from cache /Users/david/nodejs-template/package.json
24 verbose readDependencies using package.json deps
25 verbose cache add [ 'nodemailer', null ]
26 verbose cache add name=undefined spec="nodemailer" args=["nodemailer",null]
27 verbose parsed url { protocol: null,
27 verbose parsed url   slashes: null,
27 verbose parsed url   auth: null,
27 verbose parsed url   host: null,
27 verbose parsed url   port: null,
27 verbose parsed url   hostname: null,
27 verbose parsed url   hash: null,
27 verbose parsed url   search: null,
27 verbose parsed url   query: null,
27 verbose parsed url   pathname: 'nodemailer',
27 verbose parsed url   path: 'nodemailer',
27 verbose parsed url   href: 'nodemailer' }
28 silly lockFile 2e159dcb-nodemailer nodemailer
29 verbose lock nodemailer /Users/david/.npm/2e159dcb-nodemailer.lock
30 silly lockFile 2e159dcb-nodemailer nodemailer
31 silly lockFile 2e159dcb-nodemailer nodemailer
32 verbose addNamed [ 'nodemailer', '' ]
33 verbose addNamed [ null, '' ]
34 silly lockFile a9602281-nodemailer nodemailer@
35 verbose lock nodemailer@ /Users/david/.npm/a9602281-nodemailer.lock
36 silly addNameRange { name: 'nodemailer', range: '', hasData: false }
37 verbose url raw nodemailer
38 verbose url resolving [ 'https://registry.npmjs.org/', './nodemailer' ]
39 verbose url resolved https://registry.npmjs.org/nodemailer
40 info trying registry request attempt 1 at 09:51:18
41 verbose etag "2CMEDHYIS7UQHPIFJVY8XFVWA"
42 http GET https://registry.npmjs.org/nodemailer
43 http 304 https://registry.npmjs.org/nodemailer
44 silly registry.get cb [ 304,
44 silly registry.get   { date: 'Tue, 04 Oct 2016 16:51:18 GMT',
44 silly registry.get     via: '1.1 varnish',
44 silly registry.get     'cache-control': 'max-age=300',
44 silly registry.get     etag: '"2CMEDHYIS7UQHPIFJVY8XFVWA"',
44 silly registry.get     age: '0',
44 silly registry.get     connection: 'keep-alive',
44 silly registry.get     'x-served-by': 'cache-sea1922-SEA',
44 silly registry.get     'x-cache': 'HIT',
44 silly registry.get     'x-cache-hits': '1',
44 silly registry.get     'x-timer': 'S1475599878.821458,VS0,VE190',
44 silly registry.get     vary: 'Accept-Encoding' } ]
45 verbose etag nodemailer from cache
46 silly addNameRange number 2 { name: 'nodemailer', range: '', hasData: true }
47 silly addNameRange versions [ 'nodemailer',
47 silly addNameRange   [ '0.1.1',
47 silly addNameRange     '0.1.2',
47 silly addNameRange     '0.1.3',
47 silly addNameRange     '0.1.4',
47 silly addNameRange     '0.1.5',
47 silly addNameRange     '0.1.6',
47 silly addNameRange     '0.1.7',
47 silly addNameRange     '0.1.8',
47 silly addNameRange     '0.1.9',
47 silly addNameRange     '0.1.10',
47 silly addNameRange     '0.1.11',
47 silly addNameRange     '0.1.12',
47 silly addNameRange     '0.1.13',
47 silly addNameRange     '0.1.14',
47 silly addNameRange     '0.1.15',
47 silly addNameRange     '0.1.16',
47 silly addNameRange     '0.1.17',
47 silly addNameRange     '0.1.18',
47 silly addNameRange     '0.1.19',
47 silly addNameRange     '0.1.20',
47 silly addNameRange     '0.1.21',
47 silly addNameRange     '0.1.22',
47 silly addNameRange     '0.1.23',
47 silly addNameRange     '0.1.24',
47 silly addNameRange     '0.2.0',
47 silly addNameRange     '0.2.1',
47 silly addNameRange     '0.2.2',
47 silly addNameRange     '0.2.3',
47 silly addNameRange     '0.2.4',
47 silly addNameRange     '0.3.0',
47 silly addNameRange     '0.3.1',
47 silly addNameRange     '0.3.2',
47 silly addNameRange     '0.3.3',
47 silly addNameRange     '0.3.4',
47 silly addNameRange     '0.3.5',
47 silly addNameRange     '0.3.6',
47 silly addNameRange     '0.3.7',
47 silly addNameRange     '0.3.8',
47 silly addNameRange     '0.3.9',
47 silly addNameRange     '0.3.10',
47 silly addNameRange     '0.3.11',
47 silly addNameRange     '0.3.12',
47 silly addNameRange     '0.3.13',
47 silly addNameRange     '0.3.14',
47 silly addNameRange     '0.3.15',
47 silly addNameRange     '0.3.16',
47 silly addNameRange     '0.3.17',
47 silly addNameRange     '0.3.18',
47 silly addNameRange     '0.3.19',
47 silly addNameRange     '0.3.20',
47 silly addNameRange     '0.3.21',
47 silly addNameRange     '0.3.22',
47 silly addNameRange     '0.3.23',
47 silly addNameRange     '0.3.24',
47 silly addNameRange     '0.3.25',
47 silly addNameRange     '0.3.26',
47 silly addNameRange     '0.3.27',
47 silly addNameRange     '0.3.28',
47 silly addNameRange     '0.3.29',
47 silly addNameRange     '0.3.30',
47 silly addNameRange     '0.3.31',
47 silly addNameRange     '0.3.32',
47 silly addNameRange     '0.3.33',
47 silly addNameRange     '0.3.34',
47 silly addNameRange     '0.3.35',
47 silly addNameRange     '0.3.37',
47 silly addNameRange     '0.3.38',
47 silly addNameRange     '0.3.39',
47 silly addNameRange     '0.3.40',
47 silly addNameRange     '0.3.41',
47 silly addNameRange     '0.3.42',
47 silly addNameRange     '0.3.43',
47 silly addNameRange     '0.3.44',
47 silly addNameRange     '0.4.0',
47 silly addNameRange     '0.4.1',
47 silly addNameRange     '0.4.2',
47 silly addNameRange     '0.4.3',
47 silly addNameRange     '0.4.4',
47 silly addNameRange     '0.5.0',
47 silly addNameRange     '0.5.1',
47 silly addNameRange     '0.5.2',
47 silly addNameRange     '0.5.3',
47 silly addNameRange     '0.5.4',
47 silly addNameRange     '0.5.5',
47 silly addNameRange     '0.5.6',
47 silly addNameRange     '0.5.7',
47 silly addNameRange     '0.5.8',
47 silly addNameRange     '0.5.9',
47 silly addNameRange     '0.5.10',
47 silly addNameRange     '0.5.11',
47 silly addNameRange     '0.5.12',
47 silly addNameRange     '0.5.13',
47 silly addNameRange     '0.5.14',
47 silly addNameRange     '0.5.15',
47 silly addNameRange     '0.6.0',
47 silly addNameRange     '0.6.1',
47 silly addNameRange     '0.6.2',
47 silly addNameRange     '0.6.3',
47 silly addNameRange     '0.6.4',
47 silly addNameRange     '0.6.5',
47 silly addNameRange     '0.7.0',
47 silly addNameRange     '0.7.1',
47 silly addNameRange     '1.0.0-rc.1',
47 silly addNameRange     '1.0.0',
47 silly addNameRange     '1.0.1',
47 silly addNameRange     '1.0.2',
47 silly addNameRange     '1.0.3',
47 silly addNameRange     '1.0.4',
47 silly addNameRange     '1.1.0',
47 silly addNameRange     '1.1.1',
47 silly addNameRange     '1.1.2',
47 silly addNameRange     '1.2.0',
47 silly addNameRange     '1.2.1',
47 silly addNameRange     '1.2.2',
47 silly addNameRange     '1.3.0',
47 silly addNameRange     '1.3.1',
47 silly addNameRange     '1.3.2',
47 silly addNameRange     '1.3.3',
47 silly addNameRange     '1.3.4',
47 silly addNameRange     '1.4.0',
47 silly addNameRange     '1.5.0',
47 silly addNameRange     '1.6.0',
47 silly addNameRange     '1.7.0',
47 silly addNameRange     '1.8.0',
47 silly addNameRange     '1.9.0',
47 silly addNameRange     '1.10.0',
47 silly addNameRange     '1.11.0',
47 silly addNameRange     '2.0.0-beta.0',
47 silly addNameRange     '2.0.0-beta.1',
47 silly addNameRange     '2.0.0-beta.2',
47 silly addNameRange     '2.0.0-rc.1',
47 silly addNameRange     '2.0.0-rc.2',
47 silly addNameRange     '2.0.0',
47 silly addNameRange     '2.1.0-beta.0',
47 silly addNameRange     '2.1.0-beta.1',
47 silly addNameRange     '2.1.0-beta.2',
47 silly addNameRange     '2.1.0-beta.3',
47 silly addNameRange     '2.1.0-rc.0',
47 silly addNameRange     '2.1.0-rc.1',
47 silly addNameRange     '2.1.0',
47 silly addNameRange     '2.2.0-beta.0',
47 silly addNameRange     '2.2.0-beta.1',
47 silly addNameRange     '2.2.0-beta.2',
47 silly addNameRange     '2.2.0-beta.3',
47 silly addNameRange     '2.2.0-beta.4',
47 silly addNameRange     '2.2.0-beta.5',
47 silly addNameRange     '2.2.0-beta.6',
47 silly addNameRange     '2.2.0-rc.7',
47 silly addNameRange     '2.2.0-rc.8',
47 silly addNameRange     '2.2.0-rc.9',
47 silly addNameRange     '2.2.0-rc.10',
47 silly addNameRange     '2.2.0-rc.11',
47 silly addNameRange     '2.2.0',
47 silly addNameRange     '2.2.1',
47 silly addNameRange     '2.3.0-beta.0',
47 silly addNameRange     '2.3.0-beta.1',
47 silly addNameRange     '2.3.0-rc.2',
47 silly addNameRange     '2.3.0-rc.3',
47 silly addNameRange     '2.3.0',
47 silly addNameRange     '2.3.1-rc.0',
47 silly addNameRange     '2.3.1',
47 silly addNameRange     '2.3.2',
47 silly addNameRange     '2.4.0-beta.0',
47 silly addNameRange     '2.4.0',
47 silly addNameRange     '2.4.1',
47 silly addNameRange     '2.4.2',
47 silly addNameRange     '2.5.0',
47 silly addNameRange     '2.6.0',
47 silly addNameRange     '2.6.1',
47 silly addNameRange     '2.6.2',
47 silly addNameRange     '2.6.3',
47 silly addNameRange     '2.6.4' ] ]
48 verbose addNamed [ 'nodemailer', '2.6.4' ]
49 verbose addNamed [ '2.6.4', '2.6.4' ]
50 silly lockFile dad9da43-nodemailer-2-6-4 nodemailer@2.6.4
51 verbose lock nodemailer@2.6.4 /Users/david/.npm/dad9da43-nodemailer-2-6-4.lock
52 verbose read json /Users/david/.npm/nodemailer/2.6.4/package/package.json
53 silly lockFile dad9da43-nodemailer-2-6-4 nodemailer@2.6.4
54 silly lockFile dad9da43-nodemailer-2-6-4 nodemailer@2.6.4
55 silly lockFile a9602281-nodemailer nodemailer@
56 silly lockFile a9602281-nodemailer nodemailer@
57 silly resolved [ { name: 'nodemailer',
57 silly resolved     version: '2.6.4',
57 silly resolved     description: 'Easy as cake e-mail sending from your Node.js applications',
57 silly resolved     main: 'lib/nodemailer.js',
57 silly resolved     homepage: 'https://nodemailer.com/',
57 silly resolved     scripts: { test: 'grunt mochaTest' },
57 silly resolved     repository: { type: 'git', url: 'https://nodemailer.com/' },
57 silly resolved     keywords: [ 'e-mail', 'mime', 'email', 'mail', 'sendmail', 'ses', 'smtp' ],
57 silly resolved     author: { name: 'Andris Reinman' },
57 silly resolved     license: 'MIT',
57 silly resolved     bugs: { url: 'https://github.com/nodemailer/nodemailer/issues' },
57 silly resolved     dependencies:
57 silly resolved      { libmime: '2.1.0',
57 silly resolved        mailcomposer: '3.12.0',
57 silly resolved        'nodemailer-direct-transport': '3.3.2',
57 silly resolved        'nodemailer-shared': '1.1.0',
57 silly resolved        'nodemailer-smtp-pool': '2.8.2',
57 silly resolved        'nodemailer-smtp-transport': '2.7.2',
57 silly resolved        socks: '1.1.9' },
57 silly resolved     devDependencies:
57 silly resolved      { amqp: '^0.2.6',
57 silly resolved        chai: '^3.5.0',
57 silly resolved        'email-templates': '^2.4.1',
57 silly resolved        grunt: '^1.0.1',
57 silly resolved        'grunt-cli': '^1.2.0',
57 silly resolved        'grunt-eslint': '^19.0.0',
57 silly resolved        'grunt-mocha-test': '^0.12.7',
57 silly resolved        handlebars: '^4.0.5',
57 silly resolved        mocha: '^3.0.2',
57 silly resolved        'nodemailer-dkim': '^1.0.4',
57 silly resolved        'nodemailer-markdown': '^1.0.0',
57 silly resolved        'nodemailer-stub-transport': '^1.1.0',
57 silly resolved        'proxy-test-server': '^1.0.0',
57 silly resolved        sinon: '^1.17.5',
57 silly resolved        'smtp-server': '^1.14.2',
57 silly resolved        'swig-email-templates': '^3.0.0' },
57 silly resolved     engines: { node: '>=0.10.0' },
57 silly resolved     readme: '![Nodemailer](https://raw.githubusercontent.com/nodemailer/nodemailer/master/assets/nm_logo_200x136.png)\n\nSend e-mails from Node.js – easy as cake! 🍰✉️\n\n<a href="https://gitter.im/nodemailer/nodemailer?utm_source=badge&utm_medium=badge&utm_campaign=pr-badge&utm_content=badge"><img src="https://badges.gitter.im/Join Chat.svg" alt="Gitter chat" height="18"></a> <a href="http://travis-ci.org/nodemailer/nodemailer"><img src="https://secure.travis-ci.org/nodemailer/nodemailer.svg" alt="Build Status" height="18"></a> <a href="http://badge.fury.io/js/nodemailer"><img src="https://badge.fury.io/js/nodemailer.svg" alt="NPM version" height="18"></a> <a href="https://www.npmjs.com/package/nodemailer"><img src="https://img.shields.io/npm/dt/nodemailer.svg" alt="NPM downloads" height="18"></a>\n\n## Other similar packages you might be interested in\n\n  * **[smtp-server](https://github.com/andris9/smtp-server)** – add SMTP server interface to your application\n  * **[smtp-server](https://github.com/nodemailer/smtp-connection)** – connect to SMTP servers from your application\n  * **[zone-mta](https://github.com/zone-eu/zone-mta)** – full featured outbound MTA built using smtp-connection and smtp-server modules\n\n# Notes and information\n## Nodemailer supports\n  - **Node.js 0.10+**, no ES6 shenanigans used that would break your production app\n  - **Unicode** to use any characters, including full emoji support 👻\n  - **Windows** – you can install it with _npm_ on Windows just like any other module, there are no compiled dependencies. Use it from Azure or from your Windows box hassle free.\n  - **HTML content** as well as **plain text** alternative\n  - **Attachments** (including attachment **streaming** for sending larger files)\n  - **Embedded images** in HTML\n  - Secure e-mail delivery using **SSL/STARTTLS**\n  - Different **transport methods**, either using built-in SMTP transports or from external plugins\n  - Custom **plugin support** for manipulating messages (add DKIM signatures, use markdown content instead of HTML etc.)\n  - Sane **XOAUTH2** login with automatic access token generation (and feedback about the updated tokens)\n  - Simple built-in **templating** using [node-email-templates](https://github.com/niftylettuce/node-email-templates) or custom renderer\n  - **Proxies** for SMTP connections (SOCKS, HTTP and custom connections)\n\n> See Nodemailer [homepage](http://nodemailer.com/) for complete documentation\n\n## Support Nodemailer development\n[![Donate to author](https://www.paypalobjects.com/en_US/i/btn/btn_donate_SM.gif)](https://www.paypal.com/cgi-bin/webscr?cmd=_s-xclick&hosted_button_id=DB26KWR2BQX5W)\n\nIf you want to support with Bitcoins, then my wallet address is `15Z8ADxhssKUiwP3jbbqJwA21744KMCfTM`\n\n# TL;DR Usage Example\nThis is a complete example to send an e-mail with plaintext and HTML body\n\n```javascript\nvar nodemailer = require(\'nodemailer\');\n\n// create reusable transporter object using the default SMTP transport\nvar transporter = nodemailer.createTransport(\'smtps://user%40gmail.com:pass@smtp.gmail.com\');\n\n// setup e-mail data with unicode symbols\nvar mailOptions = {\n    from: \'"Fred Foo 👥" <foo@blurdybloop.com>\', // sender address\n    to: \'bar@blurdybloop.com, baz@blurdybloop.com\', // list of receivers\n    subject: \'Hello ✔\', // Subject line\n    text: \'Hello world 🐴\', // plaintext body\n    html: \'<b>Hello world 🐴</b>\' // html body\n};\n\n// send mail with defined transport object\ntransporter.sendMail(mailOptions, function(error, info){\n    if(error){\n        return console.log(error);\n    }\n    console.log(\'Message sent: \' + info.response);\n});\n```\n\n> To use Gmail you may need to configure ["Allow Less Secure Apps"](https://www.google.com/settings/security/lesssecureapps) in your Gmail account unless you are using 2FA in which case you would have to create an [Application Specific](https://security.google.com/settings/security/apppasswords) password. You also may need to unlock your account with ["Allow access to your Google account"](https://accounts.google.com/DisplayUnlockCaptcha) to use SMTP.\n\n# Setting up\nInstall with npm\n\n```\nnpm install nodemailer\n```\n\nTo send e-mails you need a transporter object\n\n```javascript\nvar transporter = nodemailer.createTransport(transport[, defaults])\n```\n\nWhere\n  - **transporter** is going to be an object that is able to send mail\n  - **transport** is the transport configuration object, connection url or a transport plugin instance\n  - **defaults** is an object that defines default values for mail options\n\n> You have to create the transporter object only once. If you already have a transporter object you can use it to send mail as much as you like.\n\n## Send using SMTP\n\n### SMTP? Say what?\n\nYou might wonder why you would need to set something up while in comparison\nPHP\'s [mail](http://php.net/manual/en/function.mail.php) command works out of\nthe box with no special configuration whatsoever. Just call `mail(...)` and\nyou\'re already sending mail. So what\'s going on in Node.js?\n\nThe difference is in the software stack required for your application to work.\nWhile Node.js stack is thin, all you need for your app to work is the *node*\nbinary, then PHP\'s stack is fat. The server you\'re running your PHP code on has\nseveral different components installed. Firstly the PHP interpreter itself. Then\nthere\'s some kind of web server, most probably Apache or Nginx. Web server needs\nsome way to interact with the PHP interpreter, so you have a CGI process\nmanager. There might be MySQL also running in the same host. Depending on the\ninstallation type you might even have imagemagick executables or other helpers\nlying around somewhere. And finally, you have the *sendmail* binary.\n\nWhat PHP\'s `mail()` call actually does is that it passes your mail data to\nsendmail\'s *stdin* and thats it, no magic involved. *sendmail* does all the\nheavy lifting of queueing your message and trying to send it to the recipients\'\nMX mail server. Usually this works because the server is an actual web server\naccessible from the web and has also gathered some mail sending reputation\nbecause PHP web hosts have been around for, like, forever.\n\nNode.js apps on the other hand might run wherever, usually on some really new\nVPS behind an IP address that has no sending reputation at all. Or the IP is\ndynamically allocated which is the fastest way to get rejected while trying to\nsend mail. So while you might actually emulate the same behavior with Nodemailer\nby using either the [sendmail transport](https://github.com/andris9/nodemailer-sendmail-transport)\nor so called *direct* transport, then this does not guarantee yet any\ndeliverability. Recipient\'s server might reject connection from your app because\nyour server has dynamic IP address. Or it might reject or send your mail\nstraight to spam mailbox because your IP address is not yet trusted.\n\nSo the reason why PHP\'s `mail` works and Node.js\'s does not is that your PHP\nhosting provider has put in a lot of work over several years to provide a solid\nmail sending infrastructure. It is not about PHP at all, it is about the\ninfrastructure around it.\n\n### Set up SMTP\n\nYou can use 3 kinds of different approaches when using SMTP\n\n  1. *normal* usage. No specific configuration needed. For every e-mail a new SMTP connection is created and message is sent immediately. Used when the amount of sent messages is low.\n  1. *pooled* usage. Set *pool* option to `true` to use it. A fixed amount of pooled connections are used to send messages. Useful when you have a large number of messages that you want to send in batches.\n  1. *direct* usage. Set *direct* option to `true` to use it. SMTP connection is opened directly to recipients MX server, skipping any local SMTP relays. useful when you do not have a SMTP relay to use. Riskier though since messages from untrusted servers usually end up in the Spam folder.\n\n```javascript\nvar transporter = nodemailer.createTransport(options[, defaults])\n```\n\nWhere\n\n  * **options** defines connection data\n    * **options.pool** if set to `true` uses pooled connections (defaults to `false`), otherwise creates a new connection for every e-mail.\n    * **options.direct** if set to `true`, bypasses MTA relay and connects directly to recipients MX. Easier to set up but has higher chances of ending up in the Spam folder\n    * **options.service** can be set to the name of a well-known service so you don\'t have to input the `port`, `host`, and `secure` options (see [Using well-known services](#using-well-known-services))\n    * **options.port** is the port to connect to (defaults to 25 or 465)\n    * **options.host** is the hostname or IP address to connect to (defaults to `\'localhost\'`)\n    * **options.secure** if `true`the connection will only use TLS. If `false` (the default), TLS may still be upgraded to if available via the STARTTLS command.\n    * **options.ignoreTLS** if this is `true` and `secure` is false, TLS will not be used (either to connect, or as a STARTTLS connection upgrade command).\n    * **options.requireTLS** if this is `true` and `secure` is false, it forces Nodemailer to use STARTTLS even if the server does not advertise support for it.\n    * **options.tls** defines additional [node.js TLSSocket options](https://nodejs.org/api/tls.html#tls_class_tls_tlssocket) to be passed to the socket constructor, eg. *{rejectUnauthorized: true}*.\n    * **options.auth** defines authentication data (see [authentication](#authentication) section below)\n    * **options.authMethod** defines preferred authentication method, eg. \'PLAIN\'\n    * **options.name** optional hostname of the client, used for identifying to the server\n    * **options.localAddress** is the local interface to bind to for network connections\n    * **options.connectionTimeout** how many milliseconds to wait for the connection to establish\n    * **options.greetingTimeout** how many milliseconds to wait for the greeting after connection is established\n    * **options.socketTimeout** how many milliseconds of inactivity to allow\n    * **options.logger** optional [bunyan](https://github.com/trentm/node-bunyan) compatible logger instance. If set to `true` then logs to console. If value is not set or is `false` then nothing is logged\n    * **options.debug** if set to true, then logs SMTP traffic, otherwise logs only transaction events. This option requires **options.logger** to be set, otherwise there is nowhere to log the transaction data\n    * **options.maxConnections** available only if *pool* is set to `true`. (defaults to 5) is the count of maximum simultaneous connections to make against the SMTP server\n    * **options.maxMessages** available only if *pool* is set to `true`. (defaults to 100) limits the message count to be sent using a single connection. After maxMessages messages the connection is dropped and a new one is created for the following messages\n    * **options.rateLimit** available only if *pool* is set to `true`. (defaults to `false`) limits the message count to be sent in a second. Once rateLimit is reached, sending is paused until the end of the second. This limit is shared between connections, so if one connection uses up the limit, then other connections are paused as well\n    * **options.disableFileAccess** if true, then does not allow to use files as content. Use it when you want to use JSON data from untrusted source as the email. If an attachment or message node tries to fetch something from a file the sending returns an error\n    * **options.disableUrlAccess** if true, then does not allow to use Urls as content\n\n**Examples**\n\n```javascript\nvar smtpConfig = {\n    host: \'smtp.gmail.com\',\n    port: 465,\n    secure: true, // use SSL\n    auth: {\n        user: \'user@gmail.com\',\n        pass: \'pass\'\n    }\n};\n\nvar poolConfig = {\n    pool: true,\n    host: \'smtp.gmail.com\',\n    port: 465,\n    secure: true, // use SSL\n    auth: {\n        user: \'user@gmail.com\',\n        pass: \'pass\'\n    }\n};\n\nvar directConfig = {\n    name: \'hostname\' // must be the same that can be reverse resolved by DNS for your IP\n};\n```\n\nAlternatively you could use connection url. Use `smtp:`, `smtps:` or `direct:` as the protocol.\n\n```javascript\nvar smtpConfig = \'smtps://user%40gmail.com:pass@smtp.gmail.com\';\nvar poolConfig = \'smtps://user%40gmail.com:pass@smtp.gmail.com/?pool=true\';\nvar directConfig = \'direct:?name=hostname\';\n```\n\n### Proxy support\n\nNodemailer supports out of the box HTTP and SOCKS proxies for SMTP connections with the `proxy` configuration option. You can also use a custom connection handler with the `getSocket` method.\n\nProxy configuration is provided as a connection url where used protocol defines proxy protocol (eg. `\'socks://hostname:port\'` for a SOCKS5 proxy). You can also use authentication by passing proxy username and password into the configuration url (eg `\'socks://username:password@hostname:port\'`)\n\n#### HTTP CONNECT tunnel\n\nHTTP proxy must support CONNECT tunnels (also called "SSL support") to SMTP ports. To use a HTTP/S server, provide a `proxy` option to SMTP configuration with the HTTP proxy configuration URL.\n\n```javascript\nvar smtpConfig = {\n    host: \'smtp.gmail.com\',\n    port: 465,\n    ...,\n    //proxy config\n    // assumes a HTTP proxy running on port 3128\n    proxy: \'http://localhost:3128/\'\n};\n```\n\nPossible protocol values for the HTTP proxy:\n\n  * `\'http:\'` if the proxy is running in a plaintext server\n  * `\'https:\'` if the proxy is running in a secure server\n\n> NB! Proxy protocol (http/s) does not affect how SMTP connection is secured or not\n\nSee an example of using a HTTP proxy [here](examples/proxy/http-proxy.js).\n\n#### SOCKS 4/5\n\nTo use a HTTP/S server, provide a `proxy` option to SMTP configuration with the SOCKS4/5 proxy configuration URL.\n\n```javascript\nvar smtpConfig = {\n    host: \'smtp.gmail.com\',\n    port: 465,\n    ...,\n    //proxy config\n    // assumes a SOCKS5 proxy running on port 1080\n    proxy: \'socks5://localhost:1080/\'\n};\n```\n\n> **NB!** When using SOCKS4, only an ipv4 address can be used\n\nPossible protocol values for the SOCKS proxy:\n\n  * `\'socks4:\'` or `\'socks4a:\'` for a SOCKS4 proxy\n  * `\'socks5:\'` or `\'socks:\'` for a SOCKS5 proxy\n\nSee an example of using a SOCKS proxy [here](examples/proxy/socks-proxy.js).\n\n#### Custom connection handler\n\nIf you do not want to use SOCKS or HTTP proxies then you can alternatively provide a custom\nproxy handling code with the `getSocket` method. In this case you should initiate a new\nsocket yourself and pass it to Nodemailer for usage.\n\n```javascript\n// This method is called every time Nodemailer needs a new\n// connection against the SMTP server\ntransporter.getSocket = function(options, callback){\n    getProxySocketSomehow(options.port, options.host, function(err, socket){\n        if(err){\n            return callback(err);\n        }\n        callback(null, {\n            connection: socket\n        });\n    });\n};\n```\n\nNormally proxies provide plaintext sockets, so if the connection is supposed to use TLS\nthen Nodemailer upgrades the socket from plaintext to TLS itself. If the socket is\nalready upgraded then you can pass additional option `secured: true` to prevent Nodemailer\nfrom upgrading the already upgraded socket.\n\n```javascript\ncallback(null, {\n    connection: socket,\n    secured: true\n});\n```\n\nSee complete example using a custom socket connector [here](examples/proxy/custom-proxy.js).\n\n### Events\n\n#### Event:\'idle\'\n\nApplies to pooled SMTP connections. Emitted by the transport object if connection pool has free connection slots. Check if a connection is still available with `isIdle()` method (returns `true` if a connection is still available). This allows to create push-like senders where messages are not queued into memory in a Node.js process but pushed and loaded through an external queue like RabbitMQ.\n\n```javascript\nvar messages = [...\'list of messages\'];\ntransporter.on(\'idle\', function(){\n    // send next messages from the pending queue\n    while(transporter.isIdle() && messages.length){\n        transporter.send(messages.shift());\n    }\n});\n```\n\n### Authentication\n\nIf authentication data is not present, the connection is considered authenticated from the start. Set authentication data with `options.auth`\n\n  - **auth** is the authentication object\n    - **auth.user** is the username\n    - **auth.pass** is the password for the user\n    - **auth.xoauth2** is the OAuth2 access token (preferred if both `pass` and `xoauth2` values are set) or an [XOAuth2](https://github.com/andris9/xoauth2) token generator object.\n\n**Using OAuth2**\n\nIf a [XOAuth2](https://github.com/andris9/xoauth2) token generator is used as the value for `auth.xoauth2` then you do not need to set the value for `user` or `pass`. XOAuth2 generator generates required `accessToken` itself if it is missing or expired. In this case if the authentication fails, a new token is requested and the authentication is retried once. If it still fails, an error is returned.\n\n> **NB!** The correct OAuth2 scope for Gmail is `https://mail.google.com/`\n\nInstall xoauth2 module to use XOauth2 token generators (not included by default)\n\n    npm install xoauth2 --save\n\n**Example**\n\n```javascript\nvar nodemailer = require(\'nodemailer\');\nvar xoauth2 = require(\'xoauth2\');\n\n// listen for token updates (if refreshToken is set)\n// you probably want to store these to a db\ngenerator.on(\'token\', function(token){\n    console.log(\'New token for %s: %s\', token.user, token.accessToken);\n});\n\n// login\nvar transporter = nodemailer.createTransport({\n    service: \'gmail\',\n    auth: {\n        xoauth2: xoauth2.createXOAuth2Generator({\n            user: \'{username}\',\n            clientId: \'{Client ID}\',\n            clientSecret: \'{Client Secret}\',\n            refreshToken: \'{refresh-token}\',\n            accessToken: \'{cached access token}\'\n        })\n    }\n});\n```\n\n### Using *well-known* services\n\nIf you do not want to specify the hostname, port and security settings for a well known service, you can use it by its name (case insensitive)\n\n```javascript\nsmtpTransport({\n    service: \'gmail\',\n    auth: ..\n});\n```\n\nSee the list of all supported services [here](https://github.com/andris9/nodemailer-wellknown#supported-services).\n\n## Verify SMTP connection configuration\n\nYou can verify your SMTP configuration with `verify(callback)` call (also works as a Promise). If it returns an error, then something is not correct, otherwise the server is ready to accept messages.\n\n```javascript\n// verify connection configuration\ntransporter.verify(function(error, success) {\n   if (error) {\n        console.log(error);\n   } else {\n        console.log(\'Server is ready to take our messages\');\n   }\n});\n```\n\n## Send using a transport plugin\n\nIn addition to SMTP you can use other kind of transports as well with Nodemailer. See *Available Transports* below for known transports.\n\nThe following example uses [nodemailer-ses-transport](https://github.com/andris9/nodemailer-ses-transport) (Amazon SES).\n\n```javascript\nvar nodemailer = require(\'nodemailer\');\nvar ses = require(\'nodemailer-ses-transport\');\nvar transporter = nodemailer.createTransport(ses({\n    accessKeyId: \'AWSACCESSKEY\',\n    secretAccessKey: \'AWS/Secret/key\'\n}));\n```\n\nIf the transport plugin follows common conventions, then you can also load it dynamically with the `transport` option. This way you would not have to load the transport plugin in your code (you do need to install the transport plugin though before you can use it), you only need to modify the configuration data accordingly.\n\n```javascript\nvar nodemailer = require(\'nodemailer\');\nvar transporter = nodemailer.createTransport({\n    transport: \'ses\', // loads nodemailer-ses-transport\n    accessKeyId: \'AWSACCESSKEY\',\n    secretAccessKey: \'AWS/Secret/key\'\n});\n```\n\n**Available Transports**\n\n  - **[nodemailer-mandrill-transport](https://github.com/rebelmail/nodemailer-mandrill-transport)** for sending messages through Mandrill\'s Web API\n  - **[nodemailer-pickup-transport](https://github.com/andris9/nodemailer-pickup-transport)** for storing messages to pickup folders\n  - **[nodemailer-sailthru-transport](https://github.com/rebelmail/nodemailer-sailthru-transport)** for sending messages through Sailthru\'s Web API\n  - **[nodemailer-sendgrid-transport](https://github.com/sendgrid/nodemailer-sendgrid-transport)** for sending messages through SendGrid\'s Web API\n  - **[nodemailer-sendmail-transport](https://github.com/andris9/nodemailer-sendmail-transport)** for piping messages to the _sendmail_ command\n  - **[nodemailer-ses-transport](https://github.com/andris9/nodemailer-ses-transport)** for sending messages to AWS SES\n  - **[nodemailer-sparkpost-transport](https://github.com/sparkpost/nodemailer-sparkpost-transport)** for sending messages through SparkPost\'s Web API\n  - **[nodemailer-stub-transport](https://github.com/andris9/nodemailer-stub-transport)** is just for returning messages, most probably for testing purposes\n  - **[nodemailer-wellknown](https://github.com/nodemailer/nodemailer-wellknown)** for sending messages through one of those many [supported services](https://github.com/nodemailer/nodemailer-wellknown#supported-services)\n  - **[nodemailer-postmark-transport](https://github.com/killmenot/nodemailer-postmark-transport)** for sending messages through Postmark\'s Web API\n  - _add yours_ (see transport api documentation [here](#transports))\n\n# Sending mail\nOnce you have a transporter object you can send mail with it:\n\n```javascript\ntransporter.sendMail(data[, callback])\n```\n\nWhere\n  - **data** defines the mail content (see [e-mail message fields](#e-mail-message-fields) below)\n  - **callback** is an optional callback function to run once the message is delivered or it failed\n    - **err** is the error object if message failed\n    - **info** includes the result, the exact format depends on the transport mechanism used\n      - **info.messageId** most transports _should_ return the final Message-Id value used with this property\n      - **info.envelope** includes the envelope object for the message\n      - **info.accepted** is an array returned by SMTP transports (includes recipient addresses that were accepted by the server)\n      - **info.rejected** is an array returned by SMTP transports (includes recipient addresses that were rejected by the server)\n      - **info.pending** is an array returned by Direct SMTP transport. Includes recipient addresses that were temporarily rejected together with the server response\n      - **info.response** is a string returned by SMTP transports and includes the last SMTP response from the server\n\n> If the message includes several recipients then the message is considered sent if at least one recipient is accepted\n\nIf `callback` argument is not set then the method returns a Promise object. Nodemailer itself does not use Promises internally but it wraps the return into a Promise for convenience.\n\n## E-mail message fields\nThe following are the possible fields of an e-mail message:\n\nCommmon fields:\n\n  - **from** - The e-mail address of the sender. All e-mail addresses can be plain `\'sender@server.com\'` or formatted `\'"Sender Name" <sender@server.com>\'`, see [Address Formatting](#address-formatting) for details\n  - **to** - Comma separated list or an array of recipients e-mail addresses that will appear on the _To:_ field\n  - **cc** - Comma separated list or an array of recipients e-mail addresses that will appear on the _Cc:_ field\n  - **bcc** - Comma separated list or an array of recipients e-mail addresses that will appear on the _Bcc:_ field\n  - **subject** - The subject of the e-mail\n  - **text** - The plaintext version of the message as an Unicode string, Buffer, Stream or an attachment-like object (`{path: \'/var/data/...\'}`)\n  - **html** - The HTML version of the message as an Unicode string, Buffer, Stream or an attachment-like object (`{path: \'http://...\'}`)\n  - **attachments** - An array of attachment objects  (see [below](#attachments) for details)\n\nAdvanced fields:\n\n  - **sender** - An e-mail address that will appear on the _Sender:_ field (always prefer `from` if you\'re not sure which one to use)\n  - **replyTo** - An e-mail address that will appear on the _Reply-To:_ field\n  - **inReplyTo** - The message-id this message is replying to\n  - **references** - Message-id list (an array or space separated string)\n  - **watchHtml** - Apple Watch specific HTML version of the message. Same usage as with `text` or `html`\n  - **icalEvent** – iCalendar event to use as an alternative. Same usage as with `text` or `html`. Additionally you could set `method` property (defaults to `\'PUBLISH\'`). See an example [here](examples/ical-event.js)\n  - **priority** - Sets message importance headers, either `\'high\'`, `\'normal\'` (default) or `\'low\'`.\n  - **headers** - An object or array of additional header fields (e.g. _{"X-Key-Name": "key value"}_ or _[{key: "X-Key-Name", value: "val1"}, {key: "X-Key-Name", value: "val2"}]_)\n  - **alternatives** - An array of alternative text contents (in addition to text and html parts)  (see [below](#alternatives) for details)\n  - **envelope** - optional SMTP envelope, if auto generated envelope is not suitable (see [below](#smtp-envelope) for details)\n  - **messageId** - optional Message-Id value, random value will be generated if not set\n  - **date** - optional Date value, current UTC string will be used if not set\n  - **encoding** - identifies encoding for text/html strings (defaults to \'utf-8\', other values are \'hex\' and \'base64\')\n  - **raw** - existing MIME message to use instead of generating a new one. If this value is set then you should also set the envelope object (if required) as the provided raw message is not parsed. The value could be a string, a buffer, a stream or an attachment-like object.\n  - **textEncoding** - force content-transfer-encoding for text values (either *quoted-printable* or *base64*). By default the best option is detected (for lots of ascii use *quoted-printable*, otherwise *base64*)\n  - **list** - helper for setting List-\\* headers\n\nAll text fields (e-mail addresses, plaintext body, html body, attachment filenames) use UTF-8 as the encoding. Attachments are streamed as binary.\n\n> **NB!** When using readable streams as any kind of content and sending fails then Nodemailer does not abort the already opened but not yet finished stream automatically, you need to do this yourself\n\n```javascript\nvar htmlstream = fs.createReadStream(\'content.html\');\ntransport.sendMail({html: htmlstream}, function(err){\n    if(err){\n        // check if htmlstream is still open and close it to clean up\n    }\n});\n```\n\n## Attachments\nAttachment object consists of the following properties:\n\n  - **filename** - filename to be reported as the name of the attached file, use of unicode is allowed. If you do not want to use a filename, set this value as `false`, otherwise a filename is generated automatically\n  - **content** - String, Buffer or a Stream contents for the attachment\n  - **path** - path to a file or an URL (data uris are allowed as well) if you want to stream the file instead of including it (better for larger attachments)\n  - **contentType** - optional content type for the attachment, if not set will be derived from the `filename` property\n  - **contentDisposition** - optional content disposition type for the attachment, defaults to \'attachment\'\n  - **cid** - optional content id for using inline images in HTML message source\n  - **encoding** - If set and `content` is string, then encodes the content to a Buffer using the specified encoding. Example values: `base64`, `hex`, `binary` etc. Useful if you want to use binary attachments in a JSON formatted e-mail object.\n  - **headers** - custom headers for the attachment node. Same usage as with message headers\n  - **raw** - is an optional special value that overrides entire contents of current mime node including mime headers. Useful if you want to prepare node contents yourself\n\nAttachments can be added as many as you want.\n\n**Example**\n\n```javascript\nvar mailOptions = {\n    ...\n    attachments: [\n        {   // utf-8 string as an attachment\n            filename: \'text1.txt\',\n            content: \'hello world!\'\n        },\n        {   // binary buffer as an attachment\n            filename: \'text2.txt\',\n            content: new Buffer(\'hello world!\',\'utf-8\')\n        },\n        {   // file on disk as an attachment\n            filename: \'text3.txt\',\n            path: \'/path/to/file.txt\' // stream this file\n        },\n        {   // filename and content type is derived from path\n            path: \'/path/to/file.txt\'\n        },\n        {   // stream as an attachment\n            filename: \'text4.txt\',\n            content: fs.createReadStream(\'file.txt\')\n        },\n        {   // define custom content type for the attachment\n            filename: \'text.bin\',\n            content: \'hello world!\',\n            contentType: \'text/plain\'\n        },\n        {   // use URL as an attachment\n            filename: \'license.txt\',\n            path: \'https://raw.github.com/nodemailer/nodemailer/master/LICENSE\'\n        },\n        {   // encoded string as an attachment\n            filename: \'text1.txt\',\n            content: \'aGVsbG8gd29ybGQh\',\n            encoding: \'base64\'\n        },\n        {   // data uri as an attachment\n            path: \'data:text/plain;base64,aGVsbG8gd29ybGQ=\'\n        }\n    ]\n}\n```\n\n## Alternatives\nIn addition to text and HTML, any kind of data can be inserted as an alternative content of the main body - for example a word processing document with the same text as in the HTML field. It is the job of the e-mail client to select and show the best fitting alternative to the reader. Usually this field is used for calendar events and such.\n\nAlternative objects use the same options as [attachment objects](#attachments). The difference between an attachment and an alternative is the fact that attachments are placed into _multipart/mixed_ or _multipart/related_ parts of the message white alternatives are placed into _multipart/alternative_ part.\n\n**Usage example:**\n\n```javascript\nvar mailOptions = {\n    ...\n    html: \'<b>Hello world!</b>\',\n    alternatives: [\n        {\n            contentType: \'text/x-web-markdown\',\n            content: \'**Hello world!**\'\n        }\n    ]\n}\n```\n\nAlternatives can be added as many as you want.\n\n## Headers\n\nMost messages do not need any kind of tampering with the headers. If you do need to add custom headers either to the message or to an attachment/alternative, you can add these values with the `headers` option. Values are processed automatically, non-ascii strings are encoded as mime-words and long lines are folded.\n\n```javascript\nvar mail = {\n    ...,\n    headers: {\n        \'x-my-key\': \'header value\',\n        \'x-another-key\': \'another value\'\n    }\n}\n\n// X-My-Key: header value\n// X-Another-Key: another value\n```\n\n### Multiple rows\n\nThe same header key can be used multiple times if the header value is an Array\n\n```javascript\nvar mail = {\n    ...,\n    headers: {\n        \'x-my-key\': [\n            \'value for row 1\',\n            \'value for row 2\',\n            \'value for row 3\'\n        ]\n    }\n}\n\n// X-My-Key: value for row 1\n// X-My-Key: value for row 2\n// X-My-Key: value for row 3\n```\n\n### Prepared headers\n\nNormally all headers are encoded and folded to meet the requirement of having plain-ASCII messages with lines no longer than 78 bytes. Sometimes it is preferable to not modify header values and pass these as provided. This can be achieved with the `prepared` option:\n\n```javascript\nvar mail = {\n    ...,\n    headers: {\n        \'x-processed\': \'a really long header or value with non-ascii characters 👮\',\n        \'x-unprocessed\': {\n            prepared: true,\n            value: \'a really long header or value with non-ascii characters 👮\'\n        }\n    }\n}\n\n// X-Processed: a really long header or value with non-ascii characters\n//  =?UTF-8?Q?=F0=9F=91=AE?=\n// X-Unprocessed: a really long header or value with non-ascii characters 👮\n```\n\n## Address Formatting\nAll the e-mail addresses can be plain e-mail addresses\n\n```\nfoobar@blurdybloop.com\n```\n\nor with formatted name (includes unicode support)\n\n```\n"Ноде Майлер" <foobar@blurdybloop.com>\n```\n\n> Notice that all address fields (even `from:`) are comma separated lists, so if you want to use a comma in the name part, make sure you enclose the name in double quotes: `"Майлер, Ноде" <foobar@blurdybloop.com>`\n\nor as an address object (in this case you do not need to worry about the formatting, no need to use quotes etc.)\n\n```\n{\n    name: \'Майлер, Ноде\',\n    address: \'foobar@blurdybloop.com\'\n}\n```\n\nAll address fields accept comma separated list of e-mails or an array of e-mails or an array of comma separated list of e-mails or address objects - use it as you like. Formatting can be mixed.\n\n```\n...,\nto: \'foobar@blurdybloop.com, "Ноде Майлер" <bar@blurdybloop.com>, "Name, User" <baz@blurdybloop.com>\',\ncc: [\'foobar@blurdybloop.com\', \'"Ноде Майлер" <bar@blurdybloop.com>, "Name, User" <baz@blurdybloop.com>\'],\nbcc: [\'foobar@blurdybloop.com\', {name: \'Майлер, Ноде\', address: \'foobar@blurdybloop.com\'}]\n...\n```\n\nYou can even use unicode domains, these are automatically converted to punycode\n\n```\n\'"Unicode Domain" <info@müriaad-polüteism.info>\'\n```\n\n## SMTP envelope\nSMTP envelope is usually auto generated from `from`, `to`, `cc` and `bcc` fields but if for some reason you want to specify it yourself (custom envelopes are usually used for VERP addresses), you can do it with `envelope` property.\n\n`envelope` is an object with the following params: `from`, `to`, `cc` and `bcc` just like with regular mail options. You can also use the regular address format, unicode domains etc.\n\n```javascript\nmailOptions = {\n    ...,\n    from: \'mailer@kreata.ee\', // listed in rfc822 message header\n    to: \'daemon@kreata.ee\', // listed in rfc822 message header\n    envelope: {\n        from: \'"Daemon" <deamon@kreata.ee>\', // used as MAIL FROM: address for SMTP\n        to: \'mailer@kreata.ee, "Mailer" <mailer2@kreata.ee>\' // used as RCPT TO: address for SMTP\n    }\n}\n```\n\n> Not all transports can use the `envelope` object, for example SES ignores it and only uses the data from the From:, To: etc. headers.\n\n## Using Embedded Images\nAttachments can be used as embedded images in the HTML body. To use this feature, you need to set additional property of the attachment - `cid` (unique identifier of the file) which is a reference to the attachment file. The same `cid` value must be used as the image URL in HTML (using `cid:` as the URL protocol, see example below).\n\n**NB!** the cid value should be as unique as possible!\n\n```javascript\nvar mailOptions = {\n    ...\n    html: \'Embedded image: <img src="cid:unique@kreata.ee"/>\',\n    attachments: [{\n        filename: \'image.png\',\n        path: \'/path/to/file\',\n        cid: \'unique@kreata.ee\' //same cid value as in the html img src\n    }]\n}\n```\n\n## Using templates\n\nNodemailer allows to use simple built-in templating or alternatively external renderers for common message types.\n\n```javascript\nvar transporter = nodemailer.createTransport(...);\nvar send = transporter.templateSender(templates, [defaults]);\n\n// send a message based on provided templates\nsend(mailData, context, callback);\n// or\nsend(mailData, context).then(...).catch(...);\n```\n\nWhere\n\n  * **templates** is an object with template strings for built-in renderer or an [EmailTemplate](https://github.com/niftylettuce/node-email-templates) object for more complex rendering\n\n```javascript\n// built-in renderer\nvar send = transporter.templateSender({\n    subject: \'This template is used for the "subject" field\',\n    text: \'This template is used for the "text" field\',\n    html: \'This template is used for the "html" field\'\n});\n// external renderer\nvar EmailTemplate = require(\'email-templates\').EmailTemplate;\nvar send = transporter.templateSender(new EmailTemplate(\'template/directory\'));\n```\n\n  * **defaults** is an optional object of message data fields that are set for every message sent using this sender\n  * **mailData** includes message fields for current message\n  * **context** is an object with template replacements, where `key` replaces `{{key}}` when using the built-in renderer\n\n```javascript\nvar templates = {\n    text: \'Hello {{username}}!\'\n};\nvar context = {\n    username: \'User Name\'\n};\n// results in "Hello, User Name!" as the text body\n// of the message when using built-in renderer\n```\n\n  * **callback** is the `transporter.sendMail` callback (if not set then the function returns a Promise)\n\n> **NB!** If using built-in renderer then template variables are HTML escaped for the `html` field but kept as is for other fields\n\n**Example 1. Built-in renderer**\n\n```javascript\nvar transporter = nodemailer.createTransport(\'smtps://user%40gmail.com:pass@smtp.gmail.com\');\n\n// create template based sender function\nvar sendPwdReset = transporter.templateSender({\n    subject: \'Password reset for {{username}}!\',\n    text: \'Hello, {{username}}, Please go here to reset your password: {{ reset }}\',\n    html: \'<b>Hello, <strong>{{username}}</strong>, Please <a href="{{ reset }}">go here to reset your password</a>: {{ reset }}</p>\'\n}, {\n    from: \'sender@example.com\',\n});\n\n// use template based sender to send a message\nsendPwdReset({\n    to: \'receiver@example.com\'\n}, {\n    username: \'Node Mailer\',\n    reset: \'https://www.example.com/reset?token=<unique-single-use-token>\'\n}, function(err, info){\n    if(err){\n        console.log(\'Error\');\n    }else{\n        console.log(\'Password reset sent\');\n    }\n});\n```\n\n**Example 2. External renderer**\n\n```javascript\nvar EmailTemplate = require(\'email-templates\').EmailTemplate;\nvar transporter = nodemailer.createTransport(\'smtps://user%40gmail.com:pass@smtp.gmail.com\');\n\n// create template based sender function\n// assumes text.{ext} and html.{ext} in template/directory\nvar sendPwdReminder = transporter.templateSender(new EmailTemplate(\'template/directory\'), {\n    from: \'sender@example.com\',\n});\n\n// use template based sender to send a message\nsendPwdReminder({\n    to: \'receiver@example.com\',\n    // EmailTemplate renders html and text but no subject so we need to\n    // set it manually either here or in the defaults section of templateSender()\n    subject: \'Password reminder\'\n}, {\n    username: \'Node Mailer\',\n    password: \'!"\\\'<>&some-thing\'\n}, function(err, info){\n    if(err){\n       console.log(\'Error\');\n    }else{\n        console.log(\'Password reminder sent\');\n    }\n});\n```\n\n### Custom renderer\n\nIn addition to the built-in and node-email-templates based renderers you can also bring your own.\n\n```javascript\nvar sendPwdReminder = transporter.templateSender({\n    render: function(context, callback){\n        callback(null, {\n            html: \'rendered html content\',\n            text: \'rendered text content\'\n        });\n    }\n});\n```\n\n**Example. Using swig-email-templates**\n\n```javascript\nvar EmailTemplates = require(\'swig-email-templates\');\nvar transporter = nodemailer.createTransport(\'smtps://user%40gmail.com:pass@smtp.gmail.com\');\n\n// create template renderer\nvar templates = new EmailTemplates();\n\n// provide custom rendering function\nvar sendPwdReminder = transporter.templateSender({\n    render: function(context, callback){\n        templates.render(\'pwreminder.html\', context, function (err, html, text) {\n            if(err){\n                return callback(err);\n            }\n            callback(null, {\n                html: html,\n                text: text\n            });\n        });\n    }\n});\n...\n```\n\n## List-\\* headers\n\nNodemailer includes a helper for setting more complex List-\\* headers with ease.\nUse message option `list` to provide all list headers. You do not need to add protocol\nprefix for the urls, or enclose the url between &lt; and &gt;, this is handled automatically.\n\nIf the value is a string, it is treated as an URL. If you want to provide an optional comment,\nuse `{url:\'url\', comment: \'comment\'}` object. If you want to have multiple header rows for the\nsame List-\\* key, use an array as the value for this key. If you want to have multiple URLs for\nsingle List-\\* header row, use an array inside an array.\n\n> List-\\* headers are treated as pregenerated values, this means that lines are not folded and strings\nare not encoded. Use only ascii characters and be prepared for longer header lines.\n\n```javascript\nvar mailOptions = {\n    list: {\n        // List-Help: <mailto:admin@example.com?subject=help>\n        help: \'admin@example.com?subject=help\',\n        // List-Unsubscribe: <http://example.com> (Comment)\n        unsubscribe: {\n            url: \'http://example.com\',\n            comment: \'Comment\'\n        },\n        // List-Subscribe: <mailto:admin@example.com?subject=subscribe>\n        // List-Subscribe: <http://example.com> (Subscribe)\n        subscribe: [\n            \'admin@example.com?subject=subscribe\',\n            {\n                url: \'http://example.com\',\n                comment: \'Subscribe\'\n            }\n        ],\n        // List-Post: <http://example.com/post>, <mailto:admin@example.com?subject=post> (Post)\n        post: [\n            [\n                \'http://example.com/post\',\n                {\n                    url: \'admin@example.com?subject=post\',\n                    comment: \'Post\'\n                }\n            ]\n        ]\n    }\n};\n```\n\n# Available Plugins\n\nIn addition to built-in e-mail fields you can extend these by using plugins.\n\n  - **[nodemailer-markdown](https://github.com/andris9/nodemailer-markdown)** to use markdown for the content\n  - **[nodemailer-dkim](https://github.com/andris9/nodemailer-dkim)** to sign messages with DKIM\n  - **[nodemailer-html-to-text](https://github.com/andris9/nodemailer-html-to-text)** to auto generate plaintext content from html\n  - **[nodemailer-express-handlebars](https://github.com/yads/nodemailer-express-handlebars)** to auto generate html emails from handlebars/mustache templates\n  - **[nodemailer-plugin-inline-base64](https://github.com/mixmaxhq/nodemailer-plugin-inline-base64)** to convert base64 images to attachments\n  - **[nodemailer-hashcash](https://github.com/andris9/nodemailer-hashcash)** to generate [hashcash](http://www.hashcash.org/) headers\n  - _add yours_ (see plugin api documentation [here](#plugin-api))\n\n# Using Gmail\nEven though Gmail is the fastest way to get started with sending emails, it is by no means a preferable solution unless you are using OAuth2 authentication. Gmail expects the user to be an actual user not a robot so it runs a lot of heuristics for every login attempt and blocks anything that looks suspicious to defend the user from account hijacking attempts. For example you might run into trouble if your server is in another geographical location – everything works in your dev machine but messages are blocked in production.\n\nAdditionally Gmail has came up with the concept of [\'less secure\'](https://support.google.com/accounts/answer/6010255?hl=en) apps which is basically anyone who uses plain password to login to Gmail, so you might end up in a situation where one username can send (support for \'less secure\' apps is enabled) but other is blocked (support for \'less secure\' apps is disabled). When using this method make sure to enable the required functionality by completing the "[captcha enable](https://accounts.google.com/b/0/displayunlockcaptcha)". Without this, less secure connections won\'t work.\n\nTo prevent having login issues you should either use XOAUTH2 (see details [here](https://github.com/nodemailer/nodemailer-smtp-transport#authentication)) or use another provider and preferably a dedicated one like [Mailgun](http://www.mailgun.com/) or [SendGrid](http://mbsy.co/sendgrid/12237825) or any other. Usually these providers have free plans available that are comparable to the daily sending limits of Gmail. Gmail has a limit of 500 recipients a day (a message with one _To_ and one _Cc_ address counts as two messages since it has two recipients) for @gmail.com addresses and 2000 for Google Apps customers, larger SMTP providers usually offer about 200-300 recipients a day for free.\n\n# Delivering Bulk Mail\nHere are some tips how to handle bulk mail, for example if you need to send 10 million messages at once (originally published as a [blog post](http://www.andrisreinman.com/delivering-bulk-mail-with-nodemailer/)).\n  1. **Use a dedicated SMTP provider** like [SendGrid](http://mbsy.co/sendgrid/12237825) or [Mailgun](http://www.mailgun.com/) or any other. Do not use services that offer SMTP as a sideline or for free (that\'s Gmail or the SMTP of your homepage hosting company) to send bulk mail – you\'ll hit all the hard limits immediatelly or get labelled as spam. Basically you get what you pay for and if you pay zero then your deliverability is near zero as well. E-mail might seem free but it is only free to a certain amount and that amount certainly does not include 10 million e-mails in a short period of time.\n  2. **Use a dedicated queue manager,** for example [RabbitMQ](http://www.rabbitmq.com/) for queueing the e-mails. Nodemailer creates a callback function with related scopes etc. for every message so it might be hard on memory if you pile up the data for 10 million messages at once. Better to take the data from a queue when there\'s a free spot in the connection pool (previously sent message returns its callback). See [rabbit-queue](examples/rabbit-queue) for an example of using RabbitMQ queues with Nodemailer connection pool.\n  3. **Use [nodemailer-smtp-pool](https://github.com/nodemailer/nodemailer-smtp-pool) transport.** You do not want to have the overhead of creating a new connection and doing the SMTP handshake dance for every single e-mail. Pooled connections make it possible to bring this overhead to a minimum.\n  4. **Set `maxMessages` option to `Infinity`** for the nodemailer-smtp-pool transport. Dedicated SMTP providers happily accept all your e-mails as long you are paying for these, so no need to disconnect in the middle if everything is going smoothly. The default value is 100 which means that once a connection is used to send 100 messages it is removed from the pool and a new connection is created.\n  5. **Set `maxConnections` to whatever your system can handle.** There might be limits to this on the receiving side, so do not set it to `Infinity`, even 20 is probably much better than the default 5. A larger number means a larger amount of messages are sent in parallel.\n  6. **Use file paths not URLs for attachments.** If you are reading the same file from the disk several million times, the contents for the file probably get cached somewhere between your app and the physical hard disk, so you get your files back quicker (assuming you send the same attachment to all recipients). There is nothing like this for URLs – every new message makes a fresh HTTP fetch to receive the file from the server.\n  7. If the SMTP service accepts HTTP API as well you still might prefer SMTP and not the HTTP API as HTTP introduces additional overhead. You probably want to use HTTP over SMTP if the HTTP API is bulk aware – you send a message template and the list of 10 million recipients and the service compiles this information into e-mails itself, you can\'t beat this with SMTP.\n\n# Implementing plugins and transports\n\nThere are 3 stages a plugin can hook to\n  1. **\'compile\'** is the step where e-mail data is set but nothing has been done with it yet. At this step you can modify mail options, for example modify `html` content, add new headers etc. Example: [nodemailer-markdown](https://github.com/andris9/nodemailer-markdown) that allows you to use `markdown` source instead of `text` and `html`.\n  2. **\'stream\'** is the step where message tree has been compiled and is ready to be streamed. At this step you can modify the generated MIME tree or add a transform stream that the generated raw e-mail will be piped through before passed to the transport object. Example: [nodemailer-dkim](https://github.com/andris9/nodemailer-dkim) that adds DKIM signature to the generated message.\n  3. **Transport** step where the raw e-mail is streamed to destination. Example: [nodemailer-smtp-transport](https://github.com/nodemailer/nodemailer-smtp-transport) that streams the message to a SMTP server.\n\n## Including plugins\n\'compile\' and \'stream\' plugins can be attached with `use(plugin)` method\n\n```javascript\ntransporter.use(step, pluginFunc)\n```\n\nWhere\n- **transporter** is a transport object created with `createTransport`\n- **step** is a string, either \'compile\' or \'stream\' that defines when the plugin should be hooked\n- **pluginFunc** is a function that takes two arguments: the mail object and a callback function\n\n# Plugin API\nAll plugins (including transports) get two arguments, the mail object and a callback function.\n\nMail object that is passed to the plugin function as the first argument is an object with the following properties:\n- **data** is the mail data object that is passed to the `sendMail` method\n- **message** is the [BuildMail](https://github.com/nodemailer/buildmail) object of the message. This is available for the \'stream\' step and for the transport but not for \'compile\'.\n- **resolveContent** is a helper function for converting Nodemailer compatible stream objects into Strings or Buffers\n\n## resolveContent()\nIf your plugin needs to get the full value of a param, for example the String value for the `html` content, you can use `resolveContent()` to convert Nodemailer compatible content objects to Strings or Buffers.\n\n```javascript\ndata.resolveContent(obj, key, callback)\n```\n\nWhere\n- **obj** is an object that has a property you want to convert to a String or a Buffer\n- **key** is the name of the property you want to convert\n- **callback** is the callback function with (err, value) where `value` is either a String or Buffer, depending on the input\n\n**Example**\n\n```javascript\nfunction plugin(mail, callback){\n    // if mail.data.html is a file or an url, it is returned as a Buffer\n    mail.resolveContent(mail.data, \'html\', function(err, html){\n        if(err){\n            return callback(err);\n        }\n        console.log(\'HTML contents: %s\', html.toString());\n        callback();\n    });\n};\n```\n\n## \'compile\'\nCompile step plugins get only the `mail.data` object but not `mail.message` in the `mail` argument of the plugin function. If you need to access the `mail.message` as well use \'stream\' step instead.\n\nThis is really straightforward, your plugin can modify the `mail.data` object at will and once everything is finished run the callback function. If the callback gets an error object as an argument, then the process is terminated and the error is returned to the `sendMail` callback.\n\n**Example**\n\nThe following plugin checks if `text` value is set and if not converts `html` value to `text` by removing all html tags.\n\n```javascript\ntransporter.use(\'compile\', function(mail, callback){\n    if(!mail.text && mail.html){\n        mail.text = mail.html.replace(/<[^>]*>/g, \' \');\n    }\n    callback();\n});\n```\n\nSee [plugin-compile.js](examples/plugin-compile.js) for a working example.\n\n## \'stream\'\nStreaming step is invoked once the message structure is built and ready to be streamed to the transport. Plugin function still gets `mail.data` but it is included just for the reference, modifying it should not change anything (unless the transport requires something from the `mail.data`, for example `mail.data.envelope`).\n\nYou can modify the `mail.message` object as you like, the message is not yet streaming anything (message starts streaming when the transport calls `mail.message.createReadStream()`).\n\nIn most cases you might be interested in the [message.transform()](https://github.com/nodemailer/buildmail#transform) method for applying transform streams to the raw message.\n\n**Example**\n\nThe following plugin replaces all tabs with spaces in the raw message.\n\n```javascript\nvar transformer = new (require(\'stream\').Transform)();\ntransformer._transform = function(chunk, encoding, done) {\n    // replace all tabs with spaces in the stream chunk\n    for(var i = 0; i < chunk.length; i++){\n        if(chunk[i] === 0x09){\n            chunk[i] = 0x20;\n        }\n    }\n    this.push(chunk);\n    done();\n};\n\ntransporter.use(\'stream\', function(mail, callback){\n    // apply output transformer to the raw message stream\n    mail.message.transform(transformer);\n    callback();\n});\n```\n\nSee [plugin-stream.js](examples/plugin-stream.js) for a working example.\n\nAdditionally you might be interested in the [message.getAddresses()](https://github.com/nodemailer/buildmail#getaddresses) method that returns the contents for all address fields as structured objects.\n\n**Example**\n\nThe following plugin prints address information to console.\n\n```javascript\ntransporter.use(\'stream\', function(mail, callback){\n    var addresses = mail.message.getAddresses();\n    console.log(\'From: %s\', JSON.stringify(addresses.from));\n    console.log(\'To: %s\', JSON.stringify(addresses.to));\n    console.log(\'Cc: %s\', JSON.stringify(addresses.cc));\n    console.log(\'Bcc: %s\', JSON.stringify(addresses.bcc));\n    callback();\n});\n```\n\n## Transports\nTransports are objects that have a method `send` and properies `name` and `version`. Additionally, if the transport object is an Event Emitter, \'log\' events are piped through Nodemailer. A transport object is passed to the `nodemailer.createTransport(transport)` method to create the transporter object.\n\n**`transport.name`**\n\nThis is the name of the transport object. For example \'SMTP\' or \'SES\' etc.\n\n```javascript\ntransport.name = require(\'package.json\').name;\n```\n\n**`transport.version`**\n\nThis should be the transport module version. For example \'0.1.0\'.\n\n```javascript\ntransport.version = require(\'package.json\').version;\n```\n\n**`transport.send(mail, callback)`**\n\nThis is the method that actually sends out e-mails. The method is basically the same as \'stream\' plugin functions. It gets two arguments: `mail` and a callback. To start streaming the message, create the stream with `mail.message.createReadStream()`\n\nCallback function should return an `info` object as the second arugment. This info object should contain `messageId` value with the Message-Id header (without the surrounding < > brackets)\n\nThe following example pipes the raw stream to the console.\n\n```javascript\ntransport.send = function(mail, callback){\n    var input = mail.message.createReadStream();\n    var messageId = (mail.message.getHeader(\'message-id\') || \'\').replace(/[<>\\s]/g, \'\');\n    input.pipe(process.stdout);\n    input.on(\'end\', function() {\n        callback(null, {\n            messageId: messageId\n        });\n    });\n};\n```\n\n**`transport.close(args*)`**\n\nIf your transport needs to be closed explicitly, you can implement a `close` method.\n\nThis is purely optional feature and only makes sense in special contexts (eg. closing a SMTP pool).\n\n**`transport.isIdle()`**\n\nIf your transport is able to notify about idling state by issuing `\'idle\'` events then this method should return if the transport is still idling or not.\n\n**Wrapping up**\n\nOnce you have a transport object, you can create a mail transporter out of it.\n\n```\nvar nodemailer = require(\'nodemailer\');\nvar transport = require(\'some-transport-method\');\nvar transporter = nodemailer.createTransport(transport);\ntransporter.sendMail({mail data});\n```\n\nSee [minimal-transport.js](examples/minimal-transport.js) for a working example.\n\n# License\n**Nodemailer** is licensed under [MIT license](https://github.com/nodemailer/nodemailer/blob/master/LICENSE). Basically you can do whatever you want to with it\n\n--------------------------------------------------------------------------------\n\nThe Nodemailer logo was designed by [Sven Kristjansen](https://www.behance.net/kristjansen).\n',
57 silly resolved     readmeFilename: 'README.md',
57 silly resolved     _id: 'nodemailer@2.6.4',
57 silly resolved     _from: 'nodemailer@' } ]
58 info install nodemailer@2.6.4 into /Users/david/nodejs-template
59 info installOne nodemailer@2.6.4
60 verbose from cache /Users/david/.npm/nodemailer/2.6.4/package/package.json
61 info /Users/david/nodejs-template/node_modules/nodemailer unbuild
62 verbose read json /Users/david/nodejs-template/node_modules/nodemailer/package.json
63 verbose tar unpack /Users/david/.npm/nodemailer/2.6.4/package.tgz
64 silly lockFile c8601de1-template-node-modules-nodemailer /Users/david/nodejs-template/node_modules/nodemailer
65 verbose lock /Users/david/nodejs-template/node_modules/nodemailer /Users/david/.npm/c8601de1-template-node-modules-nodemailer.lock
66 silly lockFile 77d817b9-npm-nodemailer-2-6-4-package-tgz /Users/david/.npm/nodemailer/2.6.4/package.tgz
67 verbose lock /Users/david/.npm/nodemailer/2.6.4/package.tgz /Users/david/.npm/77d817b9-npm-nodemailer-2-6-4-package-tgz.lock
68 silly gunzTarPerm modes [ '755', '644' ]
69 silly gunzTarPerm extractEntry package.json
70 silly gunzTarPerm extractEntry .npmignore
71 silly gunzTarPerm extractEntry README.md
72 silly gunzTarPerm extractEntry LICENSE
73 silly gunzTarPerm extractEntry .eslintrc.js
74 silly gunzTarPerm extractEntry CHANGELOG.md
75 silly gunzTarPerm extractEntry ISSUE_TEMPLATE.md
76 silly gunzTarPerm extractEntry lib/http-proxy.js
77 silly gunzTarPerm extractEntry lib/nodemailer.js
78 silly gunzTarPerm extractEntry lib/template-sender.js
79 verbose read json /Users/david/nodejs-template/node_modules/nodemailer/package.json
80 silly lockFile c8601de1-template-node-modules-nodemailer /Users/david/nodejs-template/node_modules/nodemailer
81 silly lockFile c8601de1-template-node-modules-nodemailer /Users/david/nodejs-template/node_modules/nodemailer
82 silly lockFile 77d817b9-npm-nodemailer-2-6-4-package-tgz /Users/david/.npm/nodemailer/2.6.4/package.tgz
83 silly lockFile 77d817b9-npm-nodemailer-2-6-4-package-tgz /Users/david/.npm/nodemailer/2.6.4/package.tgz
84 info preinstall nodemailer@2.6.4
85 verbose from cache /Users/david/nodejs-template/node_modules/nodemailer/package.json
86 verbose readDependencies using package.json deps
87 verbose from cache /Users/david/nodejs-template/node_modules/nodemailer/package.json
88 verbose readDependencies using package.json deps
89 verbose cache add [ 'libmime@2.1.0', null ]
90 verbose cache add name=undefined spec="libmime@2.1.0" args=["libmime@2.1.0",null]
91 verbose parsed url { protocol: null,
91 verbose parsed url   slashes: null,
91 verbose parsed url   auth: null,
91 verbose parsed url   host: null,
91 verbose parsed url   port: null,
91 verbose parsed url   hostname: null,
91 verbose parsed url   hash: null,
91 verbose parsed url   search: null,
91 verbose parsed url   query: null,
91 verbose parsed url   pathname: 'libmime@2.1.0',
91 verbose parsed url   path: 'libmime@2.1.0',
91 verbose parsed url   href: 'libmime@2.1.0' }
92 verbose cache add name="libmime" spec="2.1.0" args=["libmime","2.1.0"]
93 verbose parsed url { protocol: null,
93 verbose parsed url   slashes: null,
93 verbose parsed url   auth: null,
93 verbose parsed url   host: null,
93 verbose parsed url   port: null,
93 verbose parsed url   hostname: null,
93 verbose parsed url   hash: null,
93 verbose parsed url   search: null,
93 verbose parsed url   query: null,
93 verbose parsed url   pathname: '2.1.0',
93 verbose parsed url   path: '2.1.0',
93 verbose parsed url   href: '2.1.0' }
94 verbose addNamed [ 'libmime', '2.1.0' ]
95 verbose addNamed [ '2.1.0', '2.1.0' ]
96 silly lockFile c68d1675-libmime-2-1-0 libmime@2.1.0
97 verbose lock libmime@2.1.0 /Users/david/.npm/c68d1675-libmime-2-1-0.lock
98 verbose cache add [ 'mailcomposer@3.12.0', null ]
99 verbose cache add name=undefined spec="mailcomposer@3.12.0" args=["mailcomposer@3.12.0",null]
100 verbose parsed url { protocol: null,
100 verbose parsed url   slashes: null,
100 verbose parsed url   auth: null,
100 verbose parsed url   host: null,
100 verbose parsed url   port: null,
100 verbose parsed url   hostname: null,
100 verbose parsed url   hash: null,
100 verbose parsed url   search: null,
100 verbose parsed url   query: null,
100 verbose parsed url   pathname: 'mailcomposer@3.12.0',
100 verbose parsed url   path: 'mailcomposer@3.12.0',
100 verbose parsed url   href: 'mailcomposer@3.12.0' }
101 verbose cache add name="mailcomposer" spec="3.12.0" args=["mailcomposer","3.12.0"]
102 verbose parsed url { protocol: null,
102 verbose parsed url   slashes: null,
102 verbose parsed url   auth: null,
102 verbose parsed url   host: null,
102 verbose parsed url   port: null,
102 verbose parsed url   hostname: null,
102 verbose parsed url   hash: null,
102 verbose parsed url   search: null,
102 verbose parsed url   query: null,
102 verbose parsed url   pathname: '3.12.0',
102 verbose parsed url   path: '3.12.0',
102 verbose parsed url   href: '3.12.0' }
103 verbose addNamed [ 'mailcomposer', '3.12.0' ]
104 verbose addNamed [ '3.12.0', '3.12.0' ]
105 silly lockFile eab7c170-mailcomposer-3-12-0 mailcomposer@3.12.0
106 verbose lock mailcomposer@3.12.0 /Users/david/.npm/eab7c170-mailcomposer-3-12-0.lock
107 verbose cache add [ 'nodemailer-shared@1.1.0', null ]
108 verbose cache add name=undefined spec="nodemailer-shared@1.1.0" args=["nodemailer-shared@1.1.0",null]
109 verbose parsed url { protocol: null,
109 verbose parsed url   slashes: null,
109 verbose parsed url   auth: null,
109 verbose parsed url   host: null,
109 verbose parsed url   port: null,
109 verbose parsed url   hostname: null,
109 verbose parsed url   hash: null,
109 verbose parsed url   search: null,
109 verbose parsed url   query: null,
109 verbose parsed url   pathname: 'nodemailer-shared@1.1.0',
109 verbose parsed url   path: 'nodemailer-shared@1.1.0',
109 verbose parsed url   href: 'nodemailer-shared@1.1.0' }
110 verbose cache add name="nodemailer-shared" spec="1.1.0" args=["nodemailer-shared","1.1.0"]
111 verbose parsed url { protocol: null,
111 verbose parsed url   slashes: null,
111 verbose parsed url   auth: null,
111 verbose parsed url   host: null,
111 verbose parsed url   port: null,
111 verbose parsed url   hostname: null,
111 verbose parsed url   hash: null,
111 verbose parsed url   search: null,
111 verbose parsed url   query: null,
111 verbose parsed url   pathname: '1.1.0',
111 verbose parsed url   path: '1.1.0',
111 verbose parsed url   href: '1.1.0' }
112 verbose addNamed [ 'nodemailer-shared', '1.1.0' ]
113 verbose addNamed [ '1.1.0', '1.1.0' ]
114 silly lockFile 2da4ccb8-nodemailer-shared-1-1-0 nodemailer-shared@1.1.0
115 verbose lock nodemailer-shared@1.1.0 /Users/david/.npm/2da4ccb8-nodemailer-shared-1-1-0.lock
116 verbose cache add [ 'nodemailer-direct-transport@3.3.2', null ]
117 verbose cache add name=undefined spec="nodemailer-direct-transport@3.3.2" args=["nodemailer-direct-transport@3.3.2",null]
118 verbose parsed url { protocol: null,
118 verbose parsed url   slashes: null,
118 verbose parsed url   auth: null,
118 verbose parsed url   host: null,
118 verbose parsed url   port: null,
118 verbose parsed url   hostname: null,
118 verbose parsed url   hash: null,
118 verbose parsed url   search: null,
118 verbose parsed url   query: null,
118 verbose parsed url   pathname: 'nodemailer-direct-transport@3.3.2',
118 verbose parsed url   path: 'nodemailer-direct-transport@3.3.2',
118 verbose parsed url   href: 'nodemailer-direct-transport@3.3.2' }
119 verbose cache add name="nodemailer-direct-transport" spec="3.3.2" args=["nodemailer-direct-transport","3.3.2"]
120 verbose parsed url { protocol: null,
120 verbose parsed url   slashes: null,
120 verbose parsed url   auth: null,
120 verbose parsed url   host: null,
120 verbose parsed url   port: null,
120 verbose parsed url   hostname: null,
120 verbose parsed url   hash: null,
120 verbose parsed url   search: null,
120 verbose parsed url   query: null,
120 verbose parsed url   pathname: '3.3.2',
120 verbose parsed url   path: '3.3.2',
120 verbose parsed url   href: '3.3.2' }
121 verbose addNamed [ 'nodemailer-direct-transport', '3.3.2' ]
122 verbose addNamed [ '3.3.2', '3.3.2' ]
123 silly lockFile 299fc345-odemailer-direct-transport-3-3-2 nodemailer-direct-transport@3.3.2
124 verbose lock nodemailer-direct-transport@3.3.2 /Users/david/.npm/299fc345-odemailer-direct-transport-3-3-2.lock
125 verbose cache add [ 'nodemailer-smtp-pool@2.8.2', null ]
126 verbose cache add name=undefined spec="nodemailer-smtp-pool@2.8.2" args=["nodemailer-smtp-pool@2.8.2",null]
127 verbose parsed url { protocol: null,
127 verbose parsed url   slashes: null,
127 verbose parsed url   auth: null,
127 verbose parsed url   host: null,
127 verbose parsed url   port: null,
127 verbose parsed url   hostname: null,
127 verbose parsed url   hash: null,
127 verbose parsed url   search: null,
127 verbose parsed url   query: null,
127 verbose parsed url   pathname: 'nodemailer-smtp-pool@2.8.2',
127 verbose parsed url   path: 'nodemailer-smtp-pool@2.8.2',
127 verbose parsed url   href: 'nodemailer-smtp-pool@2.8.2' }
128 verbose cache add name="nodemailer-smtp-pool" spec="2.8.2" args=["nodemailer-smtp-pool","2.8.2"]
129 verbose parsed url { protocol: null,
129 verbose parsed url   slashes: null,
129 verbose parsed url   auth: null,
129 verbose parsed url   host: null,
129 verbose parsed url   port: null,
129 verbose parsed url   hostname: null,
129 verbose parsed url   hash: null,
129 verbose parsed url   search: null,
129 verbose parsed url   query: null,
129 verbose parsed url   pathname: '2.8.2',
129 verbose parsed url   path: '2.8.2',
129 verbose parsed url   href: '2.8.2' }
130 verbose addNamed [ 'nodemailer-smtp-pool', '2.8.2' ]
131 verbose addNamed [ '2.8.2', '2.8.2' ]
132 silly lockFile 350b9cb8-nodemailer-smtp-pool-2-8-2 nodemailer-smtp-pool@2.8.2
133 verbose lock nodemailer-smtp-pool@2.8.2 /Users/david/.npm/350b9cb8-nodemailer-smtp-pool-2-8-2.lock
134 verbose cache add [ 'nodemailer-smtp-transport@2.7.2', null ]
135 verbose cache add name=undefined spec="nodemailer-smtp-transport@2.7.2" args=["nodemailer-smtp-transport@2.7.2",null]
136 verbose parsed url { protocol: null,
136 verbose parsed url   slashes: null,
136 verbose parsed url   auth: null,
136 verbose parsed url   host: null,
136 verbose parsed url   port: null,
136 verbose parsed url   hostname: null,
136 verbose parsed url   hash: null,
136 verbose parsed url   search: null,
136 verbose parsed url   query: null,
136 verbose parsed url   pathname: 'nodemailer-smtp-transport@2.7.2',
136 verbose parsed url   path: 'nodemailer-smtp-transport@2.7.2',
136 verbose parsed url   href: 'nodemailer-smtp-transport@2.7.2' }
137 verbose cache add name="nodemailer-smtp-transport" spec="2.7.2" args=["nodemailer-smtp-transport","2.7.2"]
138 verbose parsed url { protocol: null,
138 verbose parsed url   slashes: null,
138 verbose parsed url   auth: null,
138 verbose parsed url   host: null,
138 verbose parsed url   port: null,
138 verbose parsed url   hostname: null,
138 verbose parsed url   hash: null,
138 verbose parsed url   search: null,
138 verbose parsed url   query: null,
138 verbose parsed url   pathname: '2.7.2',
138 verbose parsed url   path: '2.7.2',
138 verbose parsed url   href: '2.7.2' }
139 verbose addNamed [ 'nodemailer-smtp-transport', '2.7.2' ]
140 verbose addNamed [ '2.7.2', '2.7.2' ]
141 silly lockFile 1397856b-nodemailer-smtp-transport-2-7-2 nodemailer-smtp-transport@2.7.2
142 verbose lock nodemailer-smtp-transport@2.7.2 /Users/david/.npm/1397856b-nodemailer-smtp-transport-2-7-2.lock
143 verbose cache add [ 'socks@1.1.9', null ]
144 verbose cache add name=undefined spec="socks@1.1.9" args=["socks@1.1.9",null]
145 verbose parsed url { protocol: null,
145 verbose parsed url   slashes: null,
145 verbose parsed url   auth: null,
145 verbose parsed url   host: null,
145 verbose parsed url   port: null,
145 verbose parsed url   hostname: null,
145 verbose parsed url   hash: null,
145 verbose parsed url   search: null,
145 verbose parsed url   query: null,
145 verbose parsed url   pathname: 'socks@1.1.9',
145 verbose parsed url   path: 'socks@1.1.9',
145 verbose parsed url   href: 'socks@1.1.9' }
146 verbose cache add name="socks" spec="1.1.9" args=["socks","1.1.9"]
147 verbose parsed url { protocol: null,
147 verbose parsed url   slashes: null,
147 verbose parsed url   auth: null,
147 verbose parsed url   host: null,
147 verbose parsed url   port: null,
147 verbose parsed url   hostname: null,
147 verbose parsed url   hash: null,
147 verbose parsed url   search: null,
147 verbose parsed url   query: null,
147 verbose parsed url   pathname: '1.1.9',
147 verbose parsed url   path: '1.1.9',
147 verbose parsed url   href: '1.1.9' }
148 verbose addNamed [ 'socks', '1.1.9' ]
149 verbose addNamed [ '1.1.9', '1.1.9' ]
150 silly lockFile d399138b-socks-1-1-9 socks@1.1.9
151 verbose lock socks@1.1.9 /Users/david/.npm/d399138b-socks-1-1-9.lock
152 verbose url raw libmime/2.1.0
153 verbose url resolving [ 'https://registry.npmjs.org/', './libmime/2.1.0' ]
154 verbose url resolved https://registry.npmjs.org/libmime/2.1.0
155 info trying registry request attempt 1 at 09:51:19
156 verbose etag "1MKONWRQNK01XR1Y1EHHQO2BH"
157 http GET https://registry.npmjs.org/libmime/2.1.0
158 verbose url raw mailcomposer/3.12.0
159 verbose url resolving [ 'https://registry.npmjs.org/', './mailcomposer/3.12.0' ]
160 verbose url resolved https://registry.npmjs.org/mailcomposer/3.12.0
161 info trying registry request attempt 1 at 09:51:19
162 verbose etag "CJR41Y4IVGI06YIAYG8O4BMLP"
163 http GET https://registry.npmjs.org/mailcomposer/3.12.0
164 verbose url raw nodemailer-shared/1.1.0
165 verbose url resolving [ 'https://registry.npmjs.org/', './nodemailer-shared/1.1.0' ]
166 verbose url resolved https://registry.npmjs.org/nodemailer-shared/1.1.0
167 info trying registry request attempt 1 at 09:51:19
168 verbose etag "EVLQPR7VF27NCBWK8IW6N8CLS"
169 http GET https://registry.npmjs.org/nodemailer-shared/1.1.0
170 verbose url raw nodemailer-direct-transport/3.3.2
171 verbose url resolving [ 'https://registry.npmjs.org/',
171 verbose url resolving   './nodemailer-direct-transport/3.3.2' ]
172 verbose url resolved https://registry.npmjs.org/nodemailer-direct-transport/3.3.2
173 info trying registry request attempt 1 at 09:51:19
174 verbose etag "5A63I2LMIDJ3I5MJP8RN8KUYA"
175 http GET https://registry.npmjs.org/nodemailer-direct-transport/3.3.2
176 verbose url raw nodemailer-smtp-pool/2.8.2
177 verbose url resolving [ 'https://registry.npmjs.org/',
177 verbose url resolving   './nodemailer-smtp-pool/2.8.2' ]
178 verbose url resolved https://registry.npmjs.org/nodemailer-smtp-pool/2.8.2
179 info trying registry request attempt 1 at 09:51:19
180 verbose etag "ED3Z0REEIZSZQ2APMPE7G0L8X"
181 http GET https://registry.npmjs.org/nodemailer-smtp-pool/2.8.2
182 verbose url raw socks/1.1.9
183 verbose url resolving [ 'https://registry.npmjs.org/', './socks/1.1.9' ]
184 verbose url resolved https://registry.npmjs.org/socks/1.1.9
185 info trying registry request attempt 1 at 09:51:19
186 verbose etag "2FA5M6HEMIPPN4ZZR9D6JBDI9"
187 http GET https://registry.npmjs.org/socks/1.1.9
188 verbose url raw nodemailer-smtp-transport/2.7.2
189 verbose url resolving [ 'https://registry.npmjs.org/',
189 verbose url resolving   './nodemailer-smtp-transport/2.7.2' ]
190 verbose url resolved https://registry.npmjs.org/nodemailer-smtp-transport/2.7.2
191 info trying registry request attempt 1 at 09:51:19
192 verbose etag "36100K01M2LBYYLN4FE16MYQA"
193 http GET https://registry.npmjs.org/nodemailer-smtp-transport/2.7.2
194 http 304 https://registry.npmjs.org/nodemailer-shared/1.1.0
195 silly registry.get cb [ 304,
195 silly registry.get   { date: 'Tue, 04 Oct 2016 16:51:19 GMT',
195 silly registry.get     via: '1.1 varnish',
195 silly registry.get     'cache-control': 'max-age=300',
195 silly registry.get     etag: '"EVLQPR7VF27NCBWK8IW6N8CLS"',
195 silly registry.get     age: '0',
195 silly registry.get     connection: 'keep-alive',
195 silly registry.get     'x-served-by': 'cache-sea1926-SEA',
195 silly registry.get     'x-cache': 'MISS',
195 silly registry.get     'x-cache-hits': '0',
195 silly registry.get     'x-timer': 'S1475599879.208025,VS0,VE21',
195 silly registry.get     vary: 'Accept-Encoding' } ]
196 verbose etag nodemailer-shared/1.1.0 from cache
197 verbose read json /Users/david/.npm/nodemailer-shared/1.1.0/package/package.json
198 silly lockFile 2da4ccb8-nodemailer-shared-1-1-0 nodemailer-shared@1.1.0
199 silly lockFile 2da4ccb8-nodemailer-shared-1-1-0 nodemailer-shared@1.1.0
200 http 304 https://registry.npmjs.org/mailcomposer/3.12.0
201 silly registry.get cb [ 304,
201 silly registry.get   { date: 'Tue, 04 Oct 2016 16:51:19 GMT',
201 silly registry.get     via: '1.1 varnish',
201 silly registry.get     'cache-control': 'max-age=300',
201 silly registry.get     etag: '"CJR41Y4IVGI06YIAYG8O4BMLP"',
201 silly registry.get     age: '0',
201 silly registry.get     connection: 'keep-alive',
201 silly registry.get     'x-served-by': 'cache-sea1921-SEA',
201 silly registry.get     'x-cache': 'HIT',
201 silly registry.get     'x-cache-hits': '1',
201 silly registry.get     'x-timer': 'S1475599879.208436,VS0,VE26',
201 silly registry.get     vary: 'Accept-Encoding' } ]
202 verbose etag mailcomposer/3.12.0 from cache
203 verbose read json /Users/david/.npm/mailcomposer/3.12.0/package/package.json
204 silly lockFile eab7c170-mailcomposer-3-12-0 mailcomposer@3.12.0
205 silly lockFile eab7c170-mailcomposer-3-12-0 mailcomposer@3.12.0
206 http 304 https://registry.npmjs.org/nodemailer-direct-transport/3.3.2
207 silly registry.get cb [ 304,
207 silly registry.get   { date: 'Tue, 04 Oct 2016 16:51:19 GMT',
207 silly registry.get     via: '1.1 varnish',
207 silly registry.get     'cache-control': 'max-age=300',
207 silly registry.get     etag: '"5A63I2LMIDJ3I5MJP8RN8KUYA"',
207 silly registry.get     age: '0',
207 silly registry.get     connection: 'keep-alive',
207 silly registry.get     'x-served-by': 'cache-sea1925-SEA',
207 silly registry.get     'x-cache': 'HIT',
207 silly registry.get     'x-cache-hits': '1',
207 silly registry.get     'x-timer': 'S1475599879.199465,VS0,VE83',
207 silly registry.get     vary: 'Accept-Encoding' } ]
208 verbose etag nodemailer-direct-transport/3.3.2 from cache
209 verbose read json /Users/david/.npm/nodemailer-direct-transport/3.3.2/package/package.json
210 silly lockFile 299fc345-odemailer-direct-transport-3-3-2 nodemailer-direct-transport@3.3.2
211 silly lockFile 299fc345-odemailer-direct-transport-3-3-2 nodemailer-direct-transport@3.3.2
212 http 304 https://registry.npmjs.org/socks/1.1.9
213 silly registry.get cb [ 304,
213 silly registry.get   { date: 'Tue, 04 Oct 2016 16:51:19 GMT',
213 silly registry.get     via: '1.1 varnish',
213 silly registry.get     'cache-control': 'max-age=300',
213 silly registry.get     etag: '"2FA5M6HEMIPPN4ZZR9D6JBDI9"',
213 silly registry.get     age: '0',
213 silly registry.get     connection: 'keep-alive',
213 silly registry.get     'x-served-by': 'cache-sea1926-SEA',
213 silly registry.get     'x-cache': 'HIT',
213 silly registry.get     'x-cache-hits': '1',
213 silly registry.get     'x-timer': 'S1475599879.242959,VS0,VE84',
213 silly registry.get     vary: 'Accept-Encoding' } ]
214 verbose etag socks/1.1.9 from cache
215 verbose read json /Users/david/.npm/socks/1.1.9/package/package.json
216 silly lockFile d399138b-socks-1-1-9 socks@1.1.9
217 silly lockFile d399138b-socks-1-1-9 socks@1.1.9
218 http 304 https://registry.npmjs.org/nodemailer-smtp-transport/2.7.2
219 silly registry.get cb [ 304,
219 silly registry.get   { date: 'Tue, 04 Oct 2016 16:51:19 GMT',
219 silly registry.get     via: '1.1 varnish',
219 silly registry.get     'cache-control': 'max-age=300',
219 silly registry.get     etag: '"36100K01M2LBYYLN4FE16MYQA"',
219 silly registry.get     age: '0',
219 silly registry.get     connection: 'keep-alive',
219 silly registry.get     'x-served-by': 'cache-sea1921-SEA',
219 silly registry.get     'x-cache': 'MISS',
219 silly registry.get     'x-cache-hits': '0',
219 silly registry.get     'x-timer': 'S1475599879.248752,VS0,VE102',
219 silly registry.get     vary: 'Accept-Encoding' } ]
220 verbose etag nodemailer-smtp-transport/2.7.2 from cache
221 verbose read json /Users/david/.npm/nodemailer-smtp-transport/2.7.2/package/package.json
222 silly lockFile 1397856b-nodemailer-smtp-transport-2-7-2 nodemailer-smtp-transport@2.7.2
223 silly lockFile 1397856b-nodemailer-smtp-transport-2-7-2 nodemailer-smtp-transport@2.7.2
224 http 304 https://registry.npmjs.org/nodemailer-smtp-pool/2.8.2
225 silly registry.get cb [ 304,
225 silly registry.get   { date: 'Tue, 04 Oct 2016 16:51:19 GMT',
225 silly registry.get     via: '1.1 varnish',
225 silly registry.get     'cache-control': 'max-age=300',
225 silly registry.get     etag: '"ED3Z0REEIZSZQ2APMPE7G0L8X"',
225 silly registry.get     age: '0',
225 silly registry.get     connection: 'keep-alive',
225 silly registry.get     'x-served-by': 'cache-sea1927-SEA',
225 silly registry.get     'x-cache': 'MISS',
225 silly registry.get     'x-cache-hits': '0',
225 silly registry.get     'x-timer': 'S1475599879.199664,VS0,VE197',
225 silly registry.get     vary: 'Accept-Encoding' } ]
226 verbose etag nodemailer-smtp-pool/2.8.2 from cache
227 verbose read json /Users/david/.npm/nodemailer-smtp-pool/2.8.2/package/package.json
228 silly lockFile 350b9cb8-nodemailer-smtp-pool-2-8-2 nodemailer-smtp-pool@2.8.2
229 silly lockFile 350b9cb8-nodemailer-smtp-pool-2-8-2 nodemailer-smtp-pool@2.8.2
230 http 304 https://registry.npmjs.org/libmime/2.1.0
231 silly registry.get cb [ 304,
231 silly registry.get   { date: 'Tue, 04 Oct 2016 16:51:19 GMT',
231 silly registry.get     via: '1.1 varnish',
231 silly registry.get     'cache-control': 'max-age=300',
231 silly registry.get     etag: '"1MKONWRQNK01XR1Y1EHHQO2BH"',
231 silly registry.get     age: '0',
231 silly registry.get     connection: 'keep-alive',
231 silly registry.get     'x-served-by': 'cache-sea1923-SEA',
231 silly registry.get     'x-cache': 'HIT',
231 silly registry.get     'x-cache-hits': '1',
231 silly registry.get     'x-timer': 'S1475599879.195868,VS0,VE329',
231 silly registry.get     vary: 'Accept-Encoding' } ]
232 verbose etag libmime/2.1.0 from cache
233 verbose read json /Users/david/.npm/libmime/2.1.0/package/package.json
234 silly lockFile c68d1675-libmime-2-1-0 libmime@2.1.0
235 silly lockFile c68d1675-libmime-2-1-0 libmime@2.1.0
236 silly resolved [ { name: 'nodemailer-shared',
236 silly resolved     version: '1.1.0',
236 silly resolved     description: 'Shared methods for the nodemailer stack',
236 silly resolved     main: 'lib/shared.js',
236 silly resolved     directories: { test: 'test' },
236 silly resolved     scripts: { test: 'grunt mochaTest' },
236 silly resolved     repository:
236 silly resolved      { type: 'git',
236 silly resolved        url: 'git+https://github.com/nodemailer/nodemailer-shared.git' },
236 silly resolved     keywords: [ 'nodemailer' ],
236 silly resolved     author: { name: 'Andris Reinman' },
236 silly resolved     license: 'MIT',
236 silly resolved     bugs: { url: 'https://github.com/nodemailer/nodemailer-shared/issues' },
236 silly resolved     homepage: 'https://github.com/nodemailer/nodemailer-shared#readme',
236 silly resolved     dependencies: { 'nodemailer-fetch': '1.6.0' },
236 silly resolved     devDependencies:
236 silly resolved      { chai: '^3.5.0',
236 silly resolved        grunt: '^1.0.1',
236 silly resolved        'grunt-cli': '^1.2.0',
236 silly resolved        'grunt-eslint': '^19.0.0',
236 silly resolved        'grunt-mocha-test': '^0.12.7',
236 silly resolved        mocha: '^3.0.2' },
236 silly resolved     readme: '# nodemailer-shared\n\nShared methods for the [Nodemailer](https://github.com/nodemailer/nodemailer) stack.\n\n## Methods\n\n  * `parseConnectionUrl(str)` parses a connection url into a nodemailer configuration object\n  * `getLogger(options)` returns a bunyan compatible logger instance\n  * `callbackPromise(resolve, reject)` returns a promise-resolving function suitable for using as a callback\n  * `resolveContent(data, key, callback)` converts a key of a data object from stream/url/path to a buffer\n\n## License\n\n**MIT**\n',
236 silly resolved     readmeFilename: 'README.md',
236 silly resolved     _id: 'nodemailer-shared@1.1.0',
236 silly resolved     _from: 'nodemailer-shared@1.1.0' },
236 silly resolved   { name: 'mailcomposer',
236 silly resolved     description: 'Compose E-Mail messages',
236 silly resolved     version: '3.12.0',
236 silly resolved     author: { name: 'Andris Reinman' },
236 silly resolved     license: 'MIT',
236 silly resolved     maintainers: [ [Object] ],
236 silly resolved     repository:
236 silly resolved      { type: 'git',
236 silly resolved        url: 'http://github.com/andris9/mailcomposer.git' },
236 silly resolved     scripts: { test: 'grunt mochaTest' },
236 silly resolved     main: './lib/mailcomposer',
236 silly resolved     dependencies: { buildmail: '3.10.0', libmime: '2.1.0' },
236 silly resolved     devDependencies:
236 silly resolved      { chai: '^3.5.0',
236 silly resolved        grunt: '^1.0.1',
236 silly resolved        'grunt-cli': '^1.2.0',
236 silly resolved        'grunt-eslint': '^19.0.0',
236 silly resolved        'grunt-mocha-test': '^0.12.7',
236 silly resolved        mocha: '^3.0.2',
236 silly resolved        sinon: '^1.17.5' },
236 silly resolved     engine: { node: '>=0.10' },
236 silly resolved     keywords: [ 'e-mail', 'mime', 'parser' ],
236 silly resolved     readme: '# mailcomposer\n\n**mailcomposer** is a Node.JS module for generating e-mail messages that can be streamed to SMTP or file.\n\n> **NB!** This module is not backwards compatible with versions 0.x\n\n[![Build Status](https://secure.travis-ci.org/andris9/mailcomposer.png)](http://travis-ci.org/andris9/mailcomposer)\n\n## Support mailcomposer development\n\n[![Donate to author](https://www.paypalobjects.com/en_US/i/btn/btn_donate_SM.gif)](https://www.paypal.com/cgi-bin/webscr?cmd=_s-xclick&hosted_button_id=DB26KWR2BQX5W)\n\n## Installation\n\nInstall through NPM\n\n    npm install mailcomposer\n\n## Usage\n\n### Include mailcomposer module\n\n```javascript\nvar mailcomposer = require("mailcomposer");\n```\n\n### Create a new `MailComposer` instance\n\n```javascript\nvar mail = mailcomposer(mailOptions);\n```\n\nWhere `mailOptions` is an object that defines the components of the message, see below\n\n## API\n\n### createReadStream\n\nTo create a stream that outputs a raw rfc822 message from the defined input, use `createReadStream()`\n\n```javascript\nvar mail = mailcomposer({from: \'...\', ...});\nvar stream = mail.createReadStream();\nstream.pipe(process.stdout);\n```\n\n### build\n\nTo generate the message and return it with a callback use `build()`\n\n```javascript\nvar mail = mailcomposer({from: \'...\', ...});\nmail.build(function(err, message){\n    process.stdout.write(message);\n});\n```\n\n### E-mail message fields\n\nThe following are the possible fields of an e-mail message:\n\n  - **from** - The e-mail address of the sender. All e-mail addresses can be plain `\'sender@server.com\'` or formatted `\'Sender Name <sender@server.com>\'`, see [here](#address-formatting) for details\n  - **sender** - An e-mail address that will appear on the *Sender:* field\n  - **to** - Comma separated list or an array of recipients e-mail addresses that will appear on the *To:* field\n  - **cc** - Comma separated list or an array of recipients e-mail addresses that will appear on the *Cc:* field\n  - **bcc** - Comma separated list or an array of recipients e-mail addresses that will appear on the *Bcc:* field\n  - **replyTo** - An e-mail address that will appear on the *Reply-To:* field\n  - **inReplyTo** - The message-id this message is replying\n  - **references** - Message-id list (an array or space separated string)\n  - **subject** - The subject of the e-mail\n  - **text** - The plaintext version of the message as an Unicode string, Buffer, Stream or an object *{path: \'...\'}*\n  - **html** - The HTML version of the message as an Unicode string, Buffer, Stream or an object *{path: \'...\'}*\n  - **watchHtml** - Apple Watch specific HTML version of the message, same usage as with `text` and `html`\n  - **icalEvent** - iCalendar event, same usage as with `text` and `html`. Event `method` attribute defaults to \'PUBLISH\' or define it yourself: `{method: \'REQUEST\', content: iCalString}`. This value is added as an additional alternative to html or text. Only utf-8 content is allowed\n  - **headers** - An object or array of additional header fields (e.g. *{"X-Key-Name": "key value"}* or *[{key: "X-Key-Name", value: "val1"}, {key: "X-Key-Name", value: "val2"}]*)\n  - **attachments** - An array of attachment objects  (see [below](#attachments) for details)\n  - **alternatives** - An array of alternative text contents (in addition to text and html parts)  (see [below](#alternatives) for details)\n  - **envelope** - optional SMTP envelope, if auto generated envelope is not suitable (see [below](#smtp-envelope) for details)\n  - **messageId** - optional Message-Id value, random value will be generated if not set\n  - **date** - optional Date value, current UTC string will be used if not set\n  - **encoding** - optional transfer encoding for the textual parts\n  - **raw** - if set then overwrites entire message output with this value. The value is not parsed, so you should still set address headers or the envelope value for the message to work\n  - **textEncoding** - set explicitly which encoding to use for text parts (*quoted-printable* or *base64*). If not set then encoding is detected from text content (mostly ascii means *quoted-printable*, otherwise *base64*)\n  - **disableUrlAccess** - if set to true then fails with an error when a node tries to load content from URL\n  - **disableFileAccess** - if set to true then fails with an error when a node tries to load content from a file\n\nAll text fields (e-mail addresses, plaintext body, html body) use UTF-8 as the encoding.\nAttachments are streamed as binary.\n\n### Attachments\n\nAttachment object consists of the following properties:\n\n  * **filename** - filename to be reported as the name of the attached file, use of unicode is allowed. If you do not want to use a filename, set this value as `false`, otherwise a filename is generated automatically\n  * **cid** - optional content id for using inline images in HTML message source. Using `cid` sets the default `contentDisposition` to `\'inline\'` and moves the attachment into a *multipart/related* mime node, so use it only if you actually want to use this attachment as an embedded image\n  * **content** - String, Buffer or a Stream contents for the attachment\n  * **encoding** - If set and `content` is string, then encodes the content to a Buffer using the specified encoding. Example values: `base64`, `hex`, `binary` etc. Useful if you want to use binary attachments in a JSON formatted e-mail object\n  * **path** - path to a file or an URL (data uris are allowed as well) if you want to stream the file instead of including it (better for larger attachments)\n  * **contentType** - optional content type for the attachment, if not set will be derived from the `filename` property\n  * **contentTransferEncoding** - optional transfer encoding for the attachment, if not set it will be derived from the `contentType` property. Example values: `quoted-printable`, `base64`\n  * **contentDisposition** - optional content disposition type for the attachment, defaults to \'attachment\'\n  * **headers** is an object of additional headers, similar to *message.headers* option `{\'X-My-Header\': \'value\'}`\n  * **raw** is an optional value that overrides entire node content in the mime message. If used then all other options set for this node are ignored. The value is either a string, a buffer, a stream or an attachment-like object (eg. provides `path` or `content`)\n\nAttachments can be added as many as you want.\n\n```javascript\nvar mailOptions = {\n    ...\n    attachments: [\n        {   // utf-8 string as an attachment\n            filename: \'text1.txt\',\n            content: \'hello world!\'\n        },\n        {   // binary buffer as an attachment\n            filename: \'text2.txt\',\n            content: new Buffer(\'hello world!\',\'utf-8\')\n        },\n        {   // file on disk as an attachment\n            filename: \'text3.txt\',\n            path: \'/path/to/file.txt\' // stream this file\n        },\n        {   // filename and content type is derived from path\n            path: \'/path/to/file.txt\'\n        },\n        {   // stream as an attachment\n            filename: \'text4.txt\',\n            content: fs.createReadStream(\'file.txt\')\n        },\n        {   // define custom content type for the attachment\n            filename: \'text.bin\',\n            content: \'hello world!\',\n            contentType: \'text/plain\'\n        },\n        {   // use URL as an attachment\n            filename: \'license.txt\',\n            path: \'https://raw.github.com/andris9/Nodemailer/master/LICENSE\'\n        },\n        {   // encoded string as an attachment\n            filename: \'text1.txt\',\n            content: \'aGVsbG8gd29ybGQh\',\n            encoding: \'base64\'\n        },\n        {   // data uri as an attachment\n            path: \'data:text/plain;base64,aGVsbG8gd29ybGQ=\'\n        }\n    ]\n}\n```\n\n### Alternatives\n\nIn addition to text and HTML, any kind of data can be inserted as an alternative content of the main body - for example a word processing document with the same text as in the HTML field. It is the job of the e-mail client to select and show the best fitting alternative to the reader. Usually this field is used for calendar events and such.\n\nAlternative objects use the same options as [attachment objects](#attachments). The difference between an attachment and an alternative is the fact that attachments are placed into *multipart/mixed* or *multipart/related* parts of the message white alternatives are placed into *multipart/alternative* part.\n\n**Usage example:**\n\n```javascript\nvar mailOptions = {\n    ...\n    html: \'<b>Hello world!</b>\',\n    alternatives: [\n        {\n            contentType: \'text/x-web-markdown\',\n            content: \'**Hello world!**\'\n        }\n    ]\n}\n```\n\nAlternatives can be added as many as you want.\n\n### Address Formatting\n\nAll the e-mail addresses can be plain e-mail addresses\n\n```\nfoobar@blurdybloop.com\n```\n\nor with formatted name (includes unicode support)\n\n```\n"Ноде Майлер" <foobar@blurdybloop.com>\n```\n\n> Notice that all address fields (even `from`) are comma separated lists, so if you want to use a comma in the name part, make sure you enclose the name in double quotes: `"Майлер, Ноде" <foobar@blurdybloop.com>`\n\nor as an address object (in this case you do not need to worry about the formatting, no need to use quotes etc.)\n\n```\n{\n    name: \'Майлер, Ноде\',\n    address: \'foobar@blurdybloop.com\'\n}\n```\n\nAll address fields accept comma separated list of e-mails or an array of\ne-mails or an array of comma separated list of e-mails or address objects - use it as you like.\nFormatting can be mixed.\n\n```\n...,\nto: \'foobar@blurdybloop.com, "Ноде Майлер" <bar@blurdybloop.com>, "Name, User" <baz@blurdybloop.com>\',\ncc: [\'foobar@blurdybloop.com\', \'"Ноде Майлер" <bar@blurdybloop.com>, "Name, User" <baz@blurdybloop.com>\'],\nbcc: [\'foobar@blurdybloop.com\', {name: \'Майлер, Ноде\', address: \'foobar@blurdybloop.com\'}]\n...\n```\n\nYou can even use unicode domains, these are automatically converted to punycode\n\n```\n\'"Unicode Domain" <info@müriaad-polüteism.info>\'\n```\n\n### SMTP envelope\n\nSMTP envelope is usually auto generated from `from`, `to`, `cc` and `bcc` fields but\nif for some reason you want to specify it yourself, you can do it with `envelope` property.\n\n`envelope` is an object with the following params: `from`, `to`, `cc` and `bcc` just like\nwith regular mail options. You can also use the regular address format, unicode domains etc.\n\n```javascript\nmailOptions = {\n    ...,\n    from: \'mailer@kreata.ee\',\n    to: \'daemon@kreata.ee\',\n    envelope: {\n        from: \'Daemon <deamon@kreata.ee>\',\n        to: \'mailer@kreata.ee, Mailer <mailer2@kreata.ee>\'\n    }\n}\n```\n\n> Not all transports can use the `envelope` object, for example SES ignores it and uses the data from the From:, To: etc. headers.\n\n### Using Embedded Images\n\nAttachments can be used as embedded images in the HTML body. To use this feature, you need to set additional property of the attachment - `cid` (unique identifier of the file) which is a reference to the attachment file. The same `cid` value must be used as the image URL in HTML (using `cid:` as the URL protocol, see example below).\n\n**NB!** the cid value should be as unique as possible!\n\n```javascript\nvar mailOptions = {\n    ...\n    html: \'Embedded image: <img src="cid:unique@kreata.ee"/>\',\n    attachments: [{\n        filename: \'image.png\',\n        path: \'/path/to/file\',\n        cid: \'unique@kreata.ee\' //same cid value as in the html img src\n    }]\n}\n```\n\n## License\n\n**MIT**\n',
236 silly resolved     readmeFilename: 'README.md',
236 silly resolved     _id: 'mailcomposer@3.12.0',
236 silly resolved     _from: 'mailcomposer@3.12.0' },
236 silly resolved   { name: 'nodemailer-direct-transport',
236 silly resolved     version: '3.3.2',
236 silly resolved     description: 'Direct transport for Nodemailer',
236 silly resolved     main: 'lib/direct-transport.js',
236 silly resolved     scripts: { test: 'grunt mochaTest' },
236 silly resolved     repository:
236 silly resolved      { type: 'git',
236 silly resolved        url: 'git://github.com/andris9/nodemailer-direct-transport.git' },
236 silly resolved     keywords: [ 'SMTP', 'Nodemailer' ],
236 silly resolved     author: { name: 'Andris Reinman' },
236 silly resolved     license: 'MIT',
236 silly resolved     bugs: { url: 'https://github.com/andris9/nodemailer-direct-transport/issues' },
236 silly resolved     homepage: 'http://github.com/andris9/nodemailer-direct-transport',
236 silly resolved     dependencies: { 'nodemailer-shared': '1.1.0', 'smtp-connection': '2.12.0' },
236 silly resolved     devDependencies:
236 silly resolved      { chai: '^3.5.0',
236 silly resolved        grunt: '^1.0.1',
236 silly resolved        'grunt-eslint': '^19.0.0',
236 silly resolved        'grunt-mocha-test': '^0.12.7',
236 silly resolved        mocha: '^3.0.2',
236 silly resolved        'smtp-server': '^1.14.2' },
236 silly resolved     readme: '# Direct SMTP transport module for Nodemailer\n\nApplies for Nodemailer v1.x and not for v0.x where transports are built-in.\n\n## Usage\n\nInstall with npm\n\n    npm install nodemailer-direct-transport\n\nRequire to your script\n\n```javascript\nvar nodemailer = require(\'nodemailer\');\nvar directTransport = require(\'nodemailer-direct-transport\');\n```\n\nCreate a Nodemailer transport object\n\n```javascript\nvar transporter = nodemailer.createTransport(directTransport(options))\n```\n\nWhere\n\n  * **options** defines connection data\n    * **options.name** hostname to be used when introducing the client to the MX server\n    * **options.logger** optional [bunyan](https://github.com/trentm/node-bunyan) compatible logger instance. If set to `true` then logs to console. If value is not set or is `false` then nothing is logged\n    * **options.debug** if set to true, then logs SMTP traffic, otherwise logs only transaction events\n    * **options.port** optional port to use for connecting to MX servers (defaults to MTA standard 25)\n    * **options.retryDelay** optional timeout in ms for retrying failed messages (defaults to 15 minutes)\n    * **getSocket** optional method that is called every time a new connection is made against the SMTP server. This method can provide an existing socket to be used instead of creating a new one\n\n**Example**\n\n```javascript\nvar transport = nodemailer.createTransport(directTransport({\n    name: \'smtp.example.com\' // should be the hostname machine IP address resolves to\n}));\n```\n\n## send callback\n\nSend callback includes the following arguments\n\n  * **error** if the mail was not sent\n    * **error.errors** is an array of error responses (one response for one MX exchange)\n      * **error.errors[].recipients** an array of failed recipients\n      * **error.errors[].response** Error response from the SMTP server\n  * **info** if at least one mail was sent or is pending\n    * **info.accepted** an array of recipients that were accepted\n    * **info.rejected** an array of recipients that were rejected\n    * **info.pending** an array of pending recipient objects (messages that were not rejected permanently and are retried later)\n      * **info.pending[].recipients** an array of recipient addresses that are still pending\n      * **info.pending[].response** Response from the SMTP server\n    * **info.errors** An array of errors (for these exhanges that rejected mail)\n\n## Issues\n\nDirect transport is very inefficient as it queues all e-mails to be sent into memory. Additionally, if a message is not yet sent and the process is closed, all data about queued messages is lost. Thus direct transport is only suitable for low throughput systems, where the message can be processed immediately.\n\nWhile not being 100% reliable (remember - if process exits, entire queue is lost), direct transport can still handle sending errors, graylisting and such. If a message can not be sent, it is re-queued and retried later.\n\n## License\n\n**MIT**\n',
236 silly resolved     readmeFilename: 'README.md',
236 silly resolved     _id: 'nodemailer-direct-transport@3.3.2',
236 silly resolved     _from: 'nodemailer-direct-transport@3.3.2' },
236 silly resolved   { name: 'socks',
236 silly resolved     version: '1.1.9',
236 silly resolved     description: 'A SOCKS proxy client supporting SOCKS 4, 4a, and 5. (also supports BIND/Associate)',
236 silly resolved     main: 'index.js',
236 silly resolved     homepage: 'https://github.com/JoshGlazebrook/socks',
236 silly resolved     repository:
236 silly resolved      { type: 'git',
236 silly resolved        url: 'https://github.com/JoshGlazebrook/socks.git' },
236 silly resolved     bugs: { url: 'https://github.com/JoshGlazebrook/socks/issues' },
236 silly resolved     keywords:
236 silly resolved      [ 'socks',
236 silly resolved        'proxy',
236 silly resolved        'client',
236 silly resolved        'tor',
236 silly resolved        'bind',
236 silly resolved        'associate',
236 silly resolved        'socks 4',
236 silly resolved        'socks 4a',
236 silly resolved        'socks 5',
236 silly resolved        'agent' ],
236 silly resolved     engines: { node: '>= 0.10.0', npm: '>= 1.3.5' },
236 silly resolved     author: { name: 'Josh Glazebrook' },
236 silly resolved     contributors: [ [Object] ],
236 silly resolved     license: 'MIT',
236 silly resolved     dependencies: { ip: '^1.1.2', 'smart-buffer': '^1.0.4' },
236 silly resolved     readme: 'socks\n=============\n\nsocks is a full client implementation of the SOCKS 4, 4a, and 5 protocols in an easy to use node.js module.\n\n### Notice\nAs of February 26th, 2015, socks is the new home of the socks-client package.\n\n### Why socks?\n\nThere is not any other SOCKS proxy client library on npm that supports all three variants of the SOCKS protocol. Nor are there any that support the BIND and associate features that some versions of the SOCKS protocol supports.\n\nKey Features:\n* Supports SOCKS 4, 4a, and 5 protocols\n* Supports the connect method (simple tcp connections of SOCKS)  (Client -> SOCKS Server -> Target Server)\n* Supports the BIND method (4, 4a, 5)\n* Supports the associate (UDP forwarding) method (5)\n* Simple and easy to use (one function call to make any type of SOCKS connection)\n\n## Installing:\n\n`npm install socks`\n\n### Getting Started Example\n\nFor this example, say you wanted to grab the html of google\'s home page.\n\n```javascript\nvar Socks = require(\'socks\');\n\nvar options = {\n    proxy: {\n        ipaddress: "202.101.228.108", // Random public proxy\n        port: 1080,\n        type: 5 // type is REQUIRED. Valid types: [4, 5]  (note 4 also works for 4a)\n    },\n    target: {\n        host: "google.com", // can be an ip address or domain (4a and 5 only)\n        port: 80\n    },\n    command: \'connect\'  // This defaults to connect, so it\'s optional if you\'re not using BIND or Associate.\n};\n\nSocks.createConnection(options, function(err, socket, info) {\n    if (err)\n        console.log(err);\n    else {\n        // Connection has been established, we can start sending data now:\n        socket.write("GET / HTTP/1.1\\nHost: google.com\\n\\n");\n        socket.on(\'data\', function(data) {\n            console.log(data.length);\n            console.log(data);\n        });\n\n        // PLEASE NOTE: sockets need to be resumed before any data will come in or out as they are paused right before this callback is fired.\n        socket.resume();\n\n        // 569\n        // <Buffer 48 54 54 50 2f 31 2e 31 20 33 30 31 20 4d 6f 76 65 64 20 50 65...\n    }\n});\n```\n\n### BIND Example:\n\nWhen sending the BIND command to a SOCKS proxy server, this will cause the proxy server to open up a new tcp port. Once this port is open, you, another client, application, etc, can then connect to the SOCKS proxy on that tcp port and communications will be forwarded to each connection through the proxy itself.\n\n```javascript\nvar options = {\n    proxy: {\n        ipaddress: "202.101.228.108",\n        port: 1080,\n        type: 4,\n        command: "bind" // Since we are using bind, we must specify it here.\n    },\n    target: {\n        host: "1.2.3.4", // When using bind, it\'s best to give an estimation of the ip that will be connecting to the newly opened tcp port on the proxy server.\n        port: 1080\n    }\n};\n\nSocks.createConnection(options, function(err, socket, info) {\n    if (err)\n        console.log(err);\n    else {\n        // BIND request has completed.\n        // info object contains the remote ip and newly opened tcp port to connect to.\n        console.log(info);\n\n        // { port: 1494, host: \'202.101.228.108\' }\n\n        socket.on(\'data\', function(data) {\n            console.log(data.length);\n            console.log(data);\n        });\n\n        // Remember to resume the socket stream.\n        socket.resume();\n    }\n});\n\n```\nAt this point, your original connection to the proxy server remains open, and no data will be received until a tcp connection is made to the given endpoint in the info object.\n\nFor an example, I am going to connect to the endpoint with telnet:\n\n```\nJoshs-MacBook-Pro:~ Josh$ telnet 202.101.228.108 1494\n Trying 202.101.228.108...\n Connected to 202.101.228.108.\n Escape character is \'^]\'.\n hello\n aaaaaaaaa\n```\n\nNote that this connection to the newly bound port does not need to go through the SOCKS handshake.\n\nBack at our original connection we see that we have received some new data:\n\n```\n8\n<Buffer 00 5a ca 61 43 a8 09 01>  // This first piece of information can be ignored.\n\n7\n<Buffer 68 65 6c 6c 6f 0d 0a> // Hello <\\r\\n (enter key)>\n\n11\n<Buffer 61 61 61 61 61 61 61 61 61 0d 0a> // aaaaaaaaa <\\r\\n (enter key)>\n```\n\nAs you can see the data entered in the telnet terminal is routed through the SOCKS proxy and back to the original connection that was made to the proxy.\n\n**Note** Please pay close attention to the first piece of data that was received.\n\n```\n<Buffer 00 5a ca 61 43 a8 09 01>\n\n        [005a] [PORT:2} [IP:4]\n```\n\nThis piece of data is technically part of the SOCKS BIND specifications, but because of my design decisions that were made in an effort to keep this library simple to use, you will need to make sure to ignore and/or deal with this initial packet that is received when a connection is made to the newly opened port.\n\n### Associate Example:\nThe associate command sets up a UDP relay for the remote SOCKS proxy server to relay UDP packets to the remote host of your choice.\n\n```javascript\nvar options = {\n    proxy: {\n        ipaddress: "202.101.228.108",\n        port: 1080,\n        type: 5,\n        command: "associate" // Since we are using associate, we must specify it here.\n    },\n    target: {\n        // When using associate, either set the ip and port to 0.0.0.0:0 or the expected source of incoming udp packets.\n        // Note: Some SOCKS servers MAY block associate requests with 0.0.0.0:0 endpoints.\n        // Note: ipv4, ipv6, and hostnames are supported here.\n        host: "0.0.0.0",\n        port: 0\n    }\n};\n\n\nSocks.createConnection(options, function(err, socket, info) {\n    if (err)\n        console.log(err);\n    else {\n        // Associate request has completed.\n        // info object contains the remote ip and udp port to send UDP packets to.\n        console.log(info);\n        // { port: 42803, host: \'202.101.228.108\' }\n\n        var udp = new dgram.Socket(\'udp4\');\n\n        // In this example we are going to send "Hello" to 1.2.3.4:2323 through the SOCKS proxy.\n\n        var pack = Socks.createUDPFrame({ host: "1.2.3.4", port: 2323}, new Buffer("hello"));\n\n        // Send Packet to Proxy UDP endpoint given in the info object.\n        udp.send(pack, 0, pack.length, info.port, info.host);\n    }\n});\n\n```\nNow assuming that the associate request went through correctly. Anything that is typed in the stdin will first be sent to the SOCKS proxy on the endpoint that was provided in the info object. Once the SOCKS proxy receives it, it will then forward on the actual UDP packet to the host you you wanted.\n\n\n1.2.3.4:2323 should now receive our relayed UDP packet from 202.101.228.108 (SOCKS proxy)\n```\n// <Buffer 68 65 6c 6c 6f>\n```\n\n## Using socks as an HTTP Agent\n\nYou can use socks as a http agent which will relay all your http\nconnections through the socks server.\n\nThe object that `Socks.Agent` accepts is the same as `Socks.createConnection`, you don\'t need to set a target since you have to define it in `http.request` or `http.get` methods.\n\nThe second argument is a boolean which indicates whether the remote endpoint requires TLS.\n\n```javascript\nvar socksAgent = new Socks.Agent({\n    proxy: {\n        ipaddress: "202.101.228.108",\n        port: 1080,\n        type: 5,\n    }},\n    true, // we are connecting to a HTTPS server, false for HTTP server\n    false // rejectUnauthorized option passed to tls.connect(). Only when secure is set to true\n);\n\nhttp.get({ hostname: \'google.com\', port: \'443\', agent: socksAgent}, function (res) {\n    // Connection header by default is keep-alive, we have to manually end the socket\n    socksAgent.encryptedSocket.end();\n});\n```\n\n# Api Reference:\n\nThere are only three exported functions that you will ever need to use.\n\n### Socks.createConnection( options, callback(err, socket, info)  )\n> `Object` **Object containing options to use when creating this connection**\n\n> `function` **Callback that is called when connection completes or errors**\n\nOptions:\n\n```javascript\nvar options = {\n\n    // Information about proxy server\n    proxy: {\n        // IP Address of Proxy (Required)\n        ipaddress: "1.2.3.4",\n\n        // TCP Port of Proxy (Required)\n        port: 1080,\n\n        // Proxy Type [4, 5] (Required)\n        // Note: 4 works for both 4 and 4a.\n        type: 4,\n\n        // SOCKS Connection Type (Optional)\n        // - defaults to \'connect\'\n\n        // \'connect\'    - establishes a regular SOCKS connection to the target host.\n        // \'bind\'       - establishes an open tcp port on the SOCKS for another client to connect to.\n        // \'associate\'  - establishes a udp association relay on the SOCKS server.\n        command: "connect",\n\n\n        // SOCKS 4 Specific:\n\n        // UserId used when making a SOCKS 4/4a request. (Optional)\n        userid: "someuserid",\n\n        // SOCKS 5 Specific:\n\n        // Authentication used for SOCKS 5 (when it\'s required) (Optional)\n        authentication: {\n            username: "Josh",\n            password: "somepassword"\n        }\n    },\n\n    // Information about target host and/or expected client of a bind association. (Required)\n    target: {\n        // When using \'connect\':    IP Address or hostname (4a and 5 only) of a target to connect to.\n        // When using \'bind\':       IP Address of the expected client that will connect to the newly open tcp port.\n        // When using \'associate\':  IP Address and Port of the expected client that will send UDP packets to this UDP association relay.\n\n        // Note:\n        // When using SOCKS 4, only an ipv4 address can be used.\n        // When using SOCKS 4a, an ipv4 address OR a hostname can be used.\n        // When using SOCKS 5, ipv4, ipv6, or a hostname can be used.\n        host: "1.2.3.4",\n\n        // TCP port of target to connect to.\n        port: 1080\n    },\n\n    // Amount of time to wait for a connection to be established. (Optional)\n    // - defaults to 10000ms (10 seconds)\n    timeout: 10000\n};\n```\nCallback:\n\n```javascript\n\n// err:  If an error occurs, err will be an Error object, otherwise null.\n// socket: Socket with established connection to your target host.\n// info: If using BIND or associate, this will be the remote endpoint to use.\n\nfunction(err, socket, info) {\n  // Hopefully no errors :-)\n}\n```\n\n### Socks.createUDPFrame( target, data, [frame] )\n> `Object` **Target host object containing destination for UDP packet**\n\n> `Buffer` **Data Buffer to send in the UDP packet**\n\n> `Number` **Frame number in UDP packet. (defaults to 0)**\n\nCreates a UDP packet frame for using with UDP association relays.\n\nreturns `Buffer` The completed UDP packet container to be sent to the proxy for forwarding.\n\ntarget:\n```javascript\n\n// Target host information for where the UDP packet should be sent.\nvar target =\n    {\n        // ipv4, ipv6, or hostname for where to have the proxy send the UDP packet.\n        host: "1.2.3.4",\n\n        // udpport for where to send the UDP packet.\n        port: 2323\n    }\n\n```\n\n### Socks.Agent( options, tls)  )\n> `Object` **Object containing options to use when creating this connection (see above in createConnection)**\n\n> `boolean` **Boolean indicating if we upgrade the connection to TLS on the socks server**\n\n\n# Further Reading:\nPlease read the SOCKS 5 specifications for more information on how to use BIND and Associate.\nhttp://www.ietf.org/rfc/rfc1928.txt\n\n# License\nThis work is licensed under the [MIT license](http://en.wikipedia.org/wiki/MIT_License).\n',
236 silly resolved     readmeFilename: 'README.md',
236 silly resolved     _id: 'socks@1.1.9',
236 silly resolved     _from: 'socks@1.1.9' },
236 silly resolved   { name: 'nodemailer-smtp-transport',
236 silly resolved     version: '2.7.2',
236 silly resolved     description: 'SMTP transport for Nodemailer',
236 silly resolved     main: 'lib/smtp-transport.js',
236 silly resolved     scripts: { test: 'grunt mochaTest' },
236 silly resolved     repository:
236 silly resolved      { type: 'git',
236 silly resolved        url: 'git://github.com/andris9/nodemailer-smtp-transport.git' },
236 silly resolved     keywords: [ 'SMTP', 'Nodemailer' ],
236 silly resolved     author: { name: 'Andris Reinman' },
236 silly resolved     license: 'MIT',
236 silly resolved     bugs: { url: 'https://github.com/andris9/nodemailer-smtp-transport/issues' },
236 silly resolved     homepage: 'http://github.com/andris9/nodemailer-smtp-transport',
236 silly resolved     dependencies:
236 silly resolved      { 'nodemailer-shared': '1.1.0',
236 silly resolved        'nodemailer-wellknown': '0.1.10',
236 silly resolved        'smtp-connection': '2.12.0' },
236 silly resolved     devDependencies:
236 silly resolved      { chai: '^3.5.0',
236 silly resolved        grunt: '^1.0.1',
236 silly resolved        'grunt-cli': '^1.2.0',
236 silly resolved        'grunt-eslint': '^19.0.0',
236 silly resolved        'grunt-mocha-test': '^0.12.7',
236 silly resolved        mocha: '^3.0.2',
236 silly resolved        'smtp-server': '^1.14.2' },
236 silly resolved     readme: '# SMTP transport module for Nodemailer\n\n[![Build Status](https://travis-ci.org/andris9/nodemailer-smtp-transport.svg)](https://travis-ci.org/andris9/nodemailer-smtp-transport)\n[![NPM version](https://badge.fury.io/js/nodemailer-smtp-transport.png)](http://badge.fury.io/js/nodemailer-smtp-transport)\n\nApplies for Nodemailer v1.x and not for v0.x where transports are built-in.\n\n## Setup\n\nInstall with npm\n\n    npm install nodemailer-smtp-transport\n\nRequire to your script\n\n```javascript\nvar nodemailer = require(\'nodemailer\');\nvar smtpTransport = require(\'nodemailer-smtp-transport\');\n```\n\n## Usage\n\nCreate a Nodemailer transport object\n\n```javascript\nvar transporter = nodemailer.createTransport(smtpTransport(options))\n```\n\nor (by using smtpTransport as default)\n\n```javascript\nvar transporter = nodemailer.createTransport(options)\n```\n\nWhere\n\n  * **options** defines connection data\n    * **options.port** is the port to connect to (defaults to 25 or 465)\n    * **options.host** is the hostname or IP address to connect to (defaults to \'localhost\')\n    * **options.secure** defines if the connection should use SSL (if `true`) or not (if `false`)\n    * **options.auth** defines authentication data (see [authentication](#authentication) section below)\n    * **options.ignoreTLS** turns off STARTTLS support if true\n    * **options.name** optional hostname of the client, used for identifying to the server\n    * **options.localAddress** is the local interface to bind to for network connections\n    * **options.connectionTimeout** how many milliseconds to wait for the connection to establish\n    * **options.greetingTimeout** how many milliseconds to wait for the greeting after connection is established\n    * **options.socketTimeout** how many milliseconds of inactivity to allow\n    * **options.logger** optional [bunyan](https://github.com/trentm/node-bunyan) compatible logger instance. If set to `true` then logs to console. If value is not set or is `false` then nothing is logged\n    * **options.debug** if set to true, then logs SMTP traffic, otherwise logs only transaction events\n    * **options.authMethod** defines preferred authentication method, eg. \'PLAIN\'\n    * **options.tls** defines additional options to be passed to the socket constructor, eg. *{rejectUnauthorized: true}*\n    * **getSocket** optional method that is called every time a new connection is made against the SMTP server. This method can provide an existing socket to be used instead of creating a new one\n\nAlternatively you can use connection url with protocol \'smtp:\' or \'smtps:\'. Use query arguments for additional configuration values.\n\n**Example**\n\n```javascript\nvar transporter = nodemailer.createTransport(smtpTransport({\n    host: \'localhost\',\n    port: 25,\n    auth: {\n        user: \'username\',\n        pass: \'password\'\n    }\n}));\n```\n\nOr with connection url (gmail)\n\n```javascript\nvar transporter = nodemailer.createTransport(\n    smtpTransport(\'smtps://username%40gmail.com:password@smtp.gmail.com\')\n);\n```\n\n## Authentication\n\nIf authentication data is not present, the connection is considered authenticated from the start.\n\nSet authentcation data with `options.auth`\n\nWhere\n\n  * **auth** is the authentication object\n    * **auth.user** is the username\n    * **auth.pass** is the password for the user\n    * **auth.xoauth2** is the OAuth2 access token (preferred if both `pass` and `xoauth2` values are set) or an [XOAuth2](https://github.com/andris9/xoauth2) token generator object.\n\nIf a [XOAuth2](https://github.com/andris9/xoauth2) token generator is used as the value for `auth.xoauth2` then you do not need to set the value for `auth.user`. XOAuth2 generator generates required `accessToken` itself if it is missing or expired. In this case if the authentication fails, a new token is requested and the authentication is retried once. If it still fails, an error is returned.\n\nInstall xoauth2 module to use XOauth2 token generators (not included by default)\n\n    npm install xoauth2 --save\n\n**XOAuth2 Example**\n\n> **NB!** The correct OAuth2 scope for Gmail is `https://mail.google.com/`\n\n```javascript\nvar nodemailer = require(\'nodemailer\');\nvar generator = require(\'xoauth2\').createXOAuth2Generator({\n    user: \'{username}\',\n    clientId: \'{Client ID}\',\n    clientSecret: \'{Client Secret}\',\n    refreshToken: \'{refresh-token}\',\n    accessToken: \'{cached access token}\' // optional\n});\n\n// listen for token updates\n// you probably want to store these to a db\ngenerator.on(\'token\', function(token){\n    console.log(\'New token for %s: %s\', token.user, token.accessToken);\n});\n\n// login\nvar transporter = nodemailer.createTransport(({\n    service: \'gmail\',\n    auth: {\n        xoauth2: generator\n    }\n}));\n\n// send mail\ntransporter.sendMail({\n    from: \'sender@example.com\',\n    to: \'receiver@example.com\',\n    subject: \'hello world!\',\n    text: \'Authenticated with OAuth2\'\n}, function(error, response) {\n   if (error) {\n        console.log(error);\n   } else {\n        console.log(\'Message sent\');\n   }\n});\n```\n\n## Using well-known services\n\nIf you do not want to specify the hostname, port and security settings for a well known service, you can use it by its name (case insensitive)\n\n```javascript\nsmtpTransport({\n    service: \'gmail\',\n    auth: ..\n});\n```\n\nSee the list of all supported services [here](https://github.com/andris9/nodemailer-wellknown#supported-services).\n\n## Verify connection configuration\n\nYou can verify your configuration with `verify(callback)` call. If it returns an error, then something is not correct, otherwise the server is ready to accept messages.\n\n```javascript\n// verify connection configuration\ntransporter.verify(function(error, success) {\n   if (error) {\n        console.log(error);\n   } else {\n        console.log(\'Server is ready to take our messages\');\n   }\n});\n```\n\n## License\n\n**MIT**\n',
236 silly resolved     readmeFilename: 'README.md',
236 silly resolved     _id: 'nodemailer-smtp-transport@2.7.2',
236 silly resolved     _from: 'nodemailer-smtp-transport@2.7.2' },
236 silly resolved   { name: 'nodemailer-smtp-pool',
236 silly resolved     version: '2.8.2',
236 silly resolved     description: 'SMTP transport for Nodemailer',
236 silly resolved     main: 'lib/smtp-pool.js',
236 silly resolved     scripts: { test: 'grunt mochaTest' },
236 silly resolved     repository:
236 silly resolved      { type: 'git',
236 silly resolved        url: 'git://github.com/andris9/nodemailer-smtp-pool.git' },
236 silly resolved     keywords: [ 'SMTP', 'Nodemailer' ],
236 silly resolved     author: { name: 'Andris Reinman' },
236 silly resolved     license: 'MIT',
236 silly resolved     bugs: { url: 'https://github.com/andris9/nodemailer-smtp-pool/issues' },
236 silly resolved     homepage: 'http://github.com/andris9/nodemailer-smtp-pool',
236 silly resolved     dependencies:
236 silly resolved      { 'nodemailer-shared': '1.1.0',
236 silly resolved        'nodemailer-wellknown': '0.1.10',
236 silly resolved        'smtp-connection': '2.12.0' },
236 silly resolved     devDependencies:
236 silly resolved      { chai: '^3.5.0',
236 silly resolved        grunt: '^1.0.1',
236 silly resolved        'grunt-cli': '^1.2.0',
236 silly resolved        'grunt-eslint': '^19.0.0',
236 silly resolved        'grunt-mocha-test': '^0.12.7',
236 silly resolved        mocha: '^3.0.2',
236 silly resolved        'smtp-server': '^1.14.2' },
236 silly resolved     readme: '# SMTP transport module for Nodemailer\n\nApplies for Nodemailer v1.x and not for v0.x where transports are built-in.\n\n## Usage\n\nInstall with npm\n\n    npm install nodemailer-smtp-pool\n\nRequire to your script\n\n```javascript\nvar nodemailer = require(\'nodemailer\');\nvar smtpPool = require(\'nodemailer-smtp-pool\');\n```\n\nCreate a Nodemailer transport object\n\n```javascript\nvar transporter = nodemailer.createTransport(smtpPool(options))\n```\n\nWhere\n\n  * **options** defines connection data\n    * **options.port** is the port to connect to (defaults to 25 or 465)\n    * **options.host** is the hostname or IP address to connect to (defaults to \'localhost\')\n    * **options.secure** defines if the connection should use SSL (if `true`) or not (if `false`)\n    * **options.auth** defines authentication data (see [authentication](#authentication) section below)\n    * **options.ignoreTLS** turns off STARTTLS support if true\n    * **options.name** optional hostname of the client, used for identifying to the server\n    * **options.localAddress** is the local interface to bind to for network connections\n    * **options.connectionTimeout** how many milliseconds to wait for the connection to establish\n    * **options.greetingTimeout** how many milliseconds to wait for the greeting after connection is established\n    * **options.socketTimeout** how many milliseconds of inactivity to allow\n    * **options.logger** optional [bunyan](https://github.com/trentm/node-bunyan) compatible logger instance. If set to `true` then logs to console. If value is not set or is `false` then nothing is logged\n    * **options.debug** if set to true, then logs SMTP traffic, otherwise logs only transaction events\n    * **options.authMethod** defines preferred authentication method, eg. \'PLAIN\'\n    * **options.tls** defines additional options to be passed to the socket constructor, eg. *{rejectUnauthorized: true}*\n    * **maxConnections** (defaults to 5) is the count of maximum simultaneous connections to make against the SMTP server\n    * **maxMessages** (defaults to 100) limits the message count to be sent using a single connection. After maxMessages messages the connection is dropped and a new one is created for the following messages\n    * **rateLimit** (defaults to `false`) limits the message count to be sent in a second. Once rateLimit is reached, sending is paused until the end of the second. This limit is shared between connections, so if one connection uses up the limit, then other connections are paused as well\n    * **getSocket** optional method that is called every time a new connection is made against the SMTP server. This method can provide an existing socket to be used instead of creating a new one\n\nAlternatively you can use connection url with protocol \'smtp:\' or \'smtps:\'. Use query arguments for additional configuration values.\n\nPooled SMTP transport uses the same options as [SMTP transport](https://github.com/andris9/nodemailer-smtp-transport) with the addition of **maxConnections** and **maxMessages**.\n\n**Example**\n\n```javascript\nvar transport = nodemailer.createTransport(smtpPool({\n    host: \'localhost\',\n    port: 25,\n    auth: {\n        user: \'username\',\n        pass: \'password\'\n    },\n    // use up to 5 parallel connections\n    maxConnections: 5,\n    // do not send more than 10 messages per connection\n    maxMessages: 10,\n    // no not send more than 5 messages in a second\n    rateLimit: 5\n}));\n```\n\nOr with connection url (gmail)\n\n```javascript\nvar transporter = nodemailer.createTransport(\n    smtpTransport(\'smtps://username%40gmail.com:password@smtp.gmail.com\')\n);\n```\n\n## Events\n\nThe following events are emitted by this transport\n\n### Event: \'idle\'\n\nEmitted if there are free slots in the connection pool.\nCheck with `.isIdle()` method if these free slots are still available.\nUsing this method makes sense if you maintain your own queue (for example pull from some queue service).\n\n```javascript\nvar messages = [...\'list of messages\'];\ntransporter.on(\'idle\', function(){\n    // send next messages from the pending queue\n    while(transporter.isIdle() && messages.length){\n        transporter.send(messages.shift());\n    }\n});\n```\n\n## Authentication\n\nIf authentication data is not present, the connection is considered authenticated from the start.\n\nSet authentcation data with `options.auth`\n\nWhere\n\n  * **auth** is the authentication object\n    * **auth.user** is the username\n    * **auth.pass** is the password for the user\n    * **auth.xoauth2** is the OAuth2 access token (preferred if both `pass` and `xoauth2` values are set) or an [XOAuth2](https://github.com/andris9/xoauth2) token generator object.\n\nIf a [XOAuth2](https://github.com/andris9/xoauth2) token generator is used as the value for `auth.xoauth2` then you do not need to set the value for `auth.user`. XOAuth2 generator generates required `accessToken` itself if it is missing or expired. In this case if the authentication fails, a new token is requested and the authentication is retried once. If it still fails, an error is returned.\n\nInstall xoauth2 module to use XOauth2 token generators (not included by default)\n\n    npm install xoauth2 --save\n\n**XOAuth2 Example**\n\n> **NB!** The correct OAuth2 scope for Gmail is `https://mail.google.com/`\n\n```javascript\nvar generator = require(\'xoauth2\').createXOAuth2Generator({\n    user: \'{username}\',\n    clientId: \'{Client ID}\',\n    clientSecret: \'{Client Secret}\',\n    refreshToken: \'{refresh-token}\',\n    accessToken: \'{cached access token}\' // optional\n});\n\n// listen for token updates\n// you probably want to store these to a db\ngenerator.on(\'token\', function(token){\n    console.log(\'New token for %s: %s\', token.user, token.accessToken);\n});\n\n// login\nvar transport = nodemailer.createTransport(smtpPool({\n    service: \'gmail\',\n    auth: {\n        xoauth2: generator\n    },\n    maxConnections: 5,\n    maxMessages: 10\n}));\n```\n\n## Using well-known services\n\nIf you do not want to specify the hostname, port and security settings for a well known service, you can use it by its name (case insensitive).\n\n```javascript\nsmtpPool({\n    service: \'gmail\',\n    auth: ..\n});\n```\n\nSee the list of all supported services [here](https://github.com/andris9/nodemailer-wellknown#supported-services).\n\n## Close the pool\n\nClose all connections with `close()`\n\n```javascript\ntransport.close();\n```\n\n## Verify connection configuration\n\nYou can verify your configuration with `verify(callback)` call. If it returns an error, then something is not correct, otherwise the server is ready to accept messages.\n\n```javascript\n// verify connection configuration\ntransporter.verify(function(error, success) {\n   if (error) {\n        console.log(error);\n   } else {\n        console.log(\'Server is ready to take our messages\');\n   }\n});\n```\n\n## License\n\n**MIT**\n',
236 silly resolved     readmeFilename: 'README.md',
236 silly resolved     _id: 'nodemailer-smtp-pool@2.8.2',
236 silly resolved     _from: 'nodemailer-smtp-pool@2.8.2' },
236 silly resolved   { name: 'libmime',
236 silly resolved     description: 'Encode and decode quoted printable and base64 strings',
236 silly resolved     version: '2.1.0',
236 silly resolved     main: 'lib/libmime',
236 silly resolved     homepage: 'https://github.com/andris9/libmime',
236 silly resolved     repository: { type: 'git', url: 'git://github.com/andris9/libmime.git' },
236 silly resolved     license: 'MIT',
236 silly resolved     keywords: [ 'MIME', 'Base64', 'Quoted-Printable' ],
236 silly resolved     author: { name: 'Andris Reinman', email: 'andris@kreata.ee' },
236 silly resolved     scripts: { test: 'grunt mochaTest' },
236 silly resolved     dependencies: { 'iconv-lite': '0.4.13', libbase64: '0.1.0', libqp: '1.1.0' },
236 silly resolved     devDependencies:
236 silly resolved      { chai: '^3.5.0',
236 silly resolved        grunt: '^1.0.1',
236 silly resolved        'grunt-cli': '^1.2.0',
236 silly resolved        'grunt-eslint': '^19.0.0',
236 silly resolved        'grunt-mocha-test': '^0.12.7',
236 silly resolved        mocha: '^3.0.2' },
236 silly resolved     readme: '# libmime\n\n`libmime` provides useful MIME related functions. For Quoted-Printable and Base64 encoding and decoding see [libqp](https://github.com/andris9/libqp) and [libbase64](https://github.com/andris9/libabase64).\n\n## Installation\n\n### [npm](https://www.npmjs.org/):\n\n    npm install libmime\n\n## Usage\n\n    var libmime = require(\'libmime\');\n\n## Methods\n\n### Encoded Words\n\n#### #encodeWord\n\nEncodes a string into mime [encoded word](http://en.wikipedia.org/wiki/MIME#Encoded-Word) format.\n\n    libmime.encodeWord(str [, mimeWordEncoding[, maxLength]]) → String\n\n  * **str** - String or Buffer to be encoded\n  * **mimeWordEncoding** - Encoding for the mime word, either Q or B (default is \'Q\')\n  * **maxLength** - If set, split mime words into several chunks if needed\n\n**Example**\n\n    libmime.encodeWord(\'See on õhin test\', \'Q\');\n\nBecomes with UTF-8 and Quoted-printable encoding\n\n    =?UTF-8?Q?See_on_=C3=B5hin_test?=\n\n#### #decodeWord\n\nDecodes a string from mime encoded word format.\n\n    libmime.decodeWord(str) → String\n\n  * **str** - String to be decoded\n\n**Example**\n\n    libmime.decodeWord(\'=?UTF-8?Q?See_on_=C3=B5hin_test?=\');\n\nwill become\n\n    See on õhin test\n\n#### #encodeWords\n\nEncodes non ascii sequences in a string to mime words.\n\n    libmime.encodeWords(str[, mimeWordEncoding[, maxLength]) → String\n\n  * **str** - String or Buffer to be encoded\n  * **mimeWordEncoding** - Encoding for the mime word, either Q or B (default is \'Q\')\n  * **maxLength** - If set, split mime words into several chunks if needed\n\n#### #decodeWords\n\nDecodes a string that might include one or several mime words. If no mime words are found from the string, the original string is returned\n\n    libmime.decodeWords(str) → String\n\n  * **str** - String to be decoded\n\n### Folding\n\n#### #foldLines\n\nFolds a long line according to the [RFC 5322](http://tools.ietf.org/html/rfc5322#section-2.1.1). Mostly needed for folding header lines.\n\n    libmime.foldLines(str [, lineLength[, afterSpace]]) → String\n\n  * **str** - String to be folded\n  * **lineLength** - Maximum length of a line (defaults to 76)\n  * **afterSpace** - If true, leave a space in the end of a line\n\n**Example**\n\n    libmime.foldLines(\'Content-Type: multipart/alternative; boundary="----zzzz----"\')\n\nresults in\n\n    Content-Type: multipart/alternative;\n         boundary="----zzzz----"\n\n\n#### #encodeFlowed\n\nAdds soft line breaks to content marked with `format=flowed` options to ensure that no line in the message is never longer than lineLength.\n\n    libmime.encodeFlowed(str [, lineLength]) → String\n\n  * **str** Plaintext string that requires wrapping\n  * **lineLength** (defaults to 76) Maximum length of a line\n\n#### #decodeFlowed\n\nUnwraps a plaintext string in format=flowed wrapping.\n\n    libmime.decodeFlowed(str [, delSp]) → String\n\n  * **str** Plaintext string with format=flowed to decode\n  * **delSp** If true, delete leading spaces (delsp=yes)\n\n### Headers\n\n#### #decodeHeader\n\nUnfolds a header line and splits it to key and value pair. The return value is in the form of `{key: \'subject\', value: \'test\'}`. The value is not mime word decoded, you need to do your own decoding based on the rules for the specific header key.\n\n    libmime.decodeHeader(headerLine) → Object\n\n  * **headerLine** - Single header line, might include linebreaks as well if folded\n\n#### #decodeHeaders\n\nParses a block of header lines. Does not decode mime words as every header might have its own rules (eg. formatted email addresses and such).\n\nReturn value is an object of headers, where header keys are object keys and values are arrays.\n\n    libmime.decodeHeaders(headers) → Object\n\n  * **headers** - Headers string\n\n#### #parseHeaderValue\n\nParses a header value with `key=value` arguments into a structured object. Useful when dealing with\n`content-type` and such. Continuation encoded params are joined into mime encoded words.\n\n    parseHeaderValue(valueString) → Object\n\n  * **valueString** - a header value without the key\n\n**Example**\n\n```javascript\nparseHeaderValue(\'content-type: text/plain; CHARSET="UTF-8"\');\n```\n\nOutputs\n\n```json\n{\n    "value": "text/plain",\n    "params": {\n        "charset": "UTF-8"\n    }\n}\n```\n\n#### #buildHeaderValue\n\nJoins structured header value together as \'value; param1=value1; param2=value2\'\n\n    buildHeaderValue(structuredHeader) → String\n\n  * **structuredHeader** - a header value formatted with `parseHeaderValue`\n\n`filename` argument is encoded with continuation encoding if needed\n\n#### #buildHeaderParam\n\nEncodes and splits a header param value according to [RFC2231](https://tools.ietf.org/html/rfc2231#section-3) Parameter Value Continuations.\n\n    libmime.buildHeaderParam(key, str, maxLength) → Array\n\n  * **key** - Parameter key (eg. `filename`)\n  * **str** - String or an Buffer value to encode\n  * **maxLength** - Maximum length of the encoded string part (not line length). Defaults to 50\n\nThe method returns an array of encoded parts with the following structure: `[{key:\'...\', value: \'...\'}]`\n\n**Example**\n\n```\nlibmime.buildHeaderParam(\'filename\', \'filename õäöü.txt\', 20);\n→\n[ { key: \'filename*0*\', value: \'utf-8\\\'\\\'filename%20\' },\n  { key: \'filename*1*\', value: \'%C3%B5%C3%A4%C3%B6\' },\n  { key: \'filename*2*\', value: \'%C3%BC.txt\' } ]\n```\n\nThis can be combined into a properly formatted header:\n\n```\nContent-disposition: attachment; filename*0*=utf-8\'\'filename%20\n  filename*1*=%C3%B5%C3%A4%C3%B6; filename*2*=%C3%BC.txt\n```\n\n### MIME Types\n\n#### #detectExtension\n\nReturns file extension for a content type string. If no suitable extensions are found, \'bin\' is used as the default extension.\n\n    libmime.detectExtension(mimeType) → String\n\n  * **mimeType** - Content type to be checked for\n\n**Example**\n\n    libmime.detectExtension(\'image/jpeg\') // returns \'jpeg\'\n\n#### #detectMimeType\n\nReturns content type for a file extension. If no suitable content types are found, \'application/octet-stream\' is used as the default content type\n\n    libmime.detectMimeType(extension) → String\n\n  * **extension** Extension (or filename) to be checked for\n\n**Example**\n\n    libmime.detectExtension(\'logo.jpg\') // returns \'image/jpeg\'\n\n## License\n\n**MIT**',
236 silly resolved     readmeFilename: 'README.md',
236 silly resolved     _id: 'libmime@2.1.0',
236 silly resolved     _from: 'libmime@2.1.0' } ]
237 info install nodemailer-shared@1.1.0 into /Users/david/nodejs-template/node_modules/nodemailer
238 info install mailcomposer@3.12.0 into /Users/david/nodejs-template/node_modules/nodemailer
239 info install nodemailer-direct-transport@3.3.2 into /Users/david/nodejs-template/node_modules/nodemailer
240 info install socks@1.1.9 into /Users/david/nodejs-template/node_modules/nodemailer
241 info install nodemailer-smtp-transport@2.7.2 into /Users/david/nodejs-template/node_modules/nodemailer
242 info install nodemailer-smtp-pool@2.8.2 into /Users/david/nodejs-template/node_modules/nodemailer
243 info install libmime@2.1.0 into /Users/david/nodejs-template/node_modules/nodemailer
244 info installOne nodemailer-shared@1.1.0
245 info installOne mailcomposer@3.12.0
246 info installOne nodemailer-direct-transport@3.3.2
247 info installOne socks@1.1.9
248 warn engine socks@1.1.9: wanted: {"node":">= 0.10.0","npm":">= 1.3.5"} (current: {"node":"v0.10.2","npm":"1.2.15"})
249 info installOne nodemailer-smtp-transport@2.7.2
250 info installOne nodemailer-smtp-pool@2.8.2
251 info installOne libmime@2.1.0
252 verbose from cache /Users/david/.npm/nodemailer-shared/1.1.0/package/package.json
253 info /Users/david/nodejs-template/node_modules/nodemailer/node_modules/nodemailer-shared unbuild
254 verbose read json /Users/david/nodejs-template/node_modules/nodemailer/node_modules/nodemailer-shared/package.json
255 verbose from cache /Users/david/.npm/mailcomposer/3.12.0/package/package.json
256 info /Users/david/nodejs-template/node_modules/nodemailer/node_modules/mailcomposer unbuild
257 verbose read json /Users/david/nodejs-template/node_modules/nodemailer/node_modules/mailcomposer/package.json
258 verbose from cache /Users/david/.npm/nodemailer-direct-transport/3.3.2/package/package.json
259 info /Users/david/nodejs-template/node_modules/nodemailer/node_modules/nodemailer-direct-transport unbuild
260 verbose read json /Users/david/nodejs-template/node_modules/nodemailer/node_modules/nodemailer-direct-transport/package.json
261 verbose from cache /Users/david/.npm/socks/1.1.9/package/package.json
262 info /Users/david/nodejs-template/node_modules/nodemailer/node_modules/socks unbuild
263 verbose read json /Users/david/nodejs-template/node_modules/nodemailer/node_modules/socks/package.json
264 verbose from cache /Users/david/.npm/nodemailer-smtp-transport/2.7.2/package/package.json
265 info /Users/david/nodejs-template/node_modules/nodemailer/node_modules/nodemailer-smtp-transport unbuild
266 verbose read json /Users/david/nodejs-template/node_modules/nodemailer/node_modules/nodemailer-smtp-transport/package.json
267 verbose from cache /Users/david/.npm/nodemailer-smtp-pool/2.8.2/package/package.json
268 info /Users/david/nodejs-template/node_modules/nodemailer/node_modules/nodemailer-smtp-pool unbuild
269 verbose read json /Users/david/nodejs-template/node_modules/nodemailer/node_modules/nodemailer-smtp-pool/package.json
270 verbose from cache /Users/david/.npm/libmime/2.1.0/package/package.json
271 info /Users/david/nodejs-template/node_modules/nodemailer/node_modules/libmime unbuild
272 verbose read json /Users/david/nodejs-template/node_modules/nodemailer/node_modules/libmime/package.json
273 verbose tar unpack /Users/david/.npm/nodemailer-shared/1.1.0/package.tgz
274 silly lockFile 84faf4c3-r-node-modules-nodemailer-shared /Users/david/nodejs-template/node_modules/nodemailer/node_modules/nodemailer-shared
275 verbose lock /Users/david/nodejs-template/node_modules/nodemailer/node_modules/nodemailer-shared /Users/david/.npm/84faf4c3-r-node-modules-nodemailer-shared.lock
276 silly lockFile aac8d4dc-emailer-shared-1-1-0-package-tgz /Users/david/.npm/nodemailer-shared/1.1.0/package.tgz
277 verbose lock /Users/david/.npm/nodemailer-shared/1.1.0/package.tgz /Users/david/.npm/aac8d4dc-emailer-shared-1-1-0-package-tgz.lock
278 verbose tar unpack /Users/david/.npm/mailcomposer/3.12.0/package.tgz
279 silly lockFile bdd7ec03-mailer-node-modules-mailcomposer /Users/david/nodejs-template/node_modules/nodemailer/node_modules/mailcomposer
280 verbose lock /Users/david/nodejs-template/node_modules/nodemailer/node_modules/mailcomposer /Users/david/.npm/bdd7ec03-mailer-node-modules-mailcomposer.lock
281 silly lockFile 25ed094a--mailcomposer-3-12-0-package-tgz /Users/david/.npm/mailcomposer/3.12.0/package.tgz
282 verbose lock /Users/david/.npm/mailcomposer/3.12.0/package.tgz /Users/david/.npm/25ed094a--mailcomposer-3-12-0-package-tgz.lock
283 verbose tar unpack /Users/david/.npm/nodemailer-direct-transport/3.3.2/package.tgz
284 silly lockFile 30248647-ules-nodemailer-direct-transport /Users/david/nodejs-template/node_modules/nodemailer/node_modules/nodemailer-direct-transport
285 verbose lock /Users/david/nodejs-template/node_modules/nodemailer/node_modules/nodemailer-direct-transport /Users/david/.npm/30248647-ules-nodemailer-direct-transport.lock
286 silly lockFile f7cd780d-rect-transport-3-3-2-package-tgz /Users/david/.npm/nodemailer-direct-transport/3.3.2/package.tgz
287 verbose lock /Users/david/.npm/nodemailer-direct-transport/3.3.2/package.tgz /Users/david/.npm/f7cd780d-rect-transport-3-3-2-package-tgz.lock
288 verbose tar unpack /Users/david/.npm/socks/1.1.9/package.tgz
289 silly lockFile 44e4e498-es-nodemailer-node-modules-socks /Users/david/nodejs-template/node_modules/nodemailer/node_modules/socks
290 verbose lock /Users/david/nodejs-template/node_modules/nodemailer/node_modules/socks /Users/david/.npm/44e4e498-es-nodemailer-node-modules-socks.lock
291 silly lockFile dd33501b-avid-npm-socks-1-1-9-package-tgz /Users/david/.npm/socks/1.1.9/package.tgz
292 verbose lock /Users/david/.npm/socks/1.1.9/package.tgz /Users/david/.npm/dd33501b-avid-npm-socks-1-1-9-package-tgz.lock
293 verbose tar unpack /Users/david/.npm/nodemailer-smtp-transport/2.7.2/package.tgz
294 silly lockFile e839a57f-odules-nodemailer-smtp-transport /Users/david/nodejs-template/node_modules/nodemailer/node_modules/nodemailer-smtp-transport
295 verbose lock /Users/david/nodejs-template/node_modules/nodemailer/node_modules/nodemailer-smtp-transport /Users/david/.npm/e839a57f-odules-nodemailer-smtp-transport.lock
296 silly lockFile 41ad48ad-smtp-transport-2-7-2-package-tgz /Users/david/.npm/nodemailer-smtp-transport/2.7.2/package.tgz
297 verbose lock /Users/david/.npm/nodemailer-smtp-transport/2.7.2/package.tgz /Users/david/.npm/41ad48ad-smtp-transport-2-7-2-package-tgz.lock
298 verbose tar unpack /Users/david/.npm/nodemailer-smtp-pool/2.8.2/package.tgz
299 silly lockFile 5371d4cc-ode-modules-nodemailer-smtp-pool /Users/david/nodejs-template/node_modules/nodemailer/node_modules/nodemailer-smtp-pool
300 verbose lock /Users/david/nodejs-template/node_modules/nodemailer/node_modules/nodemailer-smtp-pool /Users/david/.npm/5371d4cc-ode-modules-nodemailer-smtp-pool.lock
301 silly lockFile 1bdabbb9-iler-smtp-pool-2-8-2-package-tgz /Users/david/.npm/nodemailer-smtp-pool/2.8.2/package.tgz
302 verbose lock /Users/david/.npm/nodemailer-smtp-pool/2.8.2/package.tgz /Users/david/.npm/1bdabbb9-iler-smtp-pool-2-8-2-package-tgz.lock
303 verbose tar unpack /Users/david/.npm/libmime/2.1.0/package.tgz
304 silly lockFile 2454a725--nodemailer-node-modules-libmime /Users/david/nodejs-template/node_modules/nodemailer/node_modules/libmime
305 verbose lock /Users/david/nodejs-template/node_modules/nodemailer/node_modules/libmime /Users/david/.npm/2454a725--nodemailer-node-modules-libmime.lock
306 silly lockFile 72e9d210-id-npm-libmime-2-1-0-package-tgz /Users/david/.npm/libmime/2.1.0/package.tgz
307 verbose lock /Users/david/.npm/libmime/2.1.0/package.tgz /Users/david/.npm/72e9d210-id-npm-libmime-2-1-0-package-tgz.lock
308 silly gunzTarPerm modes [ '755', '644' ]
309 silly gunzTarPerm modes [ '755', '644' ]
310 silly gunzTarPerm modes [ '755', '644' ]
311 silly gunzTarPerm modes [ '755', '644' ]
312 silly gunzTarPerm modes [ '755', '644' ]
313 silly gunzTarPerm modes [ '755', '644' ]
314 silly gunzTarPerm modes [ '755', '644' ]
315 silly gunzTarPerm extractEntry package.json
316 silly gunzTarPerm extractEntry package.json
317 silly gunzTarPerm extractEntry package.json
318 silly gunzTarPerm extractEntry package.json
319 silly gunzTarPerm extractEntry package.json
320 silly gunzTarPerm extractEntry package.json
321 silly gunzTarPerm extractEntry package.json
322 silly gunzTarPerm extractEntry .npmignore
323 silly gunzTarPerm extractEntry README.md
324 silly gunzTarPerm extractEntry .npmignore
325 silly gunzTarPerm extractEntry README.md
326 silly gunzTarPerm extractEntry .npmignore
327 silly gunzTarPerm extractEntry README.md
328 silly gunzTarPerm extractEntry .npmignore
329 silly gunzTarPerm extractEntry README.md
330 silly gunzTarPerm extractEntry .npmignore
331 silly gunzTarPerm extractEntry README.md
332 silly gunzTarPerm extractEntry .npmignore
333 silly gunzTarPerm extractEntry README.md
334 silly gunzTarPerm extractEntry .npmignore
335 silly gunzTarPerm extractEntry README.md
336 silly gunzTarPerm extractEntry LICENSE
337 silly gunzTarPerm extractEntry .eslintrc.js
338 silly gunzTarPerm extractEntry Gruntfile.js
339 silly gunzTarPerm extractEntry lib/mailcomposer.js
340 silly gunzTarPerm extractEntry LICENSE
341 silly gunzTarPerm extractEntry .eslintrc.js
342 silly gunzTarPerm extractEntry LICENSE
343 silly gunzTarPerm extractEntry .eslintrc.js
344 silly gunzTarPerm extractEntry LICENSE
345 silly gunzTarPerm extractEntry index.js
346 silly gunzTarPerm extractEntry examples/associate.js
347 silly gunzTarPerm extractEntry examples/bind.js
348 silly gunzTarPerm extractEntry examples/connect.js
349 silly gunzTarPerm extractEntry lib/socks-agent.js
350 silly gunzTarPerm extractEntry lib/socks-client.js
351 silly gunzTarPerm extractEntry LICENSE
352 silly gunzTarPerm extractEntry .eslintrc.js
353 silly gunzTarPerm extractEntry LICENSE
354 silly gunzTarPerm extractEntry .eslintrc.js
355 silly gunzTarPerm extractEntry LICENSE
356 silly gunzTarPerm extractEntry .eslintrc.js
357 silly gunzTarPerm extractEntry Gruntfile.js
358 silly gunzTarPerm extractEntry CHANGELOG.md
359 silly gunzTarPerm extractEntry Gruntfile.js
360 silly gunzTarPerm extractEntry lib/assign.js
361 silly gunzTarPerm extractEntry Gruntfile.js
362 silly gunzTarPerm extractEntry .travis.yml
363 silly gunzTarPerm extractEntry Gruntfile.js
364 silly gunzTarPerm extractEntry lib/smtp-transport.js
365 silly gunzTarPerm extractEntry CHANGELOG.md
366 silly gunzTarPerm extractEntry lib/charset.js
367 silly gunzTarPerm extractEntry lib/libmime.js
368 silly gunzTarPerm extractEntry lib/mimetypes.js
369 silly gunzTarPerm extractEntry lib/shared.js
370 silly gunzTarPerm extractEntry test/shared-test.js
371 silly gunzTarPerm extractEntry test/fixtures/message.html
372 silly gunzTarPerm extractEntry lib/direct-transport.js
373 silly gunzTarPerm extractEntry lib/message-queue.js
374 silly gunzTarPerm extractEntry test/direct-transport-test.js
375 silly gunzTarPerm extractEntry test/message-queue-test.js
376 silly gunzTarPerm extractEntry lib/pool-resource.js
377 silly gunzTarPerm extractEntry lib/smtp-pool.js
378 verbose read json /Users/david/nodejs-template/node_modules/nodemailer/node_modules/nodemailer-smtp-transport/package.json
379 silly lockFile e839a57f-odules-nodemailer-smtp-transport /Users/david/nodejs-template/node_modules/nodemailer/node_modules/nodemailer-smtp-transport
380 silly lockFile e839a57f-odules-nodemailer-smtp-transport /Users/david/nodejs-template/node_modules/nodemailer/node_modules/nodemailer-smtp-transport
381 silly lockFile 41ad48ad-smtp-transport-2-7-2-package-tgz /Users/david/.npm/nodemailer-smtp-transport/2.7.2/package.tgz
382 silly lockFile 41ad48ad-smtp-transport-2-7-2-package-tgz /Users/david/.npm/nodemailer-smtp-transport/2.7.2/package.tgz
383 info preinstall nodemailer-smtp-transport@2.7.2
384 verbose from cache /Users/david/nodejs-template/node_modules/nodemailer/node_modules/nodemailer-smtp-transport/package.json
385 verbose readDependencies using package.json deps
386 verbose from cache /Users/david/nodejs-template/node_modules/nodemailer/node_modules/nodemailer-smtp-transport/package.json
387 verbose readDependencies using package.json deps
388 verbose read json /Users/david/nodejs-template/node_modules/nodemailer/node_modules/mailcomposer/package.json
389 verbose cache add [ 'nodemailer-wellknown@0.1.10', null ]
390 verbose cache add name=undefined spec="nodemailer-wellknown@0.1.10" args=["nodemailer-wellknown@0.1.10",null]
391 verbose parsed url { protocol: null,
391 verbose parsed url   slashes: null,
391 verbose parsed url   auth: null,
391 verbose parsed url   host: null,
391 verbose parsed url   port: null,
391 verbose parsed url   hostname: null,
391 verbose parsed url   hash: null,
391 verbose parsed url   search: null,
391 verbose parsed url   query: null,
391 verbose parsed url   pathname: 'nodemailer-wellknown@0.1.10',
391 verbose parsed url   path: 'nodemailer-wellknown@0.1.10',
391 verbose parsed url   href: 'nodemailer-wellknown@0.1.10' }
392 verbose cache add name="nodemailer-wellknown" spec="0.1.10" args=["nodemailer-wellknown","0.1.10"]
393 verbose parsed url { protocol: null,
393 verbose parsed url   slashes: null,
393 verbose parsed url   auth: null,
393 verbose parsed url   host: null,
393 verbose parsed url   port: null,
393 verbose parsed url   hostname: null,
393 verbose parsed url   hash: null,
393 verbose parsed url   search: null,
393 verbose parsed url   query: null,
393 verbose parsed url   pathname: '0.1.10',
393 verbose parsed url   path: '0.1.10',
393 verbose parsed url   href: '0.1.10' }
394 verbose addNamed [ 'nodemailer-wellknown', '0.1.10' ]
395 verbose addNamed [ '0.1.10', '0.1.10' ]
396 silly lockFile 5ed532fc-nodemailer-wellknown-0-1-10 nodemailer-wellknown@0.1.10
397 verbose lock nodemailer-wellknown@0.1.10 /Users/david/.npm/5ed532fc-nodemailer-wellknown-0-1-10.lock
398 verbose cache add [ 'smtp-connection@2.12.0', null ]
399 verbose cache add name=undefined spec="smtp-connection@2.12.0" args=["smtp-connection@2.12.0",null]
400 verbose parsed url { protocol: null,
400 verbose parsed url   slashes: null,
400 verbose parsed url   auth: null,
400 verbose parsed url   host: null,
400 verbose parsed url   port: null,
400 verbose parsed url   hostname: null,
400 verbose parsed url   hash: null,
400 verbose parsed url   search: null,
400 verbose parsed url   query: null,
400 verbose parsed url   pathname: 'smtp-connection@2.12.0',
400 verbose parsed url   path: 'smtp-connection@2.12.0',
400 verbose parsed url   href: 'smtp-connection@2.12.0' }
401 verbose cache add name="smtp-connection" spec="2.12.0" args=["smtp-connection","2.12.0"]
402 verbose parsed url { protocol: null,
402 verbose parsed url   slashes: null,
402 verbose parsed url   auth: null,
402 verbose parsed url   host: null,
402 verbose parsed url   port: null,
402 verbose parsed url   hostname: null,
402 verbose parsed url   hash: null,
402 verbose parsed url   search: null,
402 verbose parsed url   query: null,
402 verbose parsed url   pathname: '2.12.0',
402 verbose parsed url   path: '2.12.0',
402 verbose parsed url   href: '2.12.0' }
403 verbose addNamed [ 'smtp-connection', '2.12.0' ]
404 verbose addNamed [ '2.12.0', '2.12.0' ]
405 silly lockFile ad9cab39-smtp-connection-2-12-0 smtp-connection@2.12.0
406 verbose lock smtp-connection@2.12.0 /Users/david/.npm/ad9cab39-smtp-connection-2-12-0.lock
407 verbose url raw nodemailer-wellknown/0.1.10
408 verbose url resolving [ 'https://registry.npmjs.org/',
408 verbose url resolving   './nodemailer-wellknown/0.1.10' ]
409 verbose url resolved https://registry.npmjs.org/nodemailer-wellknown/0.1.10
410 info trying registry request attempt 1 at 09:51:19
411 verbose etag "2G5VGVR9N929K91Q1BG33XD0"
412 http GET https://registry.npmjs.org/nodemailer-wellknown/0.1.10
413 verbose url raw smtp-connection/2.12.0
414 verbose url resolving [ 'https://registry.npmjs.org/', './smtp-connection/2.12.0' ]
415 verbose url resolved https://registry.npmjs.org/smtp-connection/2.12.0
416 info trying registry request attempt 1 at 09:51:19
417 verbose etag "2ZRZQM09KRHNSAJLJ4Y24CJZM"
418 http GET https://registry.npmjs.org/smtp-connection/2.12.0
419 silly lockFile bdd7ec03-mailer-node-modules-mailcomposer /Users/david/nodejs-template/node_modules/nodemailer/node_modules/mailcomposer
420 silly lockFile bdd7ec03-mailer-node-modules-mailcomposer /Users/david/nodejs-template/node_modules/nodemailer/node_modules/mailcomposer
421 verbose read json /Users/david/nodejs-template/node_modules/nodemailer/node_modules/nodemailer-shared/package.json
422 verbose read json /Users/david/nodejs-template/node_modules/nodemailer/node_modules/nodemailer-smtp-pool/package.json
423 silly lockFile 25ed094a--mailcomposer-3-12-0-package-tgz /Users/david/.npm/mailcomposer/3.12.0/package.tgz
424 silly lockFile 25ed094a--mailcomposer-3-12-0-package-tgz /Users/david/.npm/mailcomposer/3.12.0/package.tgz
425 info preinstall mailcomposer@3.12.0
426 verbose from cache /Users/david/nodejs-template/node_modules/nodemailer/node_modules/mailcomposer/package.json
427 silly lockFile 84faf4c3-r-node-modules-nodemailer-shared /Users/david/nodejs-template/node_modules/nodemailer/node_modules/nodemailer-shared
428 silly lockFile 84faf4c3-r-node-modules-nodemailer-shared /Users/david/nodejs-template/node_modules/nodemailer/node_modules/nodemailer-shared
429 verbose readDependencies using package.json deps
430 verbose from cache /Users/david/nodejs-template/node_modules/nodemailer/node_modules/mailcomposer/package.json
431 silly lockFile 5371d4cc-ode-modules-nodemailer-smtp-pool /Users/david/nodejs-template/node_modules/nodemailer/node_modules/nodemailer-smtp-pool
432 silly lockFile 5371d4cc-ode-modules-nodemailer-smtp-pool /Users/david/nodejs-template/node_modules/nodemailer/node_modules/nodemailer-smtp-pool
433 verbose read json /Users/david/nodejs-template/node_modules/nodemailer/node_modules/socks/package.json
434 verbose readDependencies using package.json deps
435 silly lockFile aac8d4dc-emailer-shared-1-1-0-package-tgz /Users/david/.npm/nodemailer-shared/1.1.0/package.tgz
436 silly lockFile aac8d4dc-emailer-shared-1-1-0-package-tgz /Users/david/.npm/nodemailer-shared/1.1.0/package.tgz
437 silly lockFile 1bdabbb9-iler-smtp-pool-2-8-2-package-tgz /Users/david/.npm/nodemailer-smtp-pool/2.8.2/package.tgz
438 silly lockFile 1bdabbb9-iler-smtp-pool-2-8-2-package-tgz /Users/david/.npm/nodemailer-smtp-pool/2.8.2/package.tgz
439 verbose cache add [ 'buildmail@3.10.0', null ]
440 verbose cache add name=undefined spec="buildmail@3.10.0" args=["buildmail@3.10.0",null]
441 verbose parsed url { protocol: null,
441 verbose parsed url   slashes: null,
441 verbose parsed url   auth: null,
441 verbose parsed url   host: null,
441 verbose parsed url   port: null,
441 verbose parsed url   hostname: null,
441 verbose parsed url   hash: null,
441 verbose parsed url   search: null,
441 verbose parsed url   query: null,
441 verbose parsed url   pathname: 'buildmail@3.10.0',
441 verbose parsed url   path: 'buildmail@3.10.0',
441 verbose parsed url   href: 'buildmail@3.10.0' }
442 verbose cache add name="buildmail" spec="3.10.0" args=["buildmail","3.10.0"]
443 verbose parsed url { protocol: null,
443 verbose parsed url   slashes: null,
443 verbose parsed url   auth: null,
443 verbose parsed url   host: null,
443 verbose parsed url   port: null,
443 verbose parsed url   hostname: null,
443 verbose parsed url   hash: null,
443 verbose parsed url   search: null,
443 verbose parsed url   query: null,
443 verbose parsed url   pathname: '3.10.0',
443 verbose parsed url   path: '3.10.0',
443 verbose parsed url   href: '3.10.0' }
444 verbose addNamed [ 'buildmail', '3.10.0' ]
445 verbose addNamed [ '3.10.0', '3.10.0' ]
446 silly lockFile d01805bd-buildmail-3-10-0 buildmail@3.10.0
447 verbose lock buildmail@3.10.0 /Users/david/.npm/d01805bd-buildmail-3-10-0.lock
448 info preinstall nodemailer-shared@1.1.0
449 info preinstall nodemailer-smtp-pool@2.8.2
450 verbose from cache /Users/david/nodejs-template/node_modules/nodemailer/node_modules/nodemailer-shared/package.json
451 verbose readDependencies using package.json deps
452 verbose from cache /Users/david/nodejs-template/node_modules/nodemailer/node_modules/nodemailer-shared/package.json
453 verbose from cache /Users/david/nodejs-template/node_modules/nodemailer/node_modules/nodemailer-smtp-pool/package.json
454 silly lockFile 44e4e498-es-nodemailer-node-modules-socks /Users/david/nodejs-template/node_modules/nodemailer/node_modules/socks
455 silly lockFile 44e4e498-es-nodemailer-node-modules-socks /Users/david/nodejs-template/node_modules/nodemailer/node_modules/socks
456 verbose url raw buildmail/3.10.0
457 verbose url resolving [ 'https://registry.npmjs.org/', './buildmail/3.10.0' ]
458 verbose url resolved https://registry.npmjs.org/buildmail/3.10.0
459 info trying registry request attempt 1 at 09:51:19
460 verbose etag "DPONYZLEPSYLS77YXBRXY6ZJ"
461 http GET https://registry.npmjs.org/buildmail/3.10.0
462 verbose readDependencies using package.json deps
463 verbose readDependencies using package.json deps
464 verbose from cache /Users/david/nodejs-template/node_modules/nodemailer/node_modules/nodemailer-smtp-pool/package.json
465 verbose readDependencies using package.json deps
466 silly lockFile dd33501b-avid-npm-socks-1-1-9-package-tgz /Users/david/.npm/socks/1.1.9/package.tgz
467 silly lockFile dd33501b-avid-npm-socks-1-1-9-package-tgz /Users/david/.npm/socks/1.1.9/package.tgz
468 verbose cache add [ 'nodemailer-fetch@1.6.0', null ]
469 verbose cache add name=undefined spec="nodemailer-fetch@1.6.0" args=["nodemailer-fetch@1.6.0",null]
470 verbose parsed url { protocol: null,
470 verbose parsed url   slashes: null,
470 verbose parsed url   auth: null,
470 verbose parsed url   host: null,
470 verbose parsed url   port: null,
470 verbose parsed url   hostname: null,
470 verbose parsed url   hash: null,
470 verbose parsed url   search: null,
470 verbose parsed url   query: null,
470 verbose parsed url   pathname: 'nodemailer-fetch@1.6.0',
470 verbose parsed url   path: 'nodemailer-fetch@1.6.0',
470 verbose parsed url   href: 'nodemailer-fetch@1.6.0' }
471 verbose cache add name="nodemailer-fetch" spec="1.6.0" args=["nodemailer-fetch","1.6.0"]
472 verbose parsed url { protocol: null,
472 verbose parsed url   slashes: null,
472 verbose parsed url   auth: null,
472 verbose parsed url   host: null,
472 verbose parsed url   port: null,
472 verbose parsed url   hostname: null,
472 verbose parsed url   hash: null,
472 verbose parsed url   search: null,
472 verbose parsed url   query: null,
472 verbose parsed url   pathname: '1.6.0',
472 verbose parsed url   path: '1.6.0',
472 verbose parsed url   href: '1.6.0' }
473 verbose addNamed [ 'nodemailer-fetch', '1.6.0' ]
474 verbose addNamed [ '1.6.0', '1.6.0' ]
475 silly lockFile c87ce7a1-nodemailer-fetch-1-6-0 nodemailer-fetch@1.6.0
476 verbose lock nodemailer-fetch@1.6.0 /Users/david/.npm/c87ce7a1-nodemailer-fetch-1-6-0.lock
477 verbose cache add [ 'nodemailer-wellknown@0.1.10', null ]
478 verbose cache add name=undefined spec="nodemailer-wellknown@0.1.10" args=["nodemailer-wellknown@0.1.10",null]
479 verbose parsed url { protocol: null,
479 verbose parsed url   slashes: null,
479 verbose parsed url   auth: null,
479 verbose parsed url   host: null,
479 verbose parsed url   port: null,
479 verbose parsed url   hostname: null,
479 verbose parsed url   hash: null,
479 verbose parsed url   search: null,
479 verbose parsed url   query: null,
479 verbose parsed url   pathname: 'nodemailer-wellknown@0.1.10',
479 verbose parsed url   path: 'nodemailer-wellknown@0.1.10',
479 verbose parsed url   href: 'nodemailer-wellknown@0.1.10' }
480 verbose cache add name="nodemailer-wellknown" spec="0.1.10" args=["nodemailer-wellknown","0.1.10"]
481 verbose parsed url { protocol: null,
481 verbose parsed url   slashes: null,
481 verbose parsed url   auth: null,
481 verbose parsed url   host: null,
481 verbose parsed url   port: null,
481 verbose parsed url   hostname: null,
481 verbose parsed url   hash: null,
481 verbose parsed url   search: null,
481 verbose parsed url   query: null,
481 verbose parsed url   pathname: '0.1.10',
481 verbose parsed url   path: '0.1.10',
481 verbose parsed url   href: '0.1.10' }
482 verbose addNamed [ 'nodemailer-wellknown', '0.1.10' ]
483 verbose cache add [ 'smtp-connection@2.12.0', null ]
484 verbose cache add name=undefined spec="smtp-connection@2.12.0" args=["smtp-connection@2.12.0",null]
485 verbose parsed url { protocol: null,
485 verbose parsed url   slashes: null,
485 verbose parsed url   auth: null,
485 verbose parsed url   host: null,
485 verbose parsed url   port: null,
485 verbose parsed url   hostname: null,
485 verbose parsed url   hash: null,
485 verbose parsed url   search: null,
485 verbose parsed url   query: null,
485 verbose parsed url   pathname: 'smtp-connection@2.12.0',
485 verbose parsed url   path: 'smtp-connection@2.12.0',
485 verbose parsed url   href: 'smtp-connection@2.12.0' }
486 verbose cache add name="smtp-connection" spec="2.12.0" args=["smtp-connection","2.12.0"]
487 verbose parsed url { protocol: null,
487 verbose parsed url   slashes: null,
487 verbose parsed url   auth: null,
487 verbose parsed url   host: null,
487 verbose parsed url   port: null,
487 verbose parsed url   hostname: null,
487 verbose parsed url   hash: null,
487 verbose parsed url   search: null,
487 verbose parsed url   query: null,
487 verbose parsed url   pathname: '2.12.0',
487 verbose parsed url   path: '2.12.0',
487 verbose parsed url   href: '2.12.0' }
488 verbose addNamed [ 'smtp-connection', '2.12.0' ]
489 info preinstall socks@1.1.9
490 verbose url raw nodemailer-fetch/1.6.0
491 verbose url resolving [ 'https://registry.npmjs.org/', './nodemailer-fetch/1.6.0' ]
492 verbose url resolved https://registry.npmjs.org/nodemailer-fetch/1.6.0
493 info trying registry request attempt 1 at 09:51:19
494 verbose etag "CXMSGMCRAIXS81ZI0PWWOHC7Z"
495 http GET https://registry.npmjs.org/nodemailer-fetch/1.6.0
496 verbose from cache /Users/david/nodejs-template/node_modules/nodemailer/node_modules/socks/package.json
497 verbose readDependencies using package.json deps
498 verbose from cache /Users/david/nodejs-template/node_modules/nodemailer/node_modules/socks/package.json
499 verbose readDependencies using package.json deps
500 verbose read json /Users/david/nodejs-template/node_modules/nodemailer/node_modules/nodemailer-direct-transport/package.json
501 verbose cache add [ 'ip@^1.1.2', null ]
502 verbose cache add name=undefined spec="ip@^1.1.2" args=["ip@^1.1.2",null]
503 verbose parsed url { protocol: null,
503 verbose parsed url   slashes: null,
503 verbose parsed url   auth: null,
503 verbose parsed url   host: null,
503 verbose parsed url   port: null,
503 verbose parsed url   hostname: null,
503 verbose parsed url   hash: null,
503 verbose parsed url   search: null,
503 verbose parsed url   query: null,
503 verbose parsed url   pathname: 'ip@^1.1.2',
503 verbose parsed url   path: 'ip@^1.1.2',
503 verbose parsed url   href: 'ip@^1.1.2' }
504 verbose cache add name="ip" spec="^1.1.2" args=["ip","^1.1.2"]
505 verbose parsed url { protocol: null,
505 verbose parsed url   slashes: null,
505 verbose parsed url   auth: null,
505 verbose parsed url   host: null,
505 verbose parsed url   port: null,
505 verbose parsed url   hostname: null,
505 verbose parsed url   hash: null,
505 verbose parsed url   search: null,
505 verbose parsed url   query: null,
505 verbose parsed url   pathname: '^1.1.2',
505 verbose parsed url   path: '^1.1.2',
505 verbose parsed url   href: '^1.1.2' }
506 verbose addNamed [ 'ip', '^1.1.2' ]
507 verbose addNamed [ null, null ]
508 silly lockFile ee77ccbb-ip-1-1-2 ip@^1.1.2
509 verbose lock ip@^1.1.2 /Users/david/.npm/ee77ccbb-ip-1-1-2.lock
510 verbose cache add [ 'smart-buffer@^1.0.4', null ]
511 verbose cache add name=undefined spec="smart-buffer@^1.0.4" args=["smart-buffer@^1.0.4",null]
512 verbose parsed url { protocol: null,
512 verbose parsed url   slashes: null,
512 verbose parsed url   auth: null,
512 verbose parsed url   host: null,
512 verbose parsed url   port: null,
512 verbose parsed url   hostname: null,
512 verbose parsed url   hash: null,
512 verbose parsed url   search: null,
512 verbose parsed url   query: null,
512 verbose parsed url   pathname: 'smart-buffer@^1.0.4',
512 verbose parsed url   path: 'smart-buffer@^1.0.4',
512 verbose parsed url   href: 'smart-buffer@^1.0.4' }
513 verbose cache add name="smart-buffer" spec="^1.0.4" args=["smart-buffer","^1.0.4"]
514 verbose parsed url { protocol: null,
514 verbose parsed url   slashes: null,
514 verbose parsed url   auth: null,
514 verbose parsed url   host: null,
514 verbose parsed url   port: null,
514 verbose parsed url   hostname: null,
514 verbose parsed url   hash: null,
514 verbose parsed url   search: null,
514 verbose parsed url   query: null,
514 verbose parsed url   pathname: '^1.0.4',
514 verbose parsed url   path: '^1.0.4',
514 verbose parsed url   href: '^1.0.4' }
515 verbose addNamed [ 'smart-buffer', '^1.0.4' ]
516 verbose addNamed [ null, null ]
517 silly lockFile 457968e3-smart-buffer-1-0-4 smart-buffer@^1.0.4
518 verbose lock smart-buffer@^1.0.4 /Users/david/.npm/457968e3-smart-buffer-1-0-4.lock
519 info addNameTag [ 'ip', '^1.1.2' ]
520 info addNameTag [ 'smart-buffer', '^1.0.4' ]
521 silly lockFile 30248647-ules-nodemailer-direct-transport /Users/david/nodejs-template/node_modules/nodemailer/node_modules/nodemailer-direct-transport
522 silly lockFile 30248647-ules-nodemailer-direct-transport /Users/david/nodejs-template/node_modules/nodemailer/node_modules/nodemailer-direct-transport
523 verbose url raw ip
524 verbose url resolving [ 'https://registry.npmjs.org/', './ip' ]
525 verbose url resolved https://registry.npmjs.org/ip
526 info trying registry request attempt 1 at 09:51:19
527 verbose etag "1LD0YTUMFEUSWYUUQAT7Q6N90"
528 http GET https://registry.npmjs.org/ip
529 verbose url raw smart-buffer
530 verbose url resolving [ 'https://registry.npmjs.org/', './smart-buffer' ]
531 verbose url resolved https://registry.npmjs.org/smart-buffer
532 info trying registry request attempt 1 at 09:51:19
533 verbose etag "91T0DM9LBL5YYYRU95YQIUSA4"
534 http GET https://registry.npmjs.org/smart-buffer
535 silly lockFile f7cd780d-rect-transport-3-3-2-package-tgz /Users/david/.npm/nodemailer-direct-transport/3.3.2/package.tgz
536 silly lockFile f7cd780d-rect-transport-3-3-2-package-tgz /Users/david/.npm/nodemailer-direct-transport/3.3.2/package.tgz
537 info preinstall nodemailer-direct-transport@3.3.2
538 verbose from cache /Users/david/nodejs-template/node_modules/nodemailer/node_modules/nodemailer-direct-transport/package.json
539 verbose readDependencies using package.json deps
540 verbose from cache /Users/david/nodejs-template/node_modules/nodemailer/node_modules/nodemailer-direct-transport/package.json
541 verbose readDependencies using package.json deps
542 verbose cache add [ 'smtp-connection@2.12.0', null ]
543 verbose cache add name=undefined spec="smtp-connection@2.12.0" args=["smtp-connection@2.12.0",null]
544 verbose parsed url { protocol: null,
544 verbose parsed url   slashes: null,
544 verbose parsed url   auth: null,
544 verbose parsed url   host: null,
544 verbose parsed url   port: null,
544 verbose parsed url   hostname: null,
544 verbose parsed url   hash: null,
544 verbose parsed url   search: null,
544 verbose parsed url   query: null,
544 verbose parsed url   pathname: 'smtp-connection@2.12.0',
544 verbose parsed url   path: 'smtp-connection@2.12.0',
544 verbose parsed url   href: 'smtp-connection@2.12.0' }
545 verbose cache add name="smtp-connection" spec="2.12.0" args=["smtp-connection","2.12.0"]
546 verbose parsed url { protocol: null,
546 verbose parsed url   slashes: null,
546 verbose parsed url   auth: null,
546 verbose parsed url   host: null,
546 verbose parsed url   port: null,
546 verbose parsed url   hostname: null,
546 verbose parsed url   hash: null,
546 verbose parsed url   search: null,
546 verbose parsed url   query: null,
546 verbose parsed url   pathname: '2.12.0',
546 verbose parsed url   path: '2.12.0',
546 verbose parsed url   href: '2.12.0' }
547 verbose addNamed [ 'smtp-connection', '2.12.0' ]
548 verbose read json /Users/david/nodejs-template/node_modules/nodemailer/node_modules/libmime/package.json
549 silly lockFile 2454a725--nodemailer-node-modules-libmime /Users/david/nodejs-template/node_modules/nodemailer/node_modules/libmime
550 silly lockFile 2454a725--nodemailer-node-modules-libmime /Users/david/nodejs-template/node_modules/nodemailer/node_modules/libmime
551 silly lockFile 72e9d210-id-npm-libmime-2-1-0-package-tgz /Users/david/.npm/libmime/2.1.0/package.tgz
552 silly lockFile 72e9d210-id-npm-libmime-2-1-0-package-tgz /Users/david/.npm/libmime/2.1.0/package.tgz
553 info preinstall libmime@2.1.0
554 verbose from cache /Users/david/nodejs-template/node_modules/nodemailer/node_modules/libmime/package.json
555 verbose readDependencies using package.json deps
556 verbose from cache /Users/david/nodejs-template/node_modules/nodemailer/node_modules/libmime/package.json
557 verbose readDependencies using package.json deps
558 verbose cache add [ 'iconv-lite@0.4.13', null ]
559 verbose cache add name=undefined spec="iconv-lite@0.4.13" args=["iconv-lite@0.4.13",null]
560 verbose parsed url { protocol: null,
560 verbose parsed url   slashes: null,
560 verbose parsed url   auth: null,
560 verbose parsed url   host: null,
560 verbose parsed url   port: null,
560 verbose parsed url   hostname: null,
560 verbose parsed url   hash: null,
560 verbose parsed url   search: null,
560 verbose parsed url   query: null,
560 verbose parsed url   pathname: 'iconv-lite@0.4.13',
560 verbose parsed url   path: 'iconv-lite@0.4.13',
560 verbose parsed url   href: 'iconv-lite@0.4.13' }
561 verbose cache add name="iconv-lite" spec="0.4.13" args=["iconv-lite","0.4.13"]
562 verbose parsed url { protocol: null,
562 verbose parsed url   slashes: null,
562 verbose parsed url   auth: null,
562 verbose parsed url   host: null,
562 verbose parsed url   port: null,
562 verbose parsed url   hostname: null,
562 verbose parsed url   hash: null,
562 verbose parsed url   search: null,
562 verbose parsed url   query: null,
562 verbose parsed url   pathname: '0.4.13',
562 verbose parsed url   path: '0.4.13',
562 verbose parsed url   href: '0.4.13' }
563 verbose addNamed [ 'iconv-lite', '0.4.13' ]
564 verbose addNamed [ '0.4.13', '0.4.13' ]
565 silly lockFile 7105c99b-iconv-lite-0-4-13 iconv-lite@0.4.13
566 verbose lock iconv-lite@0.4.13 /Users/david/.npm/7105c99b-iconv-lite-0-4-13.lock
567 verbose cache add [ 'libbase64@0.1.0', null ]
568 verbose cache add name=undefined spec="libbase64@0.1.0" args=["libbase64@0.1.0",null]
569 verbose parsed url { protocol: null,
569 verbose parsed url   slashes: null,
569 verbose parsed url   auth: null,
569 verbose parsed url   host: null,
569 verbose parsed url   port: null,
569 verbose parsed url   hostname: null,
569 verbose parsed url   hash: null,
569 verbose parsed url   search: null,
569 verbose parsed url   query: null,
569 verbose parsed url   pathname: 'libbase64@0.1.0',
569 verbose parsed url   path: 'libbase64@0.1.0',
569 verbose parsed url   href: 'libbase64@0.1.0' }
570 verbose cache add name="libbase64" spec="0.1.0" args=["libbase64","0.1.0"]
571 verbose parsed url { protocol: null,
571 verbose parsed url   slashes: null,
571 verbose parsed url   auth: null,
571 verbose parsed url   host: null,
571 verbose parsed url   port: null,
571 verbose parsed url   hostname: null,
571 verbose parsed url   hash: null,
571 verbose parsed url   search: null,
571 verbose parsed url   query: null,
571 verbose parsed url   pathname: '0.1.0',
571 verbose parsed url   path: '0.1.0',
571 verbose parsed url   href: '0.1.0' }
572 verbose addNamed [ 'libbase64', '0.1.0' ]
573 verbose addNamed [ '0.1.0', '0.1.0' ]
574 silly lockFile 2d5db765-libbase64-0-1-0 libbase64@0.1.0
575 verbose lock libbase64@0.1.0 /Users/david/.npm/2d5db765-libbase64-0-1-0.lock
576 verbose cache add [ 'libqp@1.1.0', null ]
577 verbose cache add name=undefined spec="libqp@1.1.0" args=["libqp@1.1.0",null]
578 verbose parsed url { protocol: null,
578 verbose parsed url   slashes: null,
578 verbose parsed url   auth: null,
578 verbose parsed url   host: null,
578 verbose parsed url   port: null,
578 verbose parsed url   hostname: null,
578 verbose parsed url   hash: null,
578 verbose parsed url   search: null,
578 verbose parsed url   query: null,
578 verbose parsed url   pathname: 'libqp@1.1.0',
578 verbose parsed url   path: 'libqp@1.1.0',
578 verbose parsed url   href: 'libqp@1.1.0' }
579 verbose cache add name="libqp" spec="1.1.0" args=["libqp","1.1.0"]
580 verbose parsed url { protocol: null,
580 verbose parsed url   slashes: null,
580 verbose parsed url   auth: null,
580 verbose parsed url   host: null,
580 verbose parsed url   port: null,
580 verbose parsed url   hostname: null,
580 verbose parsed url   hash: null,
580 verbose parsed url   search: null,
580 verbose parsed url   query: null,
580 verbose parsed url   pathname: '1.1.0',
580 verbose parsed url   path: '1.1.0',
580 verbose parsed url   href: '1.1.0' }
581 verbose addNamed [ 'libqp', '1.1.0' ]
582 verbose addNamed [ '1.1.0', '1.1.0' ]
583 silly lockFile 83f4a09a-libqp-1-1-0 libqp@1.1.0
584 verbose lock libqp@1.1.0 /Users/david/.npm/83f4a09a-libqp-1-1-0.lock
585 verbose url raw iconv-lite/0.4.13
586 verbose url resolving [ 'https://registry.npmjs.org/', './iconv-lite/0.4.13' ]
587 verbose url resolved https://registry.npmjs.org/iconv-lite/0.4.13
588 info trying registry request attempt 1 at 09:51:19
589 verbose etag "2PL74RFF5DQ8TE8TTLVLT3N8A"
590 http GET https://registry.npmjs.org/iconv-lite/0.4.13
591 verbose url raw libbase64/0.1.0
592 verbose url resolving [ 'https://registry.npmjs.org/', './libbase64/0.1.0' ]
593 verbose url resolved https://registry.npmjs.org/libbase64/0.1.0
594 info trying registry request attempt 1 at 09:51:19
595 verbose etag "9UYI9HMRQOEDM760U86UPEF6M"
596 http GET https://registry.npmjs.org/libbase64/0.1.0
597 verbose url raw libqp/1.1.0
598 verbose url resolving [ 'https://registry.npmjs.org/', './libqp/1.1.0' ]
599 verbose url resolved https://registry.npmjs.org/libqp/1.1.0
600 info trying registry request attempt 1 at 09:51:19
601 verbose etag "DVIU2OBEI00IN86ZJVXOQQYFF"
602 http GET https://registry.npmjs.org/libqp/1.1.0
603 http 304 https://registry.npmjs.org/nodemailer-fetch/1.6.0
604 silly registry.get cb [ 304,
604 silly registry.get   { date: 'Tue, 04 Oct 2016 16:51:19 GMT',
604 silly registry.get     via: '1.1 varnish',
604 silly registry.get     'cache-control': 'max-age=300',
604 silly registry.get     etag: '"CXMSGMCRAIXS81ZI0PWWOHC7Z"',
604 silly registry.get     age: '0',
604 silly registry.get     connection: 'keep-alive',
604 silly registry.get     'x-served-by': 'cache-sea1920-SEA',
604 silly registry.get     'x-cache': 'HIT',
604 silly registry.get     'x-cache-hits': '1',
604 silly registry.get     'x-timer': 'S1475599879.701948,VS0,VE22',
604 silly registry.get     vary: 'Accept-Encoding' } ]
605 verbose etag nodemailer-fetch/1.6.0 from cache
606 verbose read json /Users/david/.npm/nodemailer-fetch/1.6.0/package/package.json
607 silly lockFile c87ce7a1-nodemailer-fetch-1-6-0 nodemailer-fetch@1.6.0
608 silly lockFile c87ce7a1-nodemailer-fetch-1-6-0 nodemailer-fetch@1.6.0
609 silly resolved [ { name: 'nodemailer-fetch',
609 silly resolved     version: '1.6.0',
609 silly resolved     description: 'GET HTTP contents',
609 silly resolved     main: 'lib/fetch.js',
609 silly resolved     scripts: { test: 'grunt mochaTest' },
609 silly resolved     repository:
609 silly resolved      { type: 'git',
609 silly resolved        url: 'git+https://github.com/nodemailer/nodemailer-fetch.git' },
609 silly resolved     keywords: [ 'nodemailer', 'http' ],
609 silly resolved     devDependencies:
609 silly resolved      { chai: '^3.5.0',
609 silly resolved        grunt: '^1.0.1',
609 silly resolved        'grunt-eslint': '^19.0.0',
609 silly resolved        'grunt-mocha-test': '^0.12.7',
609 silly resolved        mocha: '^3.0.2' },
609 silly resolved     author: { name: 'Andris Reinman' },
609 silly resolved     license: 'MIT',
609 silly resolved     bugs: { url: 'https://github.com/nodemailer/nodemailer-fetch/issues' },
609 silly resolved     homepage: 'https://github.com/nodemailer/nodemailer-fetch#readme',
609 silly resolved     readme: '# nodemailer-fetch\n\nFetches HTTP URL contents for [nodemailer](https://github.com/nodemailer/nodemailer).\n\n[![Build Status](https://secure.travis-ci.org/nodemailer/nodemailer-fetch.svg)](http://travis-ci.org/nodemailer/nodemailer-fetch)\n<a href="http://badge.fury.io/js/nodemailer-fetch"><img src="https://badge.fury.io/js/nodemailer-fetch.svg" alt="NPM version" height="18"></a>\n\n## Usage\n\n```javascript\nvar fetch = require(\'nodemailer-fetch\');\nfetch(\'http://www.google.com/\').pipe(process.stdout);\n```\n\nThe method takes the destination URL as the first and optional options object as the second argument.\n\nThe defaults are the following:\n\n  * Default method is GET\n  * Basic auth is supported\n  * Up to 5 redirects are followed (Basic auth gets lost after first redirect)\n  * gzip is handled if present\n  * Cookies are supported\n  * No shared HTTP Agent\n  * Invalid SSL certs are allowed. Can be overwritten with the `tls` option\n\n### options\n\nPossible options are the following:\n\n  * **userAgent** a string defining the User Agent of the request (by default not set)\n  * **cookie** a cookie string or an array of cookie strings where a cookie is the value used by \'Set-Cookie\' header\n  * **maxRedirects** how many redirects to allow (defaults to 5, set to 0 to disable redirects entirely)\n  * **method** HTTP method to use, defaults to GET (if `body` is set defaults to POST)\n  * **body** HTTP payload to send. If the value is an object it is converted to an *x-www-form-urlencoded* payload, other values are passed as is. Unlike authentication data payload and method is preserved between redirects\n  * **contentType** optional content type for the HTTP payload. Defaults to *x-www-form-urlencoded*. If the value is `false` then Content-Type header is not set\n  * **tls** optional object of TLS options\n  * **timeout** (milliseconds) sets timeout for the connection. Returns an error if timeout occurs\n  * **headers** custom headers as an object where key is the header key and value is either a string or an array of strings for multiple values\n\n  ```javascript\n  var fetch = require(\'nodemailer-fetch\');\n  fetch(\'http://www.google.com/\', {\n      cookie: [\n          \'cookie_name1=cookie_value1\',\n          \'cookie_name2=cookie_value2; expires=Sun, 16 Jul 3567 06:23:41 GMT\',\n      ],\n      userAgent: \'MyFetcher/1.0\'\n  }).pipe(process.stdout);\n  ```\n\n> Cookies are domain specific like normal browser cookies, so if a redirect happens to another domain, then cookies are not passed to it, HTTPS-only cookies are not passed to HTTP etc.\n\n## License\n**MIT**\n',
609 silly resolved     readmeFilename: 'README.md',
609 silly resolved     _id: 'nodemailer-fetch@1.6.0',
609 silly resolved     _from: 'nodemailer-fetch@1.6.0' } ]
610 info install nodemailer-fetch@1.6.0 into /Users/david/nodejs-template/node_modules/nodemailer/node_modules/nodemailer-shared
611 info installOne nodemailer-fetch@1.6.0
612 verbose from cache /Users/david/.npm/nodemailer-fetch/1.6.0/package/package.json
613 info /Users/david/nodejs-template/node_modules/nodemailer/node_modules/nodemailer-shared/node_modules/nodemailer-fetch unbuild
614 verbose read json /Users/david/nodejs-template/node_modules/nodemailer/node_modules/nodemailer-shared/node_modules/nodemailer-fetch/package.json
615 verbose tar unpack /Users/david/.npm/nodemailer-fetch/1.6.0/package.tgz
616 silly lockFile d27fe106-ed-node-modules-nodemailer-fetch /Users/david/nodejs-template/node_modules/nodemailer/node_modules/nodemailer-shared/node_modules/nodemailer-fetch
617 verbose lock /Users/david/nodejs-template/node_modules/nodemailer/node_modules/nodemailer-shared/node_modules/nodemailer-fetch /Users/david/.npm/d27fe106-ed-node-modules-nodemailer-fetch.lock
618 silly lockFile 3b6b4c3e-demailer-fetch-1-6-0-package-tgz /Users/david/.npm/nodemailer-fetch/1.6.0/package.tgz
619 verbose lock /Users/david/.npm/nodemailer-fetch/1.6.0/package.tgz /Users/david/.npm/3b6b4c3e-demailer-fetch-1-6-0-package-tgz.lock
620 silly gunzTarPerm modes [ '755', '644' ]
621 silly gunzTarPerm extractEntry package.json
622 silly gunzTarPerm extractEntry .npmignore
623 silly gunzTarPerm extractEntry README.md
624 silly gunzTarPerm extractEntry LICENSE
625 silly gunzTarPerm extractEntry .eslintrc.js
626 silly gunzTarPerm extractEntry Gruntfile.js
627 silly gunzTarPerm extractEntry .travis.yml
628 silly gunzTarPerm extractEntry CHANGELOG.md
629 silly gunzTarPerm extractEntry lib/cookies.js
630 silly gunzTarPerm extractEntry lib/fetch.js
631 silly gunzTarPerm extractEntry test/cookies-test.js
632 silly gunzTarPerm extractEntry test/fetch-test.js
633 verbose read json /Users/david/nodejs-template/node_modules/nodemailer/node_modules/nodemailer-shared/node_modules/nodemailer-fetch/package.json
634 silly lockFile d27fe106-ed-node-modules-nodemailer-fetch /Users/david/nodejs-template/node_modules/nodemailer/node_modules/nodemailer-shared/node_modules/nodemailer-fetch
635 silly lockFile d27fe106-ed-node-modules-nodemailer-fetch /Users/david/nodejs-template/node_modules/nodemailer/node_modules/nodemailer-shared/node_modules/nodemailer-fetch
636 silly lockFile 3b6b4c3e-demailer-fetch-1-6-0-package-tgz /Users/david/.npm/nodemailer-fetch/1.6.0/package.tgz
637 silly lockFile 3b6b4c3e-demailer-fetch-1-6-0-package-tgz /Users/david/.npm/nodemailer-fetch/1.6.0/package.tgz
638 info preinstall nodemailer-fetch@1.6.0
639 verbose from cache /Users/david/nodejs-template/node_modules/nodemailer/node_modules/nodemailer-shared/node_modules/nodemailer-fetch/package.json
640 verbose readDependencies using package.json deps
641 verbose from cache /Users/david/nodejs-template/node_modules/nodemailer/node_modules/nodemailer-shared/node_modules/nodemailer-fetch/package.json
642 verbose readDependencies using package.json deps
643 silly resolved []
644 verbose about to build /Users/david/nodejs-template/node_modules/nodemailer/node_modules/nodemailer-shared/node_modules/nodemailer-fetch
645 info build /Users/david/nodejs-template/node_modules/nodemailer/node_modules/nodemailer-shared/node_modules/nodemailer-fetch
646 verbose from cache /Users/david/nodejs-template/node_modules/nodemailer/node_modules/nodemailer-shared/node_modules/nodemailer-fetch/package.json
647 verbose linkStuff [ false,
647 verbose linkStuff   false,
647 verbose linkStuff   false,
647 verbose linkStuff   '/Users/david/nodejs-template/node_modules/nodemailer/node_modules/nodemailer-shared/node_modules' ]
648 info linkStuff nodemailer-fetch@1.6.0
649 verbose linkBins nodemailer-fetch@1.6.0
650 verbose linkMans nodemailer-fetch@1.6.0
651 verbose rebuildBundles nodemailer-fetch@1.6.0
652 info install nodemailer-fetch@1.6.0
653 info postinstall nodemailer-fetch@1.6.0
654 verbose about to build /Users/david/nodejs-template/node_modules/nodemailer/node_modules/nodemailer-shared
655 info build /Users/david/nodejs-template/node_modules/nodemailer/node_modules/nodemailer-shared
656 verbose from cache /Users/david/nodejs-template/node_modules/nodemailer/node_modules/nodemailer-shared/package.json
657 verbose linkStuff [ false,
657 verbose linkStuff   false,
657 verbose linkStuff   false,
657 verbose linkStuff   '/Users/david/nodejs-template/node_modules/nodemailer/node_modules' ]
658 info linkStuff nodemailer-shared@1.1.0
659 verbose linkBins nodemailer-shared@1.1.0
660 verbose linkMans nodemailer-shared@1.1.0
661 verbose rebuildBundles nodemailer-shared@1.1.0
662 verbose rebuildBundles [ 'nodemailer-fetch' ]
663 info install nodemailer-shared@1.1.0
664 http 304 https://registry.npmjs.org/smart-buffer
665 silly registry.get cb [ 304,
665 silly registry.get   { date: 'Tue, 04 Oct 2016 16:51:19 GMT',
665 silly registry.get     via: '1.1 varnish',
665 silly registry.get     'cache-control': 'max-age=300',
665 silly registry.get     etag: '"91T0DM9LBL5YYYRU95YQIUSA4"',
665 silly registry.get     age: '0',
665 silly registry.get     connection: 'keep-alive',
665 silly registry.get     'x-served-by': 'cache-sea1920-SEA',
665 silly registry.get     'x-cache': 'HIT',
665 silly registry.get     'x-cache-hits': '1',
665 silly registry.get     'x-timer': 'S1475599879.739342,VS0,VE20',
665 silly registry.get     vary: 'Accept-Encoding' } ]
666 verbose etag smart-buffer from cache
667 info postinstall nodemailer-shared@1.1.0
668 silly lockFile 457968e3-smart-buffer-1-0-4 smart-buffer@^1.0.4
669 silly lockFile 457968e3-smart-buffer-1-0-4 smart-buffer@^1.0.4
670 verbose about to build /Users/david/nodejs-template/node_modules/nodemailer/node_modules/socks
671 info /Users/david/nodejs-template/node_modules/nodemailer/node_modules/socks unbuild
672 verbose from cache /Users/david/nodejs-template/node_modules/nodemailer/node_modules/socks/package.json
673 info preuninstall socks@1.1.9
674 info uninstall socks@1.1.9
675 verbose false,/Users/david/nodejs-template/node_modules,/Users/david/nodejs-template/node_modules/nodemailer/node_modules unbuild socks@1.1.9
676 info postuninstall socks@1.1.9
677 http 304 https://registry.npmjs.org/smtp-connection/2.12.0
678 silly registry.get cb [ 304,
678 silly registry.get   { date: 'Tue, 04 Oct 2016 16:51:19 GMT',
678 silly registry.get     via: '1.1 varnish',
678 silly registry.get     'cache-control': 'max-age=300',
678 silly registry.get     etag: '"2ZRZQM09KRHNSAJLJ4Y24CJZM"',
678 silly registry.get     age: '0',
678 silly registry.get     connection: 'keep-alive',
678 silly registry.get     'x-served-by': 'cache-sea1925-SEA',
678 silly registry.get     'x-cache': 'HIT',
678 silly registry.get     'x-cache-hits': '1',
678 silly registry.get     'x-timer': 'S1475599879.687498,VS0,VE81',
678 silly registry.get     vary: 'Accept-Encoding' } ]
679 verbose etag smtp-connection/2.12.0 from cache
680 verbose read json /Users/david/.npm/smtp-connection/2.12.0/package/package.json
681 verbose about to build /Users/david/nodejs-template/node_modules/nodemailer
682 info /Users/david/nodejs-template/node_modules/nodemailer unbuild
683 verbose from cache /Users/david/nodejs-template/node_modules/nodemailer/package.json
684 info preuninstall nodemailer@2.6.4
685 info uninstall nodemailer@2.6.4
686 verbose true,/Users/david/nodejs-template/node_modules,/Users/david/nodejs-template/node_modules unbuild nodemailer@2.6.4
687 info postuninstall nodemailer@2.6.4
688 silly lockFile ad9cab39-smtp-connection-2-12-0 smtp-connection@2.12.0
689 silly lockFile ad9cab39-smtp-connection-2-12-0 smtp-connection@2.12.0
690 silly resolved [ { name: 'smtp-connection',
690 silly resolved     version: '2.12.0',
690 silly resolved     description: 'Connect to SMTP servers',
690 silly resolved     main: 'lib/smtp-connection.js',
690 silly resolved     directories: { test: 'test' },
690 silly resolved     scripts: { test: 'grunt mochaTest' },
690 silly resolved     repository:
690 silly resolved      { type: 'git',
690 silly resolved        url: 'git://github.com/andris9/smtp-connection.git' },
690 silly resolved     keywords: [ 'SMTP' ],
690 silly resolved     author: { name: 'Andris Reinman' },
690 silly resolved     license: 'MIT',
690 silly resolved     bugs: { url: 'https://github.com/andris9/smtp-connection/issues' },
690 silly resolved     homepage: 'https://github.com/andris9/smtp-connection',
690 silly resolved     devDependencies:
690 silly resolved      { chai: '^3.5.0',
690 silly resolved        grunt: '^1.0.1',
690 silly resolved        'grunt-cli': '^1.2.0',
690 silly resolved        'grunt-eslint': '^19.0.0',
690 silly resolved        'grunt-mocha-test': '^0.12.7',
690 silly resolved        mocha: '^3.0.2',
690 silly resolved        'proxy-test-server': '^1.0.0',
690 silly resolved        sinon: '^1.17.5',
690 silly resolved        'smtp-server': '^1.14.2',
690 silly resolved        xoauth2: '^1.2.0' },
690 silly resolved     dependencies: { httpntlm: '1.6.1', 'nodemailer-shared': '1.1.0' },
690 silly resolved     readme: '# smtp-connection\n\nSMTP client module. Connect to SMTP servers and send mail with it.\n\nThis module is the successor for the client part of the (now deprecated) SMTP module [simplesmtp](https://www.npmjs.com/package/simplesmtp). For matching SMTP server see [smtp-server](https://www.npmjs.com/package/smtp-server).\n\n[![Build Status](https://secure.travis-ci.org/nodemailer/smtp-connection.svg)](http://travis-ci.org/nodemailer/smtp-connection) [![npm version](https://badge.fury.io/js/smtp-connection.svg)](http://badge.fury.io/js/smtp-connection)\n\n## Usage\n\nInstall with npm\n\n```\nnpm install smtp-connection\n```\n\nRequire in your script\n\n```\nvar SMTPConnection = require(\'smtp-connection\');\n```\n\n### Create SMTPConnection instance\n\n```javascript\nvar connection = new SMTPConnection(options);\n```\n\nWhere\n\n- **options** defines connection data\n\n  - **options.port** is the port to connect to (defaults to 25 or 465)\n  - **options.host** is the hostname or IP address to connect to (defaults to \'localhost\')\n  - **options.secure** defines if the connection should use SSL (if `true`) or not (if `false`)\n  - **options.ignoreTLS** turns off STARTTLS support if true\n  - **options.requireTLS** forces the client to use STARTTLS. Returns an error if upgrading the connection is not possible or fails.\n  - **options.opportunisticTLS** tries to use STARTTLS and continues normally if it fails\n  - **options.name** optional hostname of the client, used for identifying to the server\n  - **options.localAddress** is the local interface to bind to for network connections\n  - **options.connectionTimeout** how many milliseconds to wait for the connection to establish\n  - **options.greetingTimeout** how many milliseconds to wait for the greeting after connection is established\n  - **options.socketTimeout** how many milliseconds of inactivity to allow\n  - **options.logger** optional [bunyan](https://github.com/trentm/node-bunyan) compatible logger instance. If set to `true` then logs to console. If value is not set or is `false` then nothing is logged\n  - **options.debug** if set to true, then logs SMTP traffic, otherwise logs only transaction events\n  - **options.authMethod** defines preferred authentication method, e.g. \'PLAIN\'\n  - **options.tls** defines additional options to be passed to the socket constructor, e.g. _{rejectUnauthorized: true}_\n  - **options.socket** - initialized socket to use instead of creating a new one\n  - **options.connection** - connected socket to use instead of creating and connecting a new one. If `secure` option is true, then socket is upgraded from plaintext to ciphertext\n\n### Events\n\nSMTPConnection instances are event emitters with the following events\n\n- **\'error\'** _(err)_ emitted when an error occurs. Connection is closed automatically in this case.\n- **\'connect\'** emitted when the connection is established\n- **\'end\'** when the instance is destroyed\n\n### connect\n\nEstablish the connection\n\n```javascript\nconnection.connect(callback)\n```\n\nWhere\n\n- **callback** is the function to run once the connection is established. The function is added as a listener to the \'connect\' event.\n\nAfter the connect event the `connection` has the following properties:\n\n- **connection.secure** - if `true` then the connection uses a TLS socket, otherwise it is using a cleartext socket. Connection can start out as cleartext but if available (or `requireTLS` is set to true) connection upgrade is tried\n\n### login\n\nIf the server requires authentication you can login with\n\n```javascript\nconnection.login(auth, callback)\n```\n\nWhere\n\n- **auth** is the authentication object\n\n  - **auth.user** is the username\n  - **auth.pass** is the password for the user\n  - **auth.xoauth2** is the OAuth2 access token (preferred if both `pass` and `xoauth2` values are set) or an [XOAuth2](https://github.com/andris9/xoauth2) token generator object.\n\n- **callback** is the callback to run once the authentication is finished. Callback has the following arguments\n\n  - **err** and error object if authentication failed\n\nIf a [XOAuth2](https://github.com/andris9/xoauth2) token generator is used as the value for `auth.xoauth2` then you do not need to set `auth.user`. XOAuth2 generator generates required accessToken itself if it is missing or expired. In this case if the authentication fails, a new token is requeested and the authentication is retried. If it still fails, an error is returned.\n\n**XOAuth2 Example**\n\n```javascript\nvar generator = require(\'xoauth2\').createXOAuth2Generator({\n    user: \'{username}\',\n    clientId: \'{Client ID}\',\n    clientSecret: \'{Client Secret}\',\n    refreshToken: \'{refresh-token}\'\n});\n\n// listen for token updates\n// you probably want to store these to a db\ngenerator.on(\'token\', function(token){\n    console.log(\'New token for %s: %s\', token.user, token.accessToken);\n});\n\n// login\nconnection.login({\n    xoauth2: generator\n}, callback);\n```\n\n### Login using NTLM\n\n`smtp-connection` has experimental support for NTLM authentication. You can try it out like this:\n\n```javascript\nconnection.login({\n    domain: \'windows-domain\',\n    workstation: \'windows-workstation\',\n    user: \'user@somedomain.com\',\n    pass: \'pass\'\n}, callback);\n```\n\nI do not have access to an actual server that supports NTLM authentication so this feature is untested and should be used carefully.\n\n### send\n\nOnce the connection is authenticated (or just after connection is established if authentication is not required), you can send mail with\n\n```javascript\nconnection.send(envelope, message, callback)\n```\n\nWhere\n\n- **envelope** is the envelope object to use\n\n  - **envelope.from** is the sender address\n  - **envelope.to** is the recipient address or an array of addresses\n  - **envelope.size** is an optional value of the predicted size of the message in bytes. This value is used if the server supports the SIZE extension (RFC1870)\n  - **envelope.use8BitMime** if `true` then inform the server that this message might contain bytes outside 7bit ascii range\n  - **envelope.dsn** is the dsn options\n\n    - **envelope.dsn.ret** return either the full message \'FULL\' or only headers \'HDRS\'\n    - **envelope.dsn.envid** sender\'s \'envelope identifier\' for tracking\n    - **envelope.dsn.notify** when to send a DSN. Multiple options are OK - array or comma delimited. NEVER must appear by itself. Available options: \'NEVER\', \'SUCCESS\', \'FAILURE\', \'DELAY\'\n    - **envelope.dsn.orcpt** original recipient\n\n- **message** is either a String, Buffer or a Stream. All newlines are converted to \\r\\n and all dots are escaped automatically, no need to convert anything before.\n\n- **callback** is the callback to run once the sending is finished or failed. Callback has the following arguments\n\n  - **err** and error object if sending failed\n\n    - **code** string code identifying the error, for example \'EAUTH\' is returned when authentication fails\n    - **response** is the last response received from the server (if the error is caused by an error response from the server)\n    - **responseCode** is the numeric response code of the `response` string (if available)\n\n  - **info** information object about accepted and rejected recipients\n\n    - **accepted** an array of accepted recipient addresses. Normally this array should contain at least one address except when in LMTP mode. In this case the message itself might have succeeded but all recipients were rejected after sending the message.\n    - **rejected** an array of rejected recipient addresses. This array includes both the addresses that were rejected before sending the message and addresses rejected after sending it if using LMTP\n    - **rejectedErrors** if some recipients were rejected then this property holds an array of error objects for the rejected recipients\n    - **response** is the last response received from the server\n\n### quit\n\nUse it for graceful disconnect\n\n```javascript\nconnection.quit();\n```\n\n### close\n\nUse it for less graceful disconnect\n\n```javascript\nconnection.close();\n```\n\n### reset\n\nUse it to reset current session (invokes RSET command)\n\n```javascript\nconnection.reset(callback);\n```\n\n## License\n\n**MIT**\n',
690 silly resolved     readmeFilename: 'README.md',
690 silly resolved     _id: 'smtp-connection@2.12.0',
690 silly resolved     _from: 'smtp-connection@2.12.0' } ]
691 info install smtp-connection@2.12.0 into /Users/david/nodejs-template/node_modules/nodemailer/node_modules/nodemailer-direct-transport
692 info installOne smtp-connection@2.12.0
693 verbose from cache /Users/david/.npm/smtp-connection/2.12.0/package/package.json
694 info /Users/david/nodejs-template/node_modules/nodemailer/node_modules/nodemailer-direct-transport/node_modules/smtp-connection unbuild
695 verbose read json /Users/david/nodejs-template/node_modules/nodemailer/node_modules/nodemailer-direct-transport/node_modules/smtp-connection/package.json
696 verbose tar unpack /Users/david/.npm/smtp-connection/2.12.0/package.tgz
697 silly lockFile 9a5c5eee-ort-node-modules-smtp-connection /Users/david/nodejs-template/node_modules/nodemailer/node_modules/nodemailer-direct-transport/node_modules/smtp-connection
698 verbose lock /Users/david/nodejs-template/node_modules/nodemailer/node_modules/nodemailer-direct-transport/node_modules/smtp-connection /Users/david/.npm/9a5c5eee-ort-node-modules-smtp-connection.lock
699 silly lockFile 3852faed-tp-connection-2-12-0-package-tgz /Users/david/.npm/smtp-connection/2.12.0/package.tgz
700 verbose lock /Users/david/.npm/smtp-connection/2.12.0/package.tgz /Users/david/.npm/3852faed-tp-connection-2-12-0-package-tgz.lock
701 silly gunzTarPerm modes [ '755', '644' ]
702 silly gunzTarPerm extractEntry package.json
703 error error rolling back Error: ENOTEMPTY, rmdir '/Users/david/nodejs-template/node_modules/nodemailer/node_modules/nodemailer-direct-transport'
703 error error rolling back  nodemailer@2.6.4 { [Error: ENOTEMPTY, rmdir '/Users/david/nodejs-template/node_modules/nodemailer/node_modules/nodemailer-direct-transport']
703 error error rolling back   errno: 53,
703 error error rolling back   code: 'ENOTEMPTY',
703 error error rolling back   path: '/Users/david/nodejs-template/node_modules/nodemailer/node_modules/nodemailer-direct-transport' }
704 error Error: No compatible version found: smart-buffer@'^1.0.4'
704 error Valid install targets:
704 error ["1.0.0","1.0.1","1.0.3","1.0.4","1.0.5","1.0.6","1.0.7","1.0.8","1.0.9","1.0.10","1.0.11"]
704 error     at installTargetsError (/usr/local/Cellar/node/0.10.2/lib/node_modules/npm/lib/cache.js:685:10)
704 error     at /usr/local/Cellar/node/0.10.2/lib/node_modules/npm/lib/cache.js:607:10
704 error     at saved (/usr/local/Cellar/node/0.10.2/lib/node_modules/npm/node_modules/npm-registry-client/lib/get.js:138:7)
704 error     at Object.oncomplete (fs.js:107:15)
705 error If you need help, you may report this log at:
705 error     <http://github.com/isaacs/npm/issues>
705 error or email it to:
705 error     <npm-@googlegroups.com>
706 error System Darwin 16.0.0
707 error command "/usr/local/Cellar/node/0.10.2/bin/node" "/usr/local/bin/npm" "install" "nodemailer"
708 error cwd /Users/david/nodejs-template
709 error node -v v0.10.2
710 error npm -v 1.2.15
711 verbose exit [ 1, true ]
